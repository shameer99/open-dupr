{
  "openapi": "3.1.0",
  "info": {
    "title": "DUPR Backend APIs",
    "description": "Internal RESTful APIs to access DUPR ratings, users and provide matches.",
    "version": "v1.0.0"
  },
  "servers": [{ "url": "https://api.dupr.gg" }],
  "paths": {
    "/user/{version}/settings": {
      "get": {
        "tags": ["User"],
        "operationId": "getSettings",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperMapStringString"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "put": {
        "tags": ["User"],
        "operationId": "updateSettings",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserSettingsRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/{version}/profile": {
      "get": {
        "tags": ["User"],
        "operationId": "getProfile",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperUserResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "put": {
        "tags": ["User"],
        "operationId": "updateProfile",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PlayerProfileRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperUserResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/{version}/preferences": {
      "put": {
        "tags": ["User"],
        "operationId": "updatePreferences",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPreferencesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/{version}/lucra-connect": {
      "put": {
        "tags": ["User"],
        "operationId": "updateLucraConnection",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserLucraRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/subscription/checkout/session": {
      "put": {
        "tags": ["Subscriptions Controller"],
        "operationId": "createCheckoutSession",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStripeSessionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/social/{version}/login": {
      "get": {
        "tags": ["Social Media"],
        "operationId": "getLoginDetail",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "put": {
        "tags": ["Social Media"],
        "operationId": "updateSocialLoginDetails",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAuthProviderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/media/{version}/image": {
      "put": {
        "tags": ["Media"],
        "operationId": "upload",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": { "type": "string", "format": "binary" }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperMediaResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/media/{version}/document": {
      "put": {
        "tags": ["Media"],
        "operationId": "uploadDocument",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": { "type": "string", "format": "binary" }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperMediaResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/match/{version}/save": {
      "put": {
        "tags": ["Matches"],
        "operationId": "saveMatch",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MatchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperLong" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/match/verified/{version}/save": {
      "put": {
        "tags": ["Matches"],
        "operationId": "saveVerifiedMatch",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/VerifiedMatchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/match/verified/{version}/save/csv/add": {
      "put": {
        "tags": ["Matches"],
        "operationId": "saveVerifiedMatchCVS",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "request": { "type": "string", "format": "binary" }
                },
                "required": ["request"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/event/{version}/open-play/{id}/{version}/update": {
      "put": {
        "tags": ["Open Play"],
        "operationId": "update",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OpenPlayUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/event/{version}/edit": {
      "put": {
        "tags": ["Events"],
        "operationId": "editLeague",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EditLeagueRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperLeagueResponse"
                }
              }
            }
          }
        }
      }
    },
    "/club/{version}/add": {
      "put": {
        "tags": ["Club"],
        "operationId": "addClub",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ClubRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{id}/match/verified/{version}/save/csv/add": {
      "put": {
        "tags": ["Club"],
        "operationId": "saveVerifiedClubMatchCSV",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "request": { "type": "string", "format": "binary" }
                },
                "required": ["request"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/members/{version}/staff": {
      "get": {
        "tags": ["Club"],
        "operationId": "getAllStaffMembers",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperStaffClubMemberResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "put": {
        "tags": ["Club"],
        "operationId": "updateStaffMembers",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffClubMemberRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/members/{version}/multiple/add": {
      "put": {
        "tags": ["Club"],
        "operationId": "addMemberMultipleAdmin",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ClubMemberAddRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperClubMemberManyResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/members/{version}/join": {
      "put": {
        "tags": ["Club"],
        "operationId": "addMemberRequest",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/members/{version}/invite": {
      "put": {
        "tags": ["Club"],
        "operationId": "inviteSingleMember",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InviteRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperString" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/members/{version}/csv/add": {
      "put": {
        "tags": ["Club"],
        "operationId": "addMemberMultipleCsvAdmin",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request": { "type": "string", "format": "binary" }
                },
                "required": ["request"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/members/{version}/add": {
      "put": {
        "tags": ["Club"],
        "operationId": "addMemberAdmin",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserListRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/match/{version}/save": {
      "put": {
        "tags": ["Club"],
        "operationId": "clubSaveMatch",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MatchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/match/{id}/{version}/edit": {
      "put": {
        "tags": ["Club"],
        "operationId": "editClubMatch",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MatchUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperMatchResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/match/bulk": {
      "put": {
        "tags": ["Club"],
        "operationId": "saveVerifiedMultiClubMatchCSV",
        "parameters": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "request": { "type": "string", "format": "binary" }
                },
                "required": ["request"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/brackets/{version}/save": {
      "put": {
        "tags": ["Brackets"],
        "operationId": "saveBracket",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/BracketRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperLeagueResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/{version}/edit": {
      "put": {
        "tags": ["Brackets"],
        "operationId": "editBracket",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EditBracketRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperLeagueResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/director/{version}/edit/bracket_status": {
      "put": {
        "tags": ["Brackets"],
        "operationId": "editBracketStatus",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "leagueId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "bracketId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "UPCOMING",
                "IN_PROGRESS",
                "COMPLETE",
                "CANCELLED",
                "NOT_CONFIRMED",
                "INVITED",
                "CONFIRMED",
                "MATCH_BYE",
                "PENDING",
                "FORFEITED",
                "DELETED",
                "ONGOING",
                "SUSPENDED_TOS_13"
              ]
            }
          },
          {
            "name": "clubId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        }
      }
    },
    "/auth/{version}/device": {
      "put": {
        "tags": ["Authentication"],
        "operationId": "deviceRegistration",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeviceRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/ratings/bulk": {
      "put": {
        "tags": ["Admin"],
        "operationId": "updateRatingsCron",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/S3Object" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/ratings-provisional/batch": {
      "put": {
        "tags": ["Admin"],
        "operationId": "batchPlayerRatingProvisional",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchPlayerRatingProvisionalRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/rating/batch": {
      "put": {
        "tags": ["Admin"],
        "operationId": "batchPlayerRating",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchPlayerRatingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/rating/{id}": {
      "put": {
        "tags": ["Admin"],
        "operationId": "updatePlayerRating",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerRatingUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/player/bulk-reliability-score": {
      "put": {
        "tags": ["Admin"],
        "operationId": "bulkReliabilityScore",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "request": { "type": "string", "format": "binary" }
                },
                "required": ["request"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/user/unclaim": {
      "put": {
        "tags": ["Admin"],
        "operationId": "unclaimUser",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "request",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/DynamicUserIdentityType" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/user/signup": {
      "put": {
        "tags": ["Admin"],
        "operationId": "signup",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SignUpRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperString" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/user/signup/batch": {
      "put": {
        "tags": ["Admin"],
        "operationId": "signupBatch",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "document": { "type": "string", "format": "binary" }
                },
                "required": ["document"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperMapStringString"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/user/profile": {
      "get": {
        "tags": ["Admin"],
        "operationId": "getUserProfile",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperUserResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "put": {
        "tags": ["Admin"],
        "operationId": "updateUserProfile",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PlayerProfileRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperUserResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/user/delete": {
      "put": {
        "tags": ["Admin"],
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "request",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/DynamicUserIdentityType" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/user/{id}/lucra-connect": {
      "put": {
        "tags": ["Admin"],
        "operationId": "updateLucraConnection_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserLucraRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/update/banner": {
      "put": {
        "tags": ["Admin"],
        "operationId": "updateBanner",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateBannerRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/performance": {
      "put": {
        "tags": ["Admin"],
        "operationId": "uploadDuprPerformanceChartData",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/S3Object" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/match/{version}/update": {
      "put": {
        "tags": ["Admin"],
        "operationId": "updateMatch",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MatchUpdateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperMatchResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/es/{id}/mapping": {
      "put": {
        "tags": ["Admin"],
        "operationId": "updateESIndex",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "string" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "tags": ["Admin"],
        "operationId": "reCreateESIndex",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/email/change": {
      "put": {
        "tags": ["Admin"],
        "operationId": "changeEmail",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeEmailAdminRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/block": {
      "put": {
        "tags": ["Admin"],
        "operationId": "blockAdminApis",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "flag",
            "in": "query",
            "required": true,
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "boolean" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/match/delete": {
      "put": {
        "tags": ["Admin"],
        "operationId": "bulkDeleteMatches",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["MATCH_CODE", "OBFUSCATED_MATCH_ID", "MATCH_ID"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "document": { "type": "string", "format": "binary" }
                },
                "required": ["document"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/external-id/bulk": {
      "put": {
        "tags": ["Admin"],
        "operationId": "updateExternalIdCron",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/S3Object" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/clubs/settings": {
      "put": {
        "tags": ["Admin"],
        "operationId": "setClubSettings",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetClubSettingsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "tags": ["Admin"],
        "operationId": "getClubSettings",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetClubSettingsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/clubs/restrictions": {
      "put": {
        "tags": ["Admin"],
        "operationId": "setClubRestrictions",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetClubRestrictionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "tags": ["Admin"],
        "operationId": "getClubRestrictions",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetClubRestrictionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "delete": {
        "tags": ["Admin"],
        "operationId": "removeClubRestrictions",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveClubRestrictionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/clubs/restrictions/bulk": {
      "put": {
        "tags": ["Admin"],
        "operationId": "bulkSetClubRestrictions",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkSetClubRestrictionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/clubs/index": {
      "put": {
        "tags": ["Admin"],
        "operationId": "indexClubs",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/clubs/create": {
      "put": {
        "tags": ["Admin"],
        "operationId": "clubCreate",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateClubsRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/clubs/create/batch": {
      "put": {
        "tags": ["Admin"],
        "operationId": "createClubsBatch",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "document": { "type": "string", "format": "binary" }
                },
                "required": ["document"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperString" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/club/{clubId}/revenue": {
      "put": {
        "tags": ["Admin"],
        "operationId": "updateClubRevenueModel",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClubRevenueModelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperRevenueModel"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/club/{clubId}/currency": {
      "put": {
        "tags": ["Admin"],
        "operationId": "updateClubCurrency",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ClubCurrencyRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/user-subscriptions/{id}": {
      "put": {
        "tags": ["User Subscriptions"],
        "operationId": "updateUserSubscriptions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSubscriptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["User Subscriptions"],
        "operationId": "removeUserSubscriptions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        }
      }
    },
    "/admin/subscriptions/shopify/users/tag": {
      "put": {
        "tags": ["Admin"],
        "operationId": "upsertAndTagShopifyCustomers",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "document": { "type": "string", "format": "binary" }
                },
                "required": ["document"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "delete": {
        "tags": ["Admin"],
        "operationId": "removeTagFromShopifyCustomers",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "document": { "type": "string", "format": "binary" }
                },
                "required": ["document"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/rating/{version}/edit": {
      "put": {
        "tags": ["Admin"],
        "operationId": "adjustRating",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AdjustRatingRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/match/{version}/save": {
      "put": {
        "tags": ["Admin"],
        "operationId": "saveVerifiedMatch_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MatchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/marketing/mapCsvToBrazeSegment": {
      "put": {
        "tags": ["Admin"],
        "operationId": "mapCsvToBrazeSegment",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "document": { "type": "string", "format": "binary" }
                },
                "required": ["document"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/event/{version}/{leagueId}/fees": {
      "put": {
        "tags": ["Admin Event"],
        "operationId": "updateLeagueFees",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "leagueId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LeagueFeesRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperLeagueResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/calculated/{version}/stats": {
      "put": {
        "tags": ["Admin"],
        "operationId": "batchCalculatedStatistics",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/S3Object" }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/calculated/{version}/stats/update": {
      "put": {
        "tags": ["Admin"],
        "operationId": "updatePlayerStatistics",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerStatisticsUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperBoolean"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/address/{version}/save": {
      "put": {
        "tags": ["Address"],
        "operationId": "saveAddress",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddressRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperIdPayload"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/user/{feedId}/{postId}": {
      "get": {
        "tags": ["Activity: Newsfeeds for user"],
        "operationId": "getPostDetail",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The user's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "The post Id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPostResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "put": {
        "tags": ["Activity: Newsfeeds for user"],
        "operationId": "editPost",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The user's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "The post Id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PostRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPostResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "delete": {
        "tags": ["Activity: Newsfeeds for user"],
        "operationId": "removePost",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The user's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "The post Id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/user/{feedId}/{postId}/react": {
      "put": {
        "tags": ["Activity: Newsfeeds for user"],
        "operationId": "updateComment",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The user's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "The post Id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ReactRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "tags": ["Activity: Newsfeeds for user"],
        "operationId": "react",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The user's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "The post Id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ReactRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperReaction"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "delete": {
        "tags": ["Activity: Newsfeeds for user"],
        "operationId": "deleteComment",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The user's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "The post Id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ReactDeleteRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/club/{feedId}/{postId}": {
      "get": {
        "tags": ["Activity: Newsfeeds for club"],
        "operationId": "getPostDetail_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The club's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "The post Id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPostResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "put": {
        "tags": ["Activity: Newsfeeds for club"],
        "operationId": "editPost_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The club's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "The post Id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PostRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPostResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "delete": {
        "tags": ["Activity: Newsfeeds for club"],
        "operationId": "removePost_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The club's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "The post Id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/club/{feedId}/{postId}/react": {
      "put": {
        "tags": ["Activity: Newsfeeds for club"],
        "operationId": "updateComment_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The club's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "The post Id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ReactRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "tags": ["Activity: Newsfeeds for club"],
        "operationId": "react_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The club's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "The post Id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ReactRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperReaction"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "delete": {
        "tags": ["Activity: Newsfeeds for club"],
        "operationId": "deleteComment_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The club's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "The post Id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ReactDeleteRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/{version}/logout": {
      "post": {
        "tags": ["User"],
        "operationId": "logout",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LogoutRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/{version}/initialization/bulk": {
      "post": {
        "tags": ["User"],
        "operationId": "getUserInitializationInformationBulk",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "enum": ["SINGLES", "DOUBLES"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserListRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperPlayerInitializationDataResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/phone/{version}/verify": {
      "post": {
        "tags": ["User"],
        "operationId": "verifyPhoneNumber",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/VerifyOtpRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/phone/{version}/resend": {
      "post": {
        "tags": ["User"],
        "operationId": "sendPhoneOTP",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SendOtpRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/password/{version}/reset": {
      "post": {
        "tags": ["User"],
        "operationId": "resetPassword",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ResetPasswordRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/open/captcha/{version}/verify": {
      "post": {
        "tags": ["User"],
        "operationId": "verifyCaptcha",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/VerifyTokenRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperBoolean"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/email/{version}/verify": {
      "post": {
        "tags": ["User"],
        "operationId": "verifyEmailAddress",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/VerifyEmailRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperBoolean"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/email/{version}/resend": {
      "post": {
        "tags": ["User"],
        "operationId": "sendVerificationEmail",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EmailExistRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/email/verify/{version}/initiate": {
      "post": {
        "tags": ["User"],
        "operationId": "sendEmailVerificationLink",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EmailExistRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/subscription/track": {
      "post": {
        "tags": ["Subscriptions Controller"],
        "operationId": "trackSuccessfulPayment",
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/PaymentReportRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/subscription/manage": {
      "post": {
        "tags": ["Subscriptions Controller"],
        "operationId": "createCustomerPortalSession",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/subscription/checkout/session/status": {
      "post": {
        "tags": ["Subscriptions Controller"],
        "operationId": "getSessionPaymentStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetStripeSessionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/subscription/active": {
      "post": {
        "tags": ["Subscriptions Controller"],
        "operationId": "getSubscriptions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/stripe/{version}/subscriptions": {
      "post": {
        "tags": ["Stripe"],
        "operationId": "subscriptionUpdates",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "stripe-signature",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "string" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/stripe/{version}/payment-intent": {
      "post": {
        "tags": ["Stripe"],
        "operationId": "checkoutPaymentIntent",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "stripe-signature",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "string" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/stripe/{version}/invoices": {
      "post": {
        "tags": ["Stripe"],
        "operationId": "invoiceUpdates",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "stripe-signature",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "string" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/stripe/{version}/checkout": {
      "post": {
        "tags": ["Stripe"],
        "operationId": "checkoutUpdates",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "stripe-signature",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "string" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/stripe/{version}/charge": {
      "post": {
        "tags": ["Stripe"],
        "operationId": "chargeUpdates",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "stripe-signature",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "string" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/stripe/account/{version}/updated": {
      "post": {
        "tags": ["Stripe"],
        "operationId": "clubAccountUpdates",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "stripe-signature",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "string" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/stripe/account/{version}/payment-intent": {
      "post": {
        "tags": ["Stripe"],
        "operationId": "checkoutAccountPaymentIntent",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "stripe-signature",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "string" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/stripe/account/{version}/checkout": {
      "post": {
        "tags": ["Stripe"],
        "operationId": "accountCheckoutUpdates",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "stripe-signature",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "string" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/stripe/account/{version}/charge": {
      "post": {
        "tags": ["Stripe"],
        "operationId": "accountChargeUpdates",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "stripe-signature",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "string" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/social/{version}/{provider}/delete": {
      "post": {
        "tags": ["Social Media"],
        "operationId": "deleteProviderData",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": { "application/json": { "schema": { "type": "string" } } },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/DeleteUserResponse" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/report/{version}": {
      "post": {
        "tags": ["PostReport"],
        "operationId": "reportActivity",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ReportRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPostReport"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/report/{version}/process/{reportId}/{status}": {
      "post": {
        "tags": ["PostReport"],
        "operationId": "reportProcess",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "reportId",
            "in": "path",
            "description": "The report's Id",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "status",
            "in": "path",
            "description": "APPROVE/REJECT",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["PENDING", "IN_REVIEW", "APPROVED", "REJECTED"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/player/{version}/{id}/history": {
      "get": {
        "tags": ["Players"],
        "operationId": "matchHistory",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageMatchResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "tags": ["Players"],
        "operationId": "matchHistoryByFilters",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MatchSearchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageMatchResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/player/{version}/search": {
      "post": {
        "tags": ["Players"],
        "operationId": "search",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SearchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPagePlayerResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/player/{version}/search/public": {
      "post": {
        "tags": ["Players"],
        "operationId": "publicSearch",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SearchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPagePlayerResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/player/{version}/invite": {
      "post": {
        "tags": ["Players"],
        "operationId": "invite",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/InviteRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPlayerResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/player/{version}/claim": {
      "post": {
        "tags": ["Players"],
        "operationId": "searchClaimPlayer",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaimPlayerSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageUnclaimedPlayerResponse"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/player/{version}/claim/details": {
      "post": {
        "tags": ["Players"],
        "operationId": "unclaimedPlayerDetails",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnclaimedPlayerDetailsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultUnclaimedPlayerDetailsResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/player/{version}/{id}/rating-history": {
      "post": {
        "tags": ["Players"],
        "operationId": "getPlayerRatingHistoryOvertime",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayerRatingHistoryOvertimeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPlayerRatingOvertime"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/player/search/byDuprId": {
      "post": {
        "tags": ["Players"],
        "operationId": "playerInfoByDuprId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserByDuprIdRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultUserByDuprIdResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/milp/teams/{version}/save": {
      "post": {
        "tags": ["MiLP Teams"],
        "operationId": "save",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MiLPTeamRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperMiLPTeam"
                }
              }
            }
          }
        }
      }
    },
    "/milp/event/{version}/teams/checkout": {
      "post": {
        "tags": ["MiLP Events"],
        "operationId": "registerTeam",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MiLPRegisterTeamRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperSessionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/milp/event/{version}/search": {
      "post": {
        "tags": ["MiLP Events"],
        "operationId": "searchEvent",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MiLPEventSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageMiLPEvent"
                }
              }
            }
          }
        }
      }
    },
    "/milp/event/{version}/save": {
      "post": {
        "tags": ["MiLP Events"],
        "operationId": "save_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MiLPEventRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperLong" }
              }
            }
          }
        }
      }
    },
    "/match/{version}/share/{id}/newsfeed": {
      "post": {
        "tags": ["Matches"],
        "operationId": "shareMatch",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ShareMatchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPostResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/match/{version}/rating-simulator": {
      "post": {
        "tags": ["Matches"],
        "operationId": "getMatchRatingSimulator",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchRatingSimulatorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/match/{version}/history": {
      "get": {
        "tags": ["Matches"],
        "operationId": "userMatchHistory",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageMatchResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "tags": ["Matches"],
        "operationId": "userMatchHistoryByFilters",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MatchSearchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageMatchResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/match/{version}/confirm": {
      "post": {
        "tags": ["Matches"],
        "operationId": "confirmMatch",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MatchConfirmRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/event/{version}/user/{id}": {
      "post": {
        "tags": ["Events"],
        "operationId": "getLeaguesByUserId",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MyLeagueRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageLeagueResponse"
                }
              }
            }
          }
        }
      }
    },
    "/event/{version}/search": {
      "post": {
        "tags": ["Events"],
        "operationId": "searchLeagues",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SearchLeaguesRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageLeagueResponse"
                }
              }
            }
          }
        }
      }
    },
    "/event/{version}/save": {
      "post": {
        "tags": ["Events"],
        "operationId": "save_2",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LeagueRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/event/{version}/open-play/{id}/register": {
      "post": {
        "tags": ["Open Play"],
        "operationId": "registerEvent",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/event/{version}/open-play/{id}/join-waitlist": {
      "post": {
        "tags": ["Open Play"],
        "operationId": "joinWaitlist",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperOpenPlayEventWaitlist"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/event/{version}/open-play/{id}/invitation/reject": {
      "post": {
        "tags": ["Open Play"],
        "operationId": "rejectInvitation",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/event/{version}/open-play/{id}/invitation/accept": {
      "post": {
        "tags": ["Open Play"],
        "operationId": "acceptInvitation",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/event/{version}/open-play/create": {
      "post": {
        "tags": ["Open Play"],
        "operationId": "create",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OpenPlayCreateRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/event/{version}/draft": {
      "post": {
        "tags": ["Events"],
        "operationId": "draft",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DraftLeagueRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/event/{version}/all": {
      "post": {
        "tags": ["Events"],
        "operationId": "getMyLeagues",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MyLeagueRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageLeagueResponse"
                }
              }
            }
          }
        }
      }
    },
    "/event/{leagueId}/{version}/join": {
      "post": {
        "tags": ["Events"],
        "operationId": "joinEvent",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "leagueId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/JoinLeagueRequest" }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperJoinLeagueResponse"
                }
              }
            }
          }
        }
      }
    },
    "/event/{leagueId}/{version}/checkout": {
      "get": {
        "tags": ["Events"],
        "operationId": "checkoutEvent",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "leagueId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperSessionResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Events"],
        "operationId": "registerEvent_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "leagueId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/JoinLeagueRequest" }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperSessionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/event/director/participant/{version}/all": {
      "post": {
        "tags": ["Events"],
        "operationId": "getAllEventPlayers",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchLeaguePlayerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPagePlayerPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/event/director/participant/payment/{version}/export": {
      "post": {
        "tags": ["Events"],
        "operationId": "exportEventPayments",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportEventPaymentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperDownloadS3Response"
                }
              }
            }
          }
        }
      }
    },
    "/event/announcement/{version}/save": {
      "post": {
        "tags": ["Announcements"],
        "operationId": "save_3",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventAnnouncementRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/event/announcement/{version}/edit": {
      "post": {
        "tags": ["Announcements"],
        "operationId": "edit",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventAnnouncementRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/event/announcement/{version}/draft": {
      "post": {
        "tags": ["Announcements"],
        "operationId": "draft_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventAnnouncementRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/event/announcement/{version}/all": {
      "post": {
        "tags": ["Announcements"],
        "operationId": "getAnnouncements",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnouncementHistoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageEventAnnouncementsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/event/announcement/send/{version}/test": {
      "post": {
        "tags": ["Announcements"],
        "operationId": "sentNotification",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnouncementsNotifications"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        }
      }
    },
    "/club/{version}/update": {
      "post": {
        "tags": ["Club"],
        "operationId": "updateClub",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ClubRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{version}/all": {
      "get": {
        "tags": ["Club"],
        "operationId": "getClubs",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "own",
            "in": "query",
            "required": true,
            "schema": { "type": "boolean" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageClubResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "tags": ["Club"],
        "operationId": "getClubs_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ClubSearch" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageClubResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/{version}/ranking": {
      "post": {
        "tags": ["Club"],
        "operationId": "getMembersRanking",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClubMembersSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperClubMemberRankingResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/{version}/approve": {
      "post": {
        "tags": ["Club"],
        "operationId": "approveRoles",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/IdsListRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/{version}/approval": {
      "post": {
        "tags": ["Club"],
        "operationId": "updateApprovalStatus",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/StatusRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/roles/{version}/user": {
      "post": {
        "tags": ["Club"],
        "operationId": "getClubRoles",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperRoleResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/roles/{version}/remove": {
      "post": {
        "tags": ["Club"],
        "operationId": "removeRoles",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AssignRoleRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/roles/{version}/permission": {
      "post": {
        "tags": ["Club"],
        "operationId": "getClubRolesPlayer",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperRoleResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/roles/{version}/assign": {
      "post": {
        "tags": ["Club"],
        "operationId": "assignRoles",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AssignRoleRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/members/{version}/pending/invites": {
      "post": {
        "tags": ["Club"],
        "operationId": "getClubPendingInvites",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClubMembersSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageClubMemberResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/members/{version}/all": {
      "post": {
        "tags": ["Club"],
        "operationId": "getAllMembers",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClubMembersSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageClubMemberResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/members/{version}/all/download": {
      "post": {
        "tags": ["Club"],
        "operationId": "getAllMembersDownload",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperDownloadS3Response"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/match/{id}/{version}/delete": {
      "post": {
        "tags": ["Club"],
        "operationId": "deleteClubMatch",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeleteMatchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/{version}/restrictions": {
      "post": {
        "tags": ["Club"],
        "operationId": "getClubRestrictions_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/match/{version}/history": {
      "post": {
        "tags": ["Club"],
        "operationId": "clubMatchHistoryByFilters",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClubMatchHistoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageMatchResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/chat/{version}/update/user": {
      "post": {
        "tags": ["Chat"],
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/brackets/{version}/waitlist/teams": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "getBracketWaitlistedTeams",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "enum": ["SINGLES", "DOUBLES"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BracketSearchTeamsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageLeagueTeamsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/{version}/teams": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "getBracketTeams",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "enum": ["SINGLES", "DOUBLES"] }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BracketSearchTeamsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageLeagueTeamsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/{version}/seed": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "seedMatches",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "ROUND_ROBIN" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperMatchRound"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Brackets"],
        "operationId": "saveMatchSeeding",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/MatchRound" }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/player/{version}/withdraw": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "playerWithdraw",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WithdrawPlayerRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/partner/{version}/edit": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "editPartner",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EditPartnerRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/participant/{version}/all": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "getBracketPlayers",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchLeaguePlayerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPagePlayerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/participant/unmatched/{version}/all": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "getUnmatchedPlayers",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchUnmatchedPlayersRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPagePlayerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/match/{version}/save": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "addMatchScore",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LeagueMatchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/match/{version}/history": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "getBracketMatches",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "round",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 10 }
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": { "type": "string", "default": "10" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageLeagueMatchResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Brackets"],
        "operationId": "getBracketMatchesPost",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "round",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 10 }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/BracketMatchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageLeagueMatchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/match/{version}/edit": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "editMatchScore",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EditMatchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/match/{version}/confirm": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "confirmMatch_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeagueMatchConfirmRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/match/participant/{version}/history": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "getUserMatches",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserMatchesRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageLeagueMatchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/director/{version}/withdraw": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "playerWithdrawByDirector",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/WithdrawPlayerRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/director/{version}/refund": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "processRefunds",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EventRefundRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/director/{bracketId}/teams/{version}/save": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "saveTeams",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateNewTeamRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/director/{bracketId}/teams/{version}/edit": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "editTeams",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EditEventTeamRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/director/waitlist/{version}/edit": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "editPlayerWaitList",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/EditWaitListRequest" }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/director/user/{version}/add": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "registerUsersToBracket",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterToBracketRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperJoinLeagueResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/director/teams/{version}/confirm": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "confirmTeamByDirector",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ConfirmTeamRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/director/teams/waitlist/{version}/update": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "switchWaitListedTeams",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BracketPlayerSwitchWaitListedRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        }
      }
    },
    "/brackets/director/team/{version}/switch": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "switchTeams",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/SwitchTeamRequest" }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperSwitchBracketResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/director/team/{version}/switchWaitlisted": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "switchWaitListed",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BracketPlayerSwitchWaitListedRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        }
      }
    },
    "/brackets/director/player/{version}/switch": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "switchPlayer",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/SwitchBracketRequest" }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperSwitchBracketResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/director/participant/{version}/substitute": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "substitutePlayers",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubstitutePlayerRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        }
      }
    },
    "/brackets/director/participant/{version}/all": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "getAllEventPlayers_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchLeaguePlayerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPagePlayerPaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/director/match/{version}/save": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "addMatchScoreByDirector",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LeagueMatchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/director/match/{version}/forfeit": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "forfeitMatch",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ForfeitMatchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/director/match/{version}/edit": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "editMatchScoreByDirector",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EditMatchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/director/match/{version}/confirm": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "confirmMatchDirector",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeagueMatchConfirmRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/director/confirm/match/{version}/edit": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "editConfirmedMatches",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EditMatchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/club/roles/{version}/details": {
      "post": {
        "tags": ["Brackets"],
        "operationId": "getUserClubRole",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserClubRoleRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperBracketClubRoleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/{version}/signup": {
      "post": {
        "tags": ["Authentication"],
        "operationId": "register",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PlayerSignUpRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperAuthResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/auth/{version}/login": {
      "post": {
        "tags": ["Authentication"],
        "operationId": "login",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperAuthResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/auth/{version}/login-read-only-token": {
      "post": {
        "tags": ["Authentication"],
        "operationId": "loginReadOnlyToken",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "x-authorization",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/auth/{version}/login-read-only-token-with-session": {
      "post": {
        "tags": ["Authentication"],
        "operationId": "loginReadOnlyTokenWithFullAccessToken",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "x-authorization",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/auth/panel/{version}/login": {
      "post": {
        "tags": ["Authentication"],
        "operationId": "panelLogin",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperAuthResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/auth/email/{version}/verify": {
      "get": {
        "tags": ["Authentication"],
        "operationId": "verifyEmailAddress_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "minLength": 1 }
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperBoolean"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "tags": ["Authentication"],
        "operationId": "verifyUserEmail",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/VerifyTokenRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperUserResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/auth/email/{version}/exists": {
      "get": {
        "tags": ["Authentication"],
        "operationId": "emailAlreadyExists",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "minLength": 1 },
            "example": "user@example.com"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperBoolean"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "tags": ["Authentication"],
        "operationId": "emailExists",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EmailExistRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperBoolean"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/unknown/players/populate-pre-rating": {
      "post": {
        "tags": ["Admin"],
        "operationId": "populateUnknownPlayerPreRatings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/topic": {
      "post": {
        "tags": ["Admin"],
        "operationId": "saveTopic",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TopicRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperTopicResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/player/batch-reliability-score": {
      "post": {
        "tags": ["Admin"],
        "operationId": "batchSetReliabilityScores",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/S3Object" }
            }
          },
          "required": true
        },
        "responses": { "200": { "description": "OK" } },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/player-rating-history": {
      "post": {
        "tags": ["Admin"],
        "operationId": "triggerMissingEloRatingForPlayers",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/user/status": {
      "post": {
        "tags": ["Admin"],
        "operationId": "updateStatus",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserStatusUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/user/lookup": {
      "post": {
        "tags": ["Admin"],
        "operationId": "userLookup",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserSearchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageUserLookupResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/user/export": {
      "post": {
        "tags": ["Admin"],
        "operationId": "exportUsersViaMail",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/user/{id}/restrict": {
      "post": {
        "tags": ["Admin"],
        "operationId": "restrict",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserRestrictRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/role/change": {
      "post": {
        "tags": ["Admin"],
        "operationId": "changeRole",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ChangeRoleRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/merge": {
      "post": {
        "tags": ["Admin"],
        "operationId": "mergeUsers",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MergeUsersRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperMergeUsersResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/merge/batch": {
      "post": {
        "tags": ["Admin"],
        "operationId": "mergeUsersBatch",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "document": { "type": "string", "format": "binary" }
                },
                "required": ["document"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperString" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/match/delete": {
      "post": {
        "tags": ["Admin"],
        "operationId": "deleteMatch",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeleteMatchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/match/active": {
      "post": {
        "tags": ["Admin"],
        "operationId": "activateMatch",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DeleteMatchRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/email/verify": {
      "post": {
        "tags": ["Admin"],
        "operationId": "verifyEmail",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/VerifyEmailRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/create/banner": {
      "post": {
        "tags": ["Admin"],
        "operationId": "createBanner",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateBannerRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/brackets/user/all": {
      "post": {
        "tags": ["Admin"],
        "operationId": "getUserBracket",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBracketAdminRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageBracketResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/brackets/registration/update": {
      "post": {
        "tags": ["Admin"],
        "operationId": "updatePaymentStatus",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateRegistrationRequest"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/members/index": {
      "post": {
        "tags": ["Admin"],
        "operationId": "indexClubMembers",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/match/reassign": {
      "post": {
        "tags": ["Admin"],
        "operationId": "matchReassign",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchesReassignRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/match/reassign/batch": {
      "post": {
        "tags": ["Admin"],
        "operationId": "matchReassignBatch",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "notify",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "document": { "type": "string", "format": "binary" }
                },
                "required": ["document"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperString" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/match/club-batch": {
      "post": {
        "tags": ["Admin"],
        "operationId": "batchManualClubMatches",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/S3Object" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/match/batch": {
      "post": {
        "tags": ["Admin"],
        "operationId": "batchManualMatches",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/S3Object" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/duplicated": {
      "post": {
        "tags": ["Admin"],
        "operationId": "findDuplicatedAccountForPlayers",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperDuplicatedAccountResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/club/{clubId}/match/batch": {
      "post": {
        "tags": ["Admin"],
        "operationId": "batchClubMatches",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/S3Object" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/client": {
      "post": {
        "tags": ["Admin"],
        "operationId": "createExternalClient",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateClientRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperCreateClientResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/client/permissions": {
      "post": {
        "tags": ["Admin"],
        "operationId": "updateExternalClientPermissions",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientPermissionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperUpdateClientPermissionsResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/client/keys": {
      "post": {
        "tags": ["Admin"],
        "operationId": "getExternalClientPermissions",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetClientPermissionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/client/keys/add": {
      "post": {
        "tags": ["Admin"],
        "operationId": "addKeyToExternalClient",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddClientKeyRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/client/batch": {
      "post": {
        "tags": ["Admin"],
        "operationId": "getExternalClients",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchGetClientsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/bulkwrappedemail": {
      "post": {
        "tags": ["Admin"],
        "operationId": "bulkSendWrappedEmail",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/BulkCoppaEmailRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/bulkuploadpbcomevents": {
      "post": {
        "tags": ["Admin"],
        "operationId": "bulkUploadPbComEvents",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "delay",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "currentPage",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "totalEvents",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/bulkcoppaemail": {
      "post": {
        "tags": ["Admin"],
        "operationId": "bulkSendCoppaEmail",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/BulkCoppaEmailRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/match/pre-rating-impact": {
      "post": {
        "tags": ["Admin"],
        "operationId": "recalculatePreMatchRatings",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CalculateMatchesRange" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/match/elo-rating-recalculation": {
      "post": {
        "tags": ["Admin"],
        "operationId": "recalculateMatchELORatingsBulk",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["MATCH_CODE", "OBFUSCATED_MATCH_ID", "MATCH_ID"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "document": { "type": "string", "format": "binary" }
                },
                "required": ["document"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/match/bulk-pre-rating-impact": {
      "post": {
        "tags": ["Admin"],
        "operationId": "recalculatePreMatchRatings_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["MATCH_CODE", "OBFUSCATED_MATCH_ID", "MATCH_ID"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "document": { "type": "string", "format": "binary" }
                },
                "required": ["document"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/users/enable": {
      "post": {
        "tags": ["Admin"],
        "operationId": "setUsersActiveByDuprId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetDuprIdsInactiveRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResultString" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/users/disable": {
      "post": {
        "tags": ["Admin"],
        "operationId": "setUsersInactiveByDuprId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetDuprIdsInactiveRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResultString" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/user-subscriptions": {
      "get": {
        "tags": ["User Subscriptions"],
        "operationId": "getAllUserSubscriptions",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageUserSubscription"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User Subscriptions"],
        "operationId": "addUserSubscriptions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSubscriptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        }
      }
    },
    "/admin/revenuecat/entitlements/grant": {
      "post": {
        "tags": ["Admin"],
        "operationId": "grantEntitlementsByUserId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminGrantEntitlementByDuprIdRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResultUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/revenuecat/entitlements/grant/bulk": {
      "post": {
        "tags": ["Admin"],
        "operationId": "bulkGrantEntitlementsByUserId",
        "parameters": [
          {
            "name": "entitlements",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["FREE_L1", "PREMIUM_L1", "PREMIUM_L2"]
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "expirationTime": { "type": "integer", "format": "int64" },
                  "file": { "type": "string", "format": "binary" }
                },
                "required": ["expirationTime", "file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResultUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/event/{version}/restore/{leagueId}": {
      "post": {
        "tags": ["Admin Event"],
        "operationId": "restoreDeletedLeague",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "leagueId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/event/{bracketId}/{version}/join": {
      "post": {
        "tags": ["Admin Event"],
        "operationId": "registeredToBracket",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisteredEventAdminRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperJoinLeagueResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/club/staff/{version}/edit": {
      "post": {
        "tags": ["Admin"],
        "operationId": "editClubStaff",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EditClubStaffRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/user/{feedId}": {
      "get": {
        "tags": ["Activity: Newsfeeds for user"],
        "operationId": "fetchFeeds",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The user's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "ref",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperPostResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "tags": ["Activity: Newsfeeds for user"],
        "operationId": "createPost",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The user's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PostRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPostResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/user/{feedId}/follow": {
      "post": {
        "tags": ["Activity: Newsfeeds for user"],
        "operationId": "follow",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The user's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "delete": {
        "tags": ["Activity: Newsfeeds for user"],
        "operationId": "unfollow",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The user's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/club/{feedId}": {
      "get": {
        "tags": ["Activity: Newsfeeds for club"],
        "operationId": "fetchFeeds_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The club's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "ref",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperPostResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "tags": ["Activity: Newsfeeds for club"],
        "operationId": "createPost_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The club's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PostRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPostResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/club/{feedId}/{postId}/pin": {
      "post": {
        "tags": ["Activity: Newsfeeds for club"],
        "operationId": "pinPost",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The club's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "The post Id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "delete": {
        "tags": ["Activity: Newsfeeds for club"],
        "operationId": "unpinPost",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The club's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "The post Id",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/club/{feedId}/follow": {
      "post": {
        "tags": ["Activity: Newsfeeds for club"],
        "operationId": "follow_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The club's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "delete": {
        "tags": ["Activity: Newsfeeds for club"],
        "operationId": "unfollow_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The club's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/admin/utils/sync": {
      "post": {
        "tags": ["Activity: Admin newsfeeds features"],
        "operationId": "syncFeeds",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "slug",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["TIMELINE", "USER", "CLUB", "EVENT", "DUPR", "PARTNER"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/admin/utils/sync/clubFollowers": {
      "post": {
        "tags": ["Activity: Admin newsfeeds features"],
        "operationId": "syncClubFollowers",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "batchSize",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "delay",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/admin/utils/club-followers/same-id": {
      "post": {
        "tags": ["Activity: Admin newsfeeds features"],
        "operationId": "unfollowClubsWithSameIds",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/admin/user-suggestion": {
      "get": {
        "tags": ["Activity: Admin newsfeeds features"],
        "operationId": "getUserSuggestion",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 10 }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageUserSuggestion"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "tags": ["Activity: Admin newsfeeds features"],
        "operationId": "addUserSuggestions",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserSuggestionRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "delete": {
        "tags": ["Activity: Admin newsfeeds features"],
        "operationId": "removeUserSuggestions",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserSuggestionRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/admin/test": {
      "get": {
        "tags": ["Activity: Admin newsfeeds features"],
        "operationId": "fetchFeeds_2",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "slug",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["TIMELINE", "USER", "CLUB", "EVENT", "DUPR", "PARTNER"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "ref",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperPostResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "post": {
        "tags": ["Activity: Admin newsfeeds features"],
        "operationId": "createPost_2",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "slug",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["TIMELINE", "USER", "CLUB", "EVENT", "DUPR", "PARTNER"]
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PostRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPostResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/admin/test/react": {
      "post": {
        "tags": ["Activity: Admin newsfeeds features"],
        "operationId": "react_2",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "actor",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ReactRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperReaction"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/admin/test/follow": {
      "post": {
        "tags": ["Activity: Admin newsfeeds features"],
        "operationId": "follow_2",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "followee",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "followeeType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["TIMELINE", "USER", "CLUB", "EVENT", "DUPR", "PARTNER"]
            }
          },
          {
            "name": "follower",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      },
      "delete": {
        "tags": ["Activity: Admin newsfeeds features"],
        "operationId": "unfollow_2",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "followee",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "followeeType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["TIMELINE", "USER", "CLUB", "EVENT", "DUPR", "PARTNER"]
            }
          },
          {
            "name": "follower",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/index": {
      "patch": {
        "tags": ["Admin"],
        "operationId": "indexPlayers",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/index/{id}": {
      "patch": {
        "tags": ["Admin"],
        "operationId": "indexPlayer",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/referral-code/{version}/update": {
      "patch": {
        "tags": ["Admin"],
        "operationId": "updateReferralCode",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "deprecated": true,
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/{version}/stats": {
      "get": {
        "tags": ["User"],
        "operationId": "getStatistics",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperUserStatisticResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/{version}/sponsor": {
      "get": {
        "tags": ["User"],
        "operationId": "getSponsorLogo",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "obfuscatedId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperSponsorLogoResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/{version}/sole_director": {
      "get": {
        "tags": ["User"],
        "operationId": "isSoleDirector",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperBoolean"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/{version}/rating": {
      "get": {
        "tags": ["User"],
        "operationId": "getRating",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPlayerRatingResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/{version}/initialization/{userId}": {
      "get": {
        "tags": ["User"],
        "operationId": "getUserInitializationInformation",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperPlayerInitializationProgressResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/{version}/compliance": {
      "get": {
        "tags": ["User"],
        "operationId": "getComplianceData",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultUserComplianceDataResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/verified/{version}/stats": {
      "get": {
        "tags": ["User"],
        "operationId": "getVerfiedStatistics",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "deprecated": true,
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/club/membership": {
      "get": {
        "tags": ["User"],
        "operationId": "getClubMembership",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/calculated/{version}/stats/{id}": {
      "get": {
        "tags": ["User"],
        "operationId": "getCalculatedStatistics",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPreCalculatedUserStatisticsResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/subscription": {
      "get": {
        "tags": ["Subscriptions Controller"],
        "operationId": "getCustomerStatus",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        }
      }
    },
    "/social/{version}/instagram/login": {
      "get": {
        "tags": ["Social Media"],
        "operationId": "getInstagramLogin",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "error",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "error_reason",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "error_description",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/social/share/{version}/message": {
      "get": {
        "tags": ["Social Media"],
        "operationId": "getShareMessages",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/report/{version}/{status}": {
      "get": {
        "tags": ["PostReport"],
        "operationId": "getReports",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "status",
            "in": "path",
            "description": "PostReport status",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["PENDING", "IN_REVIEW", "APPROVED", "REJECTED"]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPagePostReport"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/public/user/info": {
      "get": {
        "tags": ["Public"],
        "operationId": "getBasicInfo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ResultBasicInfo" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/player/{version}/{id}": {
      "get": {
        "tags": ["Players"],
        "operationId": "playerInfo",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPlayerResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/player/{version}/stats/{id}": {
      "get": {
        "tags": ["Players"],
        "operationId": "getStatistics_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperUserStatisticResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/player/{version}/claim/{id}": {
      "get": {
        "tags": ["Players"],
        "operationId": "unclaimedPlayer",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperUnclaimedPlayerResponse"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/player-rating-history/{version}": {
      "get": {
        "tags": ["Player Rating History"],
        "operationId": "getPlayerRatingHistoryByUser",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "obfuscatedUserId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPagePlayerRatingHistory"
                }
              }
            }
          }
        }
      }
    },
    "/player-rating-history/{version}/all": {
      "get": {
        "tags": ["Player Rating History"],
        "operationId": "getAllPlayerRatingHistory",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPagePlayerRatingHistory"
                }
              }
            }
          }
        }
      }
    },
    "/payment/club/{clubId}/{version}/status": {
      "get": {
        "tags": ["Payment"],
        "operationId": "clubPaymentStatus",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperAccountStatusResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/payment/club/{clubId}/{version}/setup": {
      "get": {
        "tags": ["Payment"],
        "operationId": "clubSetupPayment",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperAccountLinkResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/payment/club/{clubId}/{version}/dashboard": {
      "get": {
        "tags": ["Payment"],
        "operationId": "clubPaymentDashboard",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperAccountLinkResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/notifications/history": {
      "get": {
        "tags": ["User"],
        "operationId": "history",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationHistoryResponse"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "type": "integer", "format": "int32" }
              }
            }
          }
        }
      }
    },
    "/milp/event/{version}/{id}": {
      "get": {
        "tags": ["MiLP Events"],
        "operationId": "getEventInfo",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperMiLPEvent"
                }
              }
            }
          }
        }
      }
    },
    "/milp/event/{version}/{id}/teams": {
      "get": {
        "tags": ["MiLP Events"],
        "operationId": "getTeams",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperMiLPTeamDivision"
                }
              }
            }
          }
        }
      }
    },
    "/match/{version}/score/formats": {
      "get": {
        "tags": ["Matches"],
        "operationId": "scoreFormats",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperScoreFormatResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/match/{version}/performance": {
      "get": {
        "tags": ["Matches"],
        "operationId": "getDuprPerformanceData",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ArrayWrapperObject" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/match/{version}/performance/{id}": {
      "get": {
        "tags": ["Matches"],
        "operationId": "getDuprPerformanceDataUser",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ArrayWrapperObject" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/match/{version}/pending": {
      "get": {
        "tags": ["Matches"],
        "operationId": "pendingMatchDetails",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ArrayWrapperLong" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/match/{version}/history/unauthenticated/{id}": {
      "get": {
        "tags": ["Matches"],
        "operationId": "getUserMatchHistory",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageMatchResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/match/{id}": {
      "get": {
        "tags": ["Matches"],
        "operationId": "matchDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperMatchResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/event/{version}/{leagueId}": {
      "get": {
        "tags": ["Events"],
        "operationId": "getLeague",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "leagueId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperLeagueResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Events"],
        "operationId": "deleteLeague",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "leagueId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/event/{version}/open-play/{id}": {
      "get": {
        "tags": ["Open Play"],
        "operationId": "getEventDetail",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperOpenPlayEvent"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/event/{version}/open-play/{id}/participants": {
      "get": {
        "tags": ["Open Play"],
        "operationId": "getEventsMembers",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageOpenPlayMember"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/event/{version}/open-play/waitlist/player": {
      "get": {
        "tags": ["Open Play"],
        "operationId": "getWaitlistByPlayer",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPagePlayerQueue"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/event/{version}/open-play/near-by": {
      "get": {
        "tags": ["Open Play"],
        "operationId": "getEventsNearBy",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "longitude",
            "in": "query",
            "required": false,
            "schema": { "type": "number", "format": "double" }
          },
          {
            "name": "latitude",
            "in": "query",
            "required": false,
            "schema": { "type": "number", "format": "double" }
          },
          {
            "name": "radius",
            "in": "query",
            "required": false,
            "schema": { "type": "number", "format": "double" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageOpenPlayEvent"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/event/{version}/open-play/invitation/player": {
      "get": {
        "tags": ["Open Play"],
        "operationId": "getInvitationByPlayer",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPagePlayerQueue"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/event/{leagueId}/{version}/end": {
      "get": {
        "tags": ["Events"],
        "operationId": "endLeague",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "leagueId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/event/{leagueId}/participant/{version}/export": {
      "get": {
        "tags": ["Events"],
        "operationId": "exportEventParticipants",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "leagueId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperDownloadS3Response"
                }
              }
            }
          }
        }
      }
    },
    "/event/policy/{version}/content": {
      "get": {
        "tags": ["Events"],
        "operationId": "getLeaguePolicy",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "leagueId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPolicyDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/event/club/{version}/{clubId}": {
      "get": {
        "tags": ["Events"],
        "operationId": "getClubLeagues",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "includeDraftEvents",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageLeagueResponse"
                }
              }
            }
          }
        }
      }
    },
    "/event/city/{version}/autocomplete": {
      "get": {
        "tags": ["Events"],
        "operationId": "getCityAutocomplete",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": { "$ref": "#/components/schemas/ArrayWrapperString" }
              }
            }
          }
        }
      }
    },
    "/club/{version}/{clubId}": {
      "get": {
        "tags": ["Club"],
        "operationId": "getClub",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperClubResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/{version}/history": {
      "get": {
        "tags": ["Club"],
        "operationId": "clubMatchHistory",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageMatchResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/roles/{version}/all": {
      "get": {
        "tags": ["Club"],
        "operationId": "getAllRoles",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperRoleResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/match/{id}/{version}/get": {
      "get": {
        "tags": ["Club"],
        "operationId": "getMatch",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperMatchResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/roles/{version}/staff": {
      "get": {
        "tags": ["Club"],
        "operationId": "getClubRolesStaff",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperMapStringObject"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/roles/{version}/all": {
      "get": {
        "tags": ["Club"],
        "operationId": "getAllClubRoles",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperClubListingResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/currency/{version}/all": {
      "get": {
        "tags": ["Club"],
        "operationId": "getAllCurrencyDetails",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperCurrencyDetailsResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/currency/{version}/{currencyCode}": {
      "get": {
        "tags": ["Club"],
        "operationId": "getCurrencyDetails",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "currencyCode",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperCurrencyDetailsResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/client/{version}/{clientKey}/name": {
      "get": {
        "tags": ["Client"],
        "operationId": "getClientNameByKey",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clientKey",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperString" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/chat/{version}/token/{id}": {
      "get": {
        "tags": ["Chat"],
        "operationId": "chatToken",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperChatTokenResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/chat/{version}/token/self": {
      "get": {
        "tags": ["Chat"],
        "operationId": "getSelfToken",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperChatTokenResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/brackets/{version}/{bracketId}": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "getBracketById",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperBracketResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/{version}/standing": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "getBracketStanding",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "round",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageLeagueStandingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/{version}/all": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "getUserBrackets",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "UPCOMING",
                "IN_PROGRESS",
                "COMPLETE",
                "CANCELLED",
                "NOT_CONFIRMED",
                "INVITED",
                "CONFIRMED",
                "MATCH_BYE",
                "PENDING",
                "FORFEITED",
                "DELETED",
                "ONGOING",
                "SUSPENDED_TOS_13"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageBracketResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/{leagueId}/{bracketId}/{version}/end": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "endLeague_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "leagueId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "bracketId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/{bracketId}/{version}/teams": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "getBracketTeams_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "enum": ["SINGLES", "DOUBLES"] }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageLeagueTeamsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/{bracketId}/{version}/read": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "getBracketDetailsTeams",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperBracketDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/{bracketId}/queue/{version}/all": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "getBracketMatchQueue",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 0 }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32", "default": 10 }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageLeagueMatchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/{bracketId}/participant/{version}/details": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "getRegistrationDetails",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperRegistrationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/{bracketId}/participant/{version}/all": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "getBracketPlayers_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPagePlayerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/{bracketId}/participant/unmatched/{version}/all": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "getUnmatchedPlayers_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPagePlayerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/{bracketId}/match/{version}/all": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "getAllBracketMatches",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperLeagueMatchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/{bracketId}/director/teams/pending/{version}/all": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "getPendingTeamsToReplace",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperPendingTeamsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/valid/{version}/{leagueId}": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "getValidUserBracketId",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "leagueId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperBracketResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/teams/{version}/pending": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "getPendingConfirmation",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperLeagueTeamsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/match/{leagueMatchId}/queue/{version}/remove": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "removeMatchFromQueue",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "leagueMatchId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/brackets/match/{bracketId}/{version}/structure": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "getWaterfallMatches",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperLeagueMatchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/director/{leagueId}/{userId}/{version}/all": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "getUserEventBrackets",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "leagueId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperBracketResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/director/{bracketId}/{version}/teams": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "getDirectorBracketTeams",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "enum": ["SINGLES", "DOUBLES"] }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageLeagueTeamsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/director/{bracketId}/participant/{version}/export": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "exportBracketParticipants",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "bracketId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperDownloadS3Response"
                }
              }
            }
          }
        }
      }
    },
    "/brackets/approval/{version}/update": {
      "get": {
        "tags": ["Brackets"],
        "operationId": "updateBracketApproval",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "registrationId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "bracketId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "UPCOMING",
                "IN_PROGRESS",
                "COMPLETE",
                "CANCELLED",
                "NOT_CONFIRMED",
                "INVITED",
                "CONFIRMED",
                "MATCH_BYE",
                "PENDING",
                "FORFEITED",
                "DELETED",
                "ONGOING",
                "SUSPENDED_TOS_13"
              ]
            }
          },
          {
            "name": "isClubMember",
            "in": "query",
            "required": false,
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperSessionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/{version}/validate": {
      "get": {
        "tags": ["Authentication"],
        "operationId": "validateAmbassadorCode",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "minLength": 1 },
            "example": "DUPR100"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/auth/{version}/refresh": {
      "get": {
        "tags": ["Authentication"],
        "operationId": "refreshAccessToken",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "x-refresh-token",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/auth/password/{version}/reset": {
      "get": {
        "tags": ["Authentication"],
        "operationId": "resetPassword_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "minLength": 1 }
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "x-password",
            "in": "header",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/auth/password/{version}/initiate": {
      "get": {
        "tags": ["Authentication"],
        "operationId": "initiateResetPassword",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "minLength": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/auth/email/{version}/resend": {
      "get": {
        "tags": ["Authentication"],
        "operationId": "sendVerificationEmail_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "minLength": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/app-ads.txt": {
      "get": {
        "tags": ["root-path-controller"],
        "operationId": "appAds",
        "parameters": [
          {
            "name": "entries",
            "in": "query",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "text/plain": { "schema": { "type": "object" } } }
          }
        }
      }
    },
    "/admin/{version}/team-players/missing/export": {
      "get": {
        "tags": ["Admin"],
        "operationId": "exportMatchesMissingTeamPlayer",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/roles": {
      "get": {
        "tags": ["Admin"],
        "operationId": "getAllRoles_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperRoleResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/user": {
      "get": {
        "tags": ["Admin"],
        "operationId": "duprId",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "duprId",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "externalId",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperAdminUserProfile"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/match/{id}": {
      "get": {
        "tags": ["Admin"],
        "operationId": "getMatch_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperMatchResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/get/banners": {
      "get": {
        "tags": ["Admin"],
        "operationId": "getAllBanner",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperInformativeBannerResponce"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/panel/get/banner": {
      "get": {
        "tags": ["Admin"],
        "operationId": "getActiveBanner",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperInformativeBannerResponce"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/match/export": {
      "get": {
        "tags": ["Admin"],
        "operationId": "matchesExport",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "all",
            "in": "query",
            "required": true,
            "schema": { "type": "boolean" }
          },
          {
            "name": "sources",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DUPR",
                  "MANUAL",
                  "TOURNAMENT",
                  "CLUB",
                  "LEAGUE",
                  "PARTNER",
                  "EXTERNAL"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/match/export/codes": {
      "get": {
        "tags": ["Admin"],
        "operationId": "matchCodesExport",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "sources",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DUPR",
                  "MANUAL",
                  "TOURNAMENT",
                  "CLUB",
                  "LEAGUE",
                  "PARTNER",
                  "EXTERNAL"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/leaderboard/search": {
      "get": {
        "tags": ["Admin"],
        "operationId": "getRatingLeaderboard",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "request",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RatingLeaderboardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/unobfuscate": {
      "get": {
        "tags": ["Admin"],
        "operationId": "unobfuscate",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "USER",
                "MEDIA",
                "ADDRESS",
                "MATCH",
                "TEAM",
                "MILP_TEAM",
                "MILP_EVENT",
                "MILP_DIVISION",
                "MILP_PARTICIPANT",
                "MILP_REGISTRATION",
                "MILP_TEAM_EVENT",
                "SCORE_FORMAT",
                "SUBSCRIPTION",
                "SUBSCRIPTION_PLAN",
                "CLUB",
                "CLUB_ROLE",
                "CLUB_TYPE",
                "CLUB_ACCOUNT",
                "CONTENT",
                "LEAGUE",
                "BRACKET",
                "REGISTRATION",
                "ANNOUNCEMENT",
                "CLIENT",
                "CLIENT_KEY",
                "BANNER",
                "REQUEST",
                "SUBSTITUTION",
                "PLAYER_RATING_HISTORY",
                "EXTERNAL_TOPIC",
                "POST",
                "OPEN_PLAY_EVENT",
                "USER_SUBSCRIPTIONS"
              ]
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/unobfuscate-matchcode": {
      "get": {
        "tags": ["Admin"],
        "operationId": "unobfuscateMatchCode",
        "parameters": [
          {
            "name": "matches",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/obfuscate": {
      "get": {
        "tags": ["Admin"],
        "operationId": "obfuscate",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "USER",
                "MEDIA",
                "ADDRESS",
                "MATCH",
                "TEAM",
                "MILP_TEAM",
                "MILP_EVENT",
                "MILP_DIVISION",
                "MILP_PARTICIPANT",
                "MILP_REGISTRATION",
                "MILP_TEAM_EVENT",
                "SCORE_FORMAT",
                "SUBSCRIPTION",
                "SUBSCRIPTION_PLAN",
                "CLUB",
                "CLUB_ROLE",
                "CLUB_TYPE",
                "CLUB_ACCOUNT",
                "CONTENT",
                "LEAGUE",
                "BRACKET",
                "REGISTRATION",
                "ANNOUNCEMENT",
                "CLIENT",
                "CLIENT_KEY",
                "BANNER",
                "REQUEST",
                "SUBSTITUTION",
                "PLAYER_RATING_HISTORY",
                "EXTERNAL_TOPIC",
                "POST",
                "OPEN_PLAY_EVENT",
                "USER_SUBSCRIPTIONS"
              ]
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/obfuscate-matchid": {
      "get": {
        "tags": ["Admin"],
        "operationId": "obfuscateMatchId",
        "parameters": [
          {
            "name": "toType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["MATCH_CODE", "OBFUSCATED_MATCH_ID", "MATCH_ID"]
            }
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "string" } } }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/match/{version}/history": {
      "get": {
        "tags": ["Admin"],
        "operationId": "adminVerifiedMatchHistory",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageMatchResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/event/{version}/index": {
      "get": {
        "tags": ["Admin Event"],
        "operationId": "indexAllLeagues",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/event/{leagueId}/{version}/index": {
      "get": {
        "tags": ["Admin Event"],
        "operationId": "indexLeaguesById",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "leagueId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/event/player/{version}/index": {
      "get": {
        "tags": ["Admin Event"],
        "operationId": "indexLeaguePlayers",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/encode": {
      "get": {
        "tags": ["Admin"],
        "operationId": "encode",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/decode": {
      "get": {
        "tags": ["Admin"],
        "operationId": "decode",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": { "*/*": { "schema": { "type": "object" } } }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/datascience/provisional_ratings/export": {
      "get": {
        "tags": ["Admin"],
        "operationId": "exportProvisionalRatings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/club/currency/{version}/update": {
      "get": {
        "tags": ["Admin"],
        "operationId": "updateCurrencyRates",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/client/{version}/secret/reset": {
      "get": {
        "tags": ["Admin"],
        "operationId": "resetClientSecret",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clientId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperCreateClientResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/address/{version}/geocode": {
      "get": {
        "tags": ["Address"],
        "operationId": "geocode",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "lat",
            "in": "query",
            "required": true,
            "schema": { "type": "number" },
            "example": 16.691543
          },
          {
            "name": "lon",
            "in": "query",
            "required": true,
            "schema": { "type": "number" },
            "example": 74.225591
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperGeocodingResult"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/address/{version}/details": {
      "get": {
        "tags": ["Address"],
        "operationId": "placeDetails",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "placeId",
            "in": "query",
            "required": true,
            "schema": { "type": "string" },
            "example": "ChIJd7zN_thz54gRnr-lPAaywwo"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperGeocodingResult"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/address/{version}/autocomplete": {
      "get": {
        "tags": ["Address"],
        "operationId": "autocomplete",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": { "type": "string" },
            "example": "san"
          },
          {
            "name": "st",
            "in": "query",
            "required": true,
            "schema": { "type": "string" },
            "example": "2922eecb-11f9-4d74-8123-ad2fc32078f2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperAutocompletePrediction[]"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/user/{feedId}/{postId}/reactions": {
      "get": {
        "tags": ["Activity: Newsfeeds for user"],
        "operationId": "reactions",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The user's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "The post Id",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "ref",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperReaction"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/user/{feedId}/{postId}/comments": {
      "get": {
        "tags": ["Activity: Newsfeeds for user"],
        "operationId": "comments",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The user's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "The post Id",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "ref",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperPostReactionResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/user/{feedId}/user-suggestion": {
      "get": {
        "tags": ["Activity: Newsfeeds for user"],
        "operationId": "getUserSuggestion_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The user's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperPageUserSuggestion"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/user/{feedId}/timeline": {
      "get": {
        "tags": ["Activity: Newsfeeds for user"],
        "operationId": "timeline",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The user's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "ref",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperPostResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/user/{feedId}/followings": {
      "get": {
        "tags": ["Activity: Newsfeeds for user"],
        "operationId": "getListFollowings",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The user's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperActivityUser"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/user/{feedId}/followingInfo": {
      "get": {
        "tags": ["Activity: Newsfeeds for user"],
        "operationId": "getFollowingInfo",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The user's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SingleWrapperFollowingInfo"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/user/{feedId}/followers": {
      "get": {
        "tags": ["Activity: Newsfeeds for user"],
        "operationId": "getListFollowers",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The user's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperActivityUser"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/club/{feedId}/{postId}/reactions": {
      "get": {
        "tags": ["Activity: Newsfeeds for club"],
        "operationId": "reactions_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The club's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "The post Id",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "ref",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperReaction"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/club/{feedId}/{postId}/comments": {
      "get": {
        "tags": ["Activity: Newsfeeds for club"],
        "operationId": "comments_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The club's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "postId",
            "in": "path",
            "description": "The post Id",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "ref",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperPostReactionResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/activity/{version}/club/{feedId}/pinned": {
      "get": {
        "tags": ["Activity: Newsfeeds for club"],
        "operationId": "getPinnedPosts",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "feedId",
            "in": "path",
            "description": "The club's feed Id",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayWrapperPostResponse"
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/user/{version}/delete": {
      "delete": {
        "tags": ["User"],
        "operationId": "deleteUser_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/match/{version}/delete/{id}": {
      "delete": {
        "tags": ["Matches"],
        "operationId": "deleteMatch_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/event/{version}/open-play/{id}/withdraw": {
      "delete": {
        "tags": ["Open Play"],
        "operationId": "withdrawEvent",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SingleWrapperUnit" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/event/{version}/media": {
      "delete": {
        "tags": ["Events"],
        "operationId": "deleteTextContent",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteEventMediaRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/club/{clubId}/members/{version}/remove": {
      "delete": {
        "tags": ["Club"],
        "operationId": "deleteMemberAdmin",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "userIds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "type": "integer", "format": "int64" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/club/{clubId}/members/{version}/leave": {
      "delete": {
        "tags": ["Club"],
        "operationId": "deleteMemberRequest",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/brackets/{version}/{leagueId}/{bracketId}": {
      "delete": {
        "tags": ["Brackets"],
        "operationId": "deleteLeague_1",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "leagueId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          },
          {
            "name": "bracketId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        }
      }
    },
    "/admin/{version}/clubs/restrictions/all": {
      "delete": {
        "tags": ["Admin"],
        "operationId": "removeAllClubRestrictions",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveAllClubRestrictionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/{version}/club/{clubId}": {
      "delete": {
        "tags": ["Admin"],
        "operationId": "deleteClub",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "clubId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/wix/{version}/{version}/delete": {
      "delete": {
        "tags": ["Admin"],
        "operationId": "deleteWixUser",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/event/{version}/{leagueId}": {
      "delete": {
        "tags": ["Admin Event"],
        "operationId": "forceDeleteLeague",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "leagueId",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "format": "int64" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/event/{version}/all": {
      "delete": {
        "tags": ["Admin Event"],
        "operationId": "deleteAllLeague",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/admin/event/player/{version}/all": {
      "delete": {
        "tags": ["Admin Event"],
        "operationId": "deleteEventPlayers",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": { "schema": { "$ref": "#/components/schemas/Wrapper" } }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/address/{version}/delete": {
      "delete": {
        "tags": ["Address"],
        "operationId": "deleteUserAddress",
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/IdPayload" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Wrapper" }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    }
  },
  "components": {
    "schemas": {
      "UserSettingsRequest": {
        "type": "object",
        "properties": {
          "settings": {
            "type": "object",
            "additionalProperties": { "type": "string" }
          }
        },
        "required": ["settings"]
      },
      "Wrapper": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          }
        }
      },
      "PlayerProfileRequest": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "example": "John Doe",
            "minLength": 1
          },
          "firstName": { "type": "string", "example": "John" },
          "lastName": { "type": "string", "example": "Doe" },
          "isoCode": { "type": "string", "example": "US", "minLength": 1 },
          "phone": { "type": "string", "example": 987654321 },
          "username": {
            "type": "string",
            "example": "X AE A-XII",
            "maxLength": 25,
            "minLength": 0
          },
          "displayUsername": { "type": "boolean", "example": true },
          "gender": {
            "type": "string",
            "enum": ["MALE", "FEMALE"],
            "example": "MALE/FEMALE"
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "example": "yyyy-MM-dd"
          },
          "hand": {
            "type": "string",
            "enum": ["RIGHT", "LEFT", "BOTH", "NONE"],
            "example": "LEFT/RIGHT"
          },
          "defaultRating": {
            "type": "string",
            "enum": ["SINGLES", "DOUBLES"],
            "example": "SINGLES/DOUBLES/NONE"
          },
          "addressId": {
            "type": "integer",
            "format": "int64",
            "example": 10684651007
          },
          "mediaId": {
            "type": "integer",
            "format": "int64",
            "example": 4086274008
          },
          "paddleBrand": {
            "type": "string",
            "example": "Selkirk Vanguard Hybrid S2"
          },
          "shoeBrand": { "type": "string", "example": "Nike" },
          "apparelBrand": { "type": "string", "example": "Puma" },
          "preferredBall": { "type": "string", "example": "Balls" },
          "preferredSide": {
            "type": "string",
            "enum": ["RIGHT", "LEFT", "EITHER"],
            "example": "LEFT/RIGHT/EITHER"
          },
          "placeId": {
            "type": "string",
            "example": "ChIJW37e6g4AwTsRfjFKn0_XRiU"
          },
          "isValidPhone": { "type": "boolean", "example": true }
        },
        "required": [
          "addressId",
          "birthdate",
          "defaultRating",
          "fullName",
          "gender",
          "hand"
        ]
      },
      "AddressResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64", "example": 12385789 },
          "addressLine": {
            "type": "string",
            "example": "Apartment, Room, PO Box numbers (optional)"
          },
          "shortAddress": {
            "type": "string",
            "example": "Center Valley, PA, US"
          },
          "formattedAddress": { "type": "string", "example": 5800 },
          "latitude": { "type": "number", "example": 33.194791 },
          "longitude": { "type": "number", "example": -117.048582 },
          "placeId": { "type": "string" },
          "precision": { "type": "string" },
          "status": { "type": "string" },
          "types": { "type": "string" },
          "create": { "type": "string", "format": "date-time" }
        },
        "required": [
          "create",
          "formattedAddress",
          "latitude",
          "longitude",
          "shortAddress"
        ]
      },
      "PlayerRatingResponse": {
        "type": "object",
        "properties": {
          "singles": { "type": "string", "example": 4.125 },
          "singlesVerified": { "type": "string", "example": 4.1 },
          "singlesProvisional": { "type": "boolean" },
          "singlesReliabilityScore": { "type": "number", "example": 10 },
          "doubles": { "type": "string", "example": 2.864 },
          "doublesVerified": { "type": "string", "example": 2.75 },
          "doublesProvisional": { "type": "boolean" },
          "doublesReliabilityScore": { "type": "number", "example": 10 },
          "defaultRating": {
            "type": "string",
            "enum": ["SINGLES", "DOUBLES"],
            "example": "DOUBLES"
          },
          "provisionalRatings": {
            "$ref": "#/components/schemas/ProvisionalRating"
          }
        }
      },
      "ProvisionalRating": {
        "type": "object",
        "properties": {
          "singlesRating": {
            "type": "number",
            "format": "float",
            "example": 3.5
          },
          "doublesRating": {
            "type": "number",
            "format": "float",
            "example": 3.5
          },
          "coach": {
            "$ref": "#/components/schemas/RatingCoach",
            "example": "{ id: 12345, metadata: { name: example }}"
          }
        }
      },
      "RatingCoach": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "metadata": {
            "type": "object",
            "additionalProperties": { "type": "string" }
          }
        },
        "required": ["metadata"]
      },
      "RoleResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64", "example": 424255123 },
          "role": { "type": "string", "example": "PLAYER" },
          "permissions": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": { "type": "string" },
              "uniqueItems": true
            },
            "example": {
              "USER": ["VIEW", "MODIFY"],
              "TOURNAMENT": ["OWN_VIEW", "OWN_MODIFY", "OWN_DELETE"]
            }
          }
        },
        "required": ["id", "permissions", "role"]
      },
      "SingleWrapperUserResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/UserResponse" }
        }
      },
      "UserPreferencesResponse": {
        "type": "object",
        "properties": {
          "enableSms": { "type": "boolean", "example": true },
          "enableEmail": { "type": "boolean", "example": true },
          "enablePush": { "type": "boolean", "example": true },
          "enablePrivacy": { "type": "boolean", "example": true },
          "enableNewsletter": { "type": "boolean", "example": true }
        },
        "required": [
          "enableEmail",
          "enableNewsletter",
          "enablePrivacy",
          "enablePush",
          "enableSms"
        ]
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64", "example": 45785789 },
          "fullName": { "type": "string", "example": "John Doe" },
          "firstName": { "type": "string", "example": "John" },
          "lastName": { "type": "string", "example": "Doe" },
          "username": { "type": "string", "example": "X AE A-XII" },
          "displayUsername": { "type": "boolean", "example": true },
          "isoCode": { "type": "string", "example": "US" },
          "phone": { "type": "string", "example": "+14445785789" },
          "isValidPhone": { "type": "boolean" },
          "email": { "type": "string", "example": "user@exmaple.com" },
          "isValidEmail": { "type": "boolean" },
          "imageUrl": {
            "type": "string",
            "example": "https://dupr-dev.s3.us-east-1.amazonaws.com/users/profile.jpg"
          },
          "referralCode": { "type": "string", "example": "GB0NV05E" },
          "birthdate": {
            "type": "string",
            "format": "date",
            "example": "yyyy-MM-dd"
          },
          "gender": { "type": "string", "enum": ["MALE", "FEMALE"] },
          "hand": {
            "type": "string",
            "enum": ["RIGHT", "LEFT", "BOTH", "NONE"]
          },
          "role": { "$ref": "#/components/schemas/RoleResponse" },
          "stats": { "$ref": "#/components/schemas/PlayerRatingResponse" },
          "addresses": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AddressResponse" }
          },
          "active": { "type": "boolean" },
          "userPreferences": {
            "$ref": "#/components/schemas/UserPreferencesResponse"
          },
          "paddleBrand": {
            "type": "string",
            "example": "Selkirk Vanguard Hybrid S2"
          },
          "shoeBrand": { "type": "string", "example": "Nike" },
          "apparelBrand": { "type": "string", "example": "Puma" },
          "preferredBall": { "type": "string", "example": "Balls" },
          "preferredSide": {
            "type": "string",
            "enum": ["RIGHT", "LEFT", "EITHER"],
            "example": "LEFT/RIGHT/EITHER"
          },
          "restricted": { "type": "boolean", "example": true },
          "lucraConnected": { "type": "boolean", "example": true },
          "validEmail": { "type": "boolean", "writeOnly": true },
          "validPhone": { "type": "boolean", "writeOnly": true }
        },
        "required": [
          "active",
          "email",
          "firstName",
          "fullName",
          "id",
          "lastName"
        ]
      },
      "UserPreferencesRequest": {
        "type": "object",
        "properties": {
          "enableSms": { "type": "boolean", "example": true },
          "enableEmail": { "type": "boolean", "example": true },
          "enablePush": { "type": "boolean", "example": true },
          "enablePrivacy": { "type": "boolean", "example": true },
          "enableNewsletter": { "type": "boolean", "example": true }
        }
      },
      "UserLucraRequest": {
        "type": "object",
        "properties": { "lucraConnected": { "type": "boolean" } },
        "required": ["lucraConnected"]
      },
      "CreateStripeSessionRequest": {
        "type": "object",
        "properties": {
          "clientKey": { "type": "string" },
          "returnUrl": { "type": "string" },
          "successUrl": { "type": "string" },
          "canceledUrl": { "type": "string" }
        },
        "required": ["clientKey", "returnUrl"]
      },
      "FacebookRequest": {
        "type": "object",
        "properties": {
          "token": { "type": "string", "example": "facebook token" }
        },
        "required": ["token"]
      },
      "InstagramRequest": {
        "type": "object",
        "properties": {
          "token": { "type": "string", "example": "instagram token" }
        },
        "required": ["token"]
      },
      "UserAuthProviderRequest": {
        "type": "object",
        "properties": {
          "facebook": { "$ref": "#/components/schemas/FacebookRequest" },
          "instagram": { "$ref": "#/components/schemas/InstagramRequest" }
        }
      },
      "MediaResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64", "example": 45785789 },
          "url": {
            "type": "string",
            "example": "https://dupr-dev.s3.us-east-1.amazonaws.com/users/profile.jpg"
          },
          "filename": { "type": "string", "example": "profile-image.jpg" },
          "error": {
            "type": "string",
            "example": "Unable to upload due to server issue."
          }
        },
        "required": ["id", "url"]
      },
      "SingleWrapperMediaResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/MediaResponse" }
        }
      },
      "MatchRequest": {
        "type": "object",
        "properties": {
          "venue": {
            "type": "string",
            "deprecated": true,
            "description": "Since 2022, we are only using location field based on autocomplete",
            "example": "Dreamland Pickleball"
          },
          "location": { "type": "string", "example": "Newport Beach, CA" },
          "tournament": {
            "type": "string",
            "example": "Newport Beach Doubles Shootout"
          },
          "league": { "type": "string", "example": "Example League" },
          "eventDate": {
            "type": "string",
            "format": "date",
            "example": "yyyy-MM-dd"
          },
          "team1": { "$ref": "#/components/schemas/Team" },
          "team2": { "$ref": "#/components/schemas/Team" },
          "scoreFormatId": {
            "type": "integer",
            "format": "int64",
            "example": 56168168161
          },
          "format": {
            "type": "string",
            "enum": ["SINGLES", "DOUBLES"],
            "example": "SINGLES"
          },
          "event": { "type": "string", "example": "event name" },
          "matchType": {
            "type": "string",
            "enum": ["SIDE_ONLY", "RALLY"],
            "example": "SIDE_ONLY/RALLY"
          },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 41224223332
          },
          "notify": { "type": "boolean", "example": true },
          "scores": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PairIntegerInteger" }
          }
        },
        "required": [
          "eventDate",
          "format",
          "notify",
          "scores",
          "team1",
          "team2"
        ]
      },
      "PairIntegerInteger": {
        "type": "object",
        "properties": {
          "first": { "type": "integer", "format": "int32" },
          "second": { "type": "integer", "format": "int32" }
        },
        "required": ["first", "second"]
      },
      "Team": {
        "type": "object",
        "properties": {
          "player1": {
            "type": "integer",
            "format": "int64",
            "example": 4564651818
          },
          "player2": {
            "type": "integer",
            "format": "int64",
            "example": 9884984848
          },
          "game1": { "type": "integer", "format": "int32", "example": 7 },
          "game2": { "type": "integer", "format": "int32", "example": 11 },
          "game3": { "type": "integer", "format": "int32", "example": 0 },
          "game4": { "type": "integer", "format": "int32", "example": 0 },
          "game5": { "type": "integer", "format": "int32", "example": 0 },
          "winner": { "type": "boolean" }
        },
        "required": ["game1", "player1", "winner"]
      },
      "SingleWrapperLong": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "type": "integer", "format": "int64" }
        }
      },
      "VerifiedMatchRequest": {
        "type": "object",
        "properties": {
          "tournamentName": { "type": "string" },
          "eventName": { "type": "string" },
          "eventDate": { "type": "string" },
          "venue": { "type": "string" },
          "location": { "type": "string" },
          "teamAPlayer1": { "type": "string" },
          "teamAPlayer2": { "type": "string" },
          "teamBPlayer1": { "type": "string" },
          "teamBPlayer2": { "type": "string" },
          "winningTeam": { "type": "string" },
          "teamAPointsGame1": { "type": "integer", "format": "int32" },
          "teamBPointsGame1": { "type": "integer", "format": "int32" },
          "teamAPointsGame2": { "type": "integer", "format": "int32" },
          "teamBPointsGame2": { "type": "integer", "format": "int32" },
          "teamAPointsGame3": { "type": "integer", "format": "int32" },
          "teamBPointsGame3": { "type": "integer", "format": "int32" },
          "teamAPointsGame4": { "type": "integer", "format": "int32" },
          "teamBPointsGame4": { "type": "integer", "format": "int32" },
          "teamAPointsGame5": { "type": "integer", "format": "int32" },
          "teamBPointsGame5": { "type": "integer", "format": "int32" },
          "teamAPlayer1ID": { "type": "string" },
          "teamAPlayer2ID": { "type": "string" },
          "teamBPlayer1ID": { "type": "string" },
          "teamBPlayer2ID": { "type": "string" },
          "clubId": { "type": "integer", "format": "int64" }
        },
        "required": [
          "eventDate",
          "eventName",
          "teamAPlayer1ID",
          "teamAPointsGame1",
          "teamBPlayer1ID",
          "teamBPointsGame1",
          "tournamentName",
          "winningTeam"
        ]
      },
      "OpenPlayUpdateRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "Dreamland Open Play" },
          "eventDate": {
            "type": "string",
            "format": "date",
            "example": "YYYY-MM-dd"
          },
          "time": {
            "$ref": "#/components/schemas/TimeRange",
            "example": "HH:mm:ss"
          },
          "addressId": {
            "type": "integer",
            "format": "int64",
            "example": 5156151658
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "ACTIVE/INACTIVE"
          },
          "rating": {
            "$ref": "#/components/schemas/RatingRange",
            "example": 2.0
          },
          "description": {
            "type": "string",
            "example": "Welcome to new open play event"
          }
        },
        "required": [
          "addressId",
          "eventDate",
          "name",
          "rating",
          "status",
          "time"
        ]
      },
      "RatingRange": {
        "type": "object",
        "properties": {
          "min": { "type": "number" },
          "max": { "type": "number" }
        },
        "required": ["max", "min"]
      },
      "TimeRange": {
        "type": "object",
        "properties": {
          "start": { "type": "string", "example": "14:30:00" },
          "end": { "type": "string", "example": "14:30:00" }
        },
        "required": ["end", "start"]
      },
      "SingleWrapperUnit": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          }
        }
      },
      "Attribute": {
        "type": "object",
        "properties": {
          "value": { "type": "string", "example": "String" },
          "get_comment": {
            "type": "string",
            "example": "Contact person name, if provided."
          },
          "get_children": {
            "type": "object",
            "additionalProperties": { "$ref": "#/components/schemas/Attribute" }
          }
        },
        "required": ["get_comment", "value"]
      },
      "EditLeagueRequest": {
        "type": "object",
        "properties": {
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "leagueName": {
            "type": "string",
            "example": "Stillwater Pickleball"
          },
          "mediaId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "liabilityWaiverId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "memberFee": { "type": "number", "example": 500 },
          "nonMemberFee": { "type": "number", "example": 500 },
          "longDescription": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "shortDescription": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "additionalInformation": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "refundPolicy": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "safetyPolicy": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "addressId": {
            "type": "integer",
            "format": "int64",
            "example": 5156151658
          },
          "type": { "type": "string", "enum": ["FLEX"], "example": "FLEX" },
          "attributes": {
            "type": "object",
            "additionalProperties": { "$ref": "#/components/schemas/Attribute" }
          },
          "membershipPermission": {
            "type": "string",
            "enum": ["OPEN_TO_ALL", "CLUB_MEMBERS"],
            "example": "OPEN_TO_ALL/CLUB_MEMBERS"
          },
          "advertiseStart": {
            "type": "string",
            "format": "date",
            "example": "yyyy-mm-dd"
          },
          "advertiseEnd": {
            "type": "string",
            "format": "date",
            "example": "yyyy-mm-dd"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "ACTIVE/IN_PROGRESS/COMPLETE/CANCELLED"
          },
          "registrationUrl": {
            "type": "string",
            "example": "https://mydupr.com/register"
          },
          "startDate": { "type": "string", "format": "date" },
          "endDate": { "type": "string", "format": "date" }
        },
        "required": [
          "addressId",
          "leagueId",
          "leagueName",
          "nonMemberFee",
          "userId"
        ]
      },
      "LeagueContentRequest": {
        "type": "object",
        "properties": {
          "header": { "type": "string", "example": "<h1>header</h1>" },
          "headerType": { "type": "string", "example": "text/html" },
          "content": { "type": "string", "example": "<h1>content</h1>" },
          "contentType": { "type": "string", "example": "text/html" },
          "footer": { "type": "string", "example": "<h1>footer</h1>" },
          "footerType": { "type": "string", "example": "text/html" },
          "contentId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          }
        },
        "required": ["content", "contentType"]
      },
      "BracketResponse": {
        "type": "object",
        "properties": {
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "name": { "type": "string", "example": "Stillwater Pickleball" },
          "customCode": { "type": "string", "example": "BRACKET123" },
          "duration": {
            "type": "array",
            "example": "['yyyy-mm-dd','yyyy-mm-dd']",
            "items": { "type": "string" }
          },
          "format": {
            "type": "string",
            "enum": ["SINGLES", "DOUBLES"],
            "example": "SINGLES/DOUBLES"
          },
          "elimination": {
            "type": "string",
            "enum": [
              "SINGLE",
              "DOUBLE",
              "DOUBLE_PREVENTED",
              "ROUND_ROBIN",
              "COMPASS",
              "FLEX"
            ],
            "example": "SINGLE/DOUBLE/DOUBLE_PREVENTED/ROUND_ROBIN"
          },
          "playerGroup": {
            "type": "string",
            "enum": ["MEN", "WOMEN", "MIXED", "COED", "OPEN"],
            "example": "MEN/WOMEN/MIXED/COED"
          },
          "ratingBracket": {
            "type": "array",
            "example": [3.1, 4.5],
            "items": { "type": "number" }
          },
          "ageBracket": {
            "type": "array",
            "example": [27, 35],
            "items": { "type": "integer", "format": "int32" }
          },
          "description": {
            "$ref": "#/components/schemas/LeagueContentResponse"
          },
          "matchBonusPoints": { "type": "number", "example": 8 },
          "registrationDate": {
            "type": "array",
            "example": "['yyyy-mm-dd','yyyy-mm-dd']",
            "items": { "type": "string" }
          },
          "scoreFormat": { "type": "string", "example": 1 },
          "memberFee": { "type": "number", "example": 500 },
          "nonMemberFee": { "type": "number", "example": 500 },
          "maxTeam": { "type": "integer", "format": "int64", "example": 500 },
          "waitList": { "type": "integer", "format": "int64", "example": 500 },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "ACTIVE/IN_PROGRESS/COMPLETE/CANCELLED"
          },
          "scoreFormatId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "registrationStatus": { "type": "string", "example": "OPEN/CLOSED" },
          "durationStatus": {
            "type": "string",
            "example": "IN_PROGRESS/UPCOMING"
          },
          "registrationDetails": {
            "$ref": "#/components/schemas/RegistrationResponse"
          },
          "leagueName": {
            "type": "string",
            "example": "Stillwater Pickleball"
          },
          "leagueAddress": { "$ref": "#/components/schemas/AddressResponse" },
          "mediaUrl": { "type": "string", "example": "www.url.com/image.jpg" },
          "totalRounds": { "type": "integer", "format": "int64", "example": 1 },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeagueContactDetailResponse"
            }
          },
          "isRegistered": { "type": "boolean", "example": true },
          "clubName": { "type": "string", "example": "Stillwater Pickleball" },
          "registeredMembers": { "type": "integer", "format": "int64" },
          "isMatchSeeded": { "type": "boolean" },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "isWaitListFull": { "type": "boolean", "example": 45785789 },
          "displayStatus": {
            "type": "string",
            "example": "Draft/Upcoming/Open/Ongoing"
          },
          "hasConfirmMatch": {
            "type": "boolean",
            "example": "Draft/Upcoming/Open/Ongoing"
          },
          "hasQueue": { "type": "boolean", "example": true },
          "isQueueComplete": { "type": "boolean", "example": true },
          "canShowStandings": { "type": "boolean", "example": true },
          "courts": { "type": "integer", "format": "int64", "example": 5 },
          "registrationDateTime": {
            "type": "array",
            "example": "['yyyy-mm-ddTHH:mm:ss','yyyy-mm-ddTHH:mm:ss']",
            "items": { "type": "string" }
          },
          "durationDateTime": {
            "type": "array",
            "example": "['yyyy-mm-ddTHH:mm:ss','yyyy-mm-ddTHH:mm:ss']",
            "items": { "type": "string" }
          },
          "timeZone": { "type": "string", "example": "IST" },
          "zoneName": { "type": "string", "example": "IST" },
          "isPlayerEligible": { "type": "boolean", "example": true },
          "drawImpacted": { "type": "boolean", "example": true },
          "paymentDetails": {
            "$ref": "#/components/schemas/PaymentDetailsResponse"
          },
          "regUserId": { "type": "integer", "format": "int64" },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "currencyDetails": {
            "$ref": "#/components/schemas/CurrencyDetailsResponse"
          },
          "matchSeeded": { "type": "boolean", "writeOnly": true },
          "registered": { "type": "boolean", "writeOnly": true },
          "waitListFull": { "type": "boolean", "writeOnly": true },
          "queueComplete": { "type": "boolean", "writeOnly": true },
          "playerEligible": { "type": "boolean", "writeOnly": true }
        },
        "required": [
          "bracketId",
          "clubId",
          "clubName",
          "duration",
          "isRegistered",
          "isWaitListFull",
          "leagueId",
          "leagueName",
          "nonMemberFee",
          "paymentStatus",
          "scoreFormat",
          "scoreFormatId",
          "waitList"
        ]
      },
      "CurrencyDetailsResponse": {
        "type": "object",
        "properties": {
          "currencyCode": { "type": "string", "example": "USD" },
          "currencySymbol": { "type": "string", "example": "$" },
          "currencyName": { "type": "string", "example": "US Dollar" },
          "minLimit": { "type": "number", "format": "double", "example": 100 }
        },
        "required": [
          "currencyCode",
          "currencyName",
          "currencySymbol",
          "minLimit"
        ]
      },
      "LeagueContactDetailResponse": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "Dreamland pickalball" },
          "email": { "type": "string", "example": "hisenberg@yopmail.com" },
          "phone": { "type": "string", "example": 18022214966 },
          "address": { "type": "string", "example": "PA 18034, United States" },
          "type": { "type": "string", "example": "person/club" },
          "priority": { "type": "integer", "format": "int32", "example": 1 }
        },
        "required": ["priority", "type"]
      },
      "LeagueContentResponse": {
        "type": "object",
        "properties": {
          "contentId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "header": { "type": "string", "example": "<h1>header</h1>" },
          "headerType": { "type": "string", "example": "text/html" },
          "content": { "type": "string", "example": "<h1>content</h1>" },
          "contentType": { "type": "string", "example": "text/html" },
          "footer": { "type": "string", "example": "<h1>footer</h1>" },
          "footerType": { "type": "string", "example": "text/html" }
        },
        "required": ["content", "contentId", "contentType"]
      },
      "LeagueResponse": {
        "type": "object",
        "properties": {
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "leagueName": {
            "type": "string",
            "example": "Stillwater Pickleball"
          },
          "mediaUrl": { "type": "string", "example": "www.url.com/image.jpg" },
          "liabilityWaiverUrl": {
            "type": "string",
            "example": "www.url.com/doc.pdf"
          },
          "memberFee": { "type": "number", "example": 500 },
          "nonMemberFee": { "type": "number", "example": 500 },
          "membershipPermission": {
            "type": "string",
            "enum": ["OPEN_TO_ALL", "CLUB_MEMBERS"],
            "example": "OPEN_TO_ALL/CLUB_MEMBERS"
          },
          "shortDescription": {
            "$ref": "#/components/schemas/LeagueContentResponse"
          },
          "longDescription": {
            "$ref": "#/components/schemas/LeagueContentResponse"
          },
          "additionalInformation": {
            "$ref": "#/components/schemas/LeagueContentResponse"
          },
          "refundPolicy": {
            "$ref": "#/components/schemas/LeagueContentResponse"
          },
          "safetyPolicy": {
            "$ref": "#/components/schemas/LeagueContentResponse"
          },
          "address": { "$ref": "#/components/schemas/AddressResponse" },
          "duration": {
            "type": "array",
            "example": "['yyyy-mm-dd','yyyy-mm-dd']",
            "items": { "type": "string" }
          },
          "registrationDate": {
            "type": "array",
            "example": "['yyyy-mm-dd','yyyy-mm-dd']",
            "items": { "type": "string" }
          },
          "type": { "type": "string", "enum": ["FLEX"], "example": "FLEX" },
          "attributes": {
            "type": "object",
            "additionalProperties": { "type": "object" },
            "example": "{'additionalProp1':{'children':{},'comment':'Contact person name, if provided.','value':'String'}}"
          },
          "brackets": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BracketResponse" }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "ACTIVE/IN_PROGRESS/COMPLETE/CANCELLED"
          },
          "distance": { "type": "string", "example": "Nearby" },
          "distanceInMiles": {
            "type": "number",
            "format": "double",
            "example": 15.4
          },
          "leaguePrice": { "type": "string", "example": "$40 - $50" },
          "skillLevel": { "type": "string", "example": "DUPR 3 - 4" },
          "ageString": { "type": "string", "example": 20 },
          "playerGroup": { "type": "string", "example": "MEN,MIXED" },
          "durationString": {
            "type": "string",
            "example": "2021-11-07 - 2021-11-08"
          },
          "registrationString": {
            "type": "string",
            "example": "2021-11-07 - 2021-11-08"
          },
          "registrationStatus": { "type": "string", "example": "OPEN/CLOSED" },
          "eventFormatString": {
            "type": "string",
            "example": "SINGLES,DOUBLES"
          },
          "eliminationString": { "type": "string", "example": "ROUND_ROBIN" },
          "shortAddress": {
            "type": "string",
            "example": "Miami-Dade County, FL, US"
          },
          "clubName": { "type": "string", "example": "Stillwater Pickleball" },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeagueContactDetailResponse"
            }
          },
          "registeredMembers": { "type": "integer", "format": "int64" },
          "durationStatus": {
            "type": "string",
            "example": "IN_PROGRESS/UPCOMING/COMPLETE"
          },
          "displayStatus": {
            "type": "string",
            "example": "Draft/Upcoming/Open/Ongoing"
          },
          "isRegistered": { "type": "boolean" },
          "canShowStandings": { "type": "boolean", "example": true },
          "liabilityWaiverId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "mediaId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "registrationDateTime": {
            "type": "array",
            "example": "['yyyy-mm-ddTHH:mm:ss','yyyy-mm-ddTHH:mm:ss']",
            "items": { "type": "string" }
          },
          "durationDateTime": {
            "type": "array",
            "example": "['yyyy-mm-ddTHH:mm:ss','yyyy-mm-ddTHH:mm:ss']",
            "items": { "type": "string" }
          },
          "registrationDateTimeUTC": {
            "type": "array",
            "example": "['yyyy-mm-ddTHH:mm:ss','yyyy-mm-ddTHH:mm:ss']",
            "items": { "type": "string" }
          },
          "durationDateTimeUTC": {
            "type": "array",
            "example": "['yyyy-mm-ddTHH:mm:ss','yyyy-mm-ddTHH:mm:ss']",
            "items": { "type": "string" }
          },
          "currencyDetails": {
            "$ref": "#/components/schemas/CurrencyDetailsResponse",
            "example": "['yyyy-mm-ddTHH:mm:ss','yyyy-mm-ddTHH:mm:ss']"
          },
          "registrationUrl": {
            "type": "string",
            "example": "https://mydupr.com/register"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "example": "yyyy-mm-dd"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "example": "yyyy-mm-dd"
          },
          "registered": { "type": "boolean", "writeOnly": true }
        },
        "required": [
          "brackets",
          "clubId",
          "duration",
          "endDate",
          "leagueId",
          "leagueName",
          "liabilityWaiverId",
          "mediaId",
          "nonMemberFee",
          "registrationDate",
          "startDate",
          "userId"
        ]
      },
      "Participant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 26518181881
          },
          "fullName": { "type": "string", "example": "Brian Lara" },
          "username": { "type": "string", "example": "X AE A-XII" },
          "displayUsername": { "type": "boolean", "example": true },
          "partnerStatus": {
            "type": "string",
            "example": "NOT_ADDED/CONFIRMED/NOT_CONFIRMED/PAYMENT_DUE"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "NOT_ADDED/CONFIRMED/NOT_CONFIRMED/PAYMENT_DUE"
          },
          "paymentDue": { "type": "string", "example": "2021-12-01" },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "PENDING/COMPLETE"
          },
          "isRegistered": { "type": "boolean", "example": "PENDING/COMPLETE" },
          "isWaitListed": { "type": "boolean", "example": true },
          "isCLubMember": { "type": "boolean", "example": true },
          "paymentRefunded": { "type": "boolean", "example": true },
          "refundAmount": { "type": "number", "example": true },
          "isSubstitute": { "type": "boolean", "example": true },
          "clubMember": { "type": "boolean", "writeOnly": true },
          "waitListed": { "type": "boolean", "writeOnly": true },
          "substitute": { "type": "boolean", "writeOnly": true },
          "registered": { "type": "boolean", "writeOnly": true }
        },
        "required": [
          "fullName",
          "isCLubMember",
          "isRegistered",
          "isSubstitute",
          "isWaitListed",
          "partnerStatus",
          "paymentRefunded",
          "refundAmount"
        ]
      },
      "PaymentDetailsResponse": {
        "type": "object",
        "properties": {
          "paymentStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "isClubMember": { "type": "boolean" },
          "isWaitListed": { "type": "boolean" },
          "refundedAmount": { "type": "number", "example": 10 },
          "amountPaid": { "type": "number", "example": 100 },
          "paymentCapture": { "type": "boolean" },
          "playerStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "isRegistered": { "type": "boolean" },
          "eventFee": { "type": "number" }
        },
        "required": [
          "amountPaid",
          "eventFee",
          "isClubMember",
          "isRegistered",
          "isWaitListed",
          "paymentCapture",
          "paymentStatus",
          "playerStatus",
          "refundedAmount"
        ]
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "registrationId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "player1": { "$ref": "#/components/schemas/Participant" },
          "player2": { "$ref": "#/components/schemas/Participant" },
          "isParticipant1": { "type": "boolean", "example": true },
          "isWaitListed": { "type": "boolean", "example": true },
          "eventRefundedAmount": { "type": "number", "example": true },
          "waitListed": { "type": "boolean", "writeOnly": true },
          "participant1": { "type": "boolean", "writeOnly": true }
        },
        "required": [
          "eventRefundedAmount",
          "isParticipant1",
          "isWaitListed",
          "registrationId"
        ]
      },
      "SingleWrapperLeagueResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/LeagueResponse" }
        }
      },
      "ClubRequest": {
        "type": "object",
        "properties": {
          "clubName": { "type": "string", "example": "Stillwater Pickleball" },
          "clubTypeId": { "type": "integer", "format": "int64", "example": 2 },
          "mediaId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "addressId": {
            "type": "integer",
            "format": "int64",
            "example": 5156151658
          },
          "manifest": { "$ref": "#/components/schemas/ContentRequest" },
          "shortDescription": { "$ref": "#/components/schemas/ContentRequest" },
          "longDescription": { "$ref": "#/components/schemas/ContentRequest" },
          "attributes": {
            "type": "object",
            "additionalProperties": { "$ref": "#/components/schemas/Attribute" }
          },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 1231231
          },
          "modelType": {
            "type": "string",
            "enum": ["ABSOLUTE", "RELATIVE"],
            "example": "ABSOLUTE/RELATIVE"
          },
          "modelValue": {
            "type": "number",
            "format": "double",
            "example": 33.5
          },
          "currencyCode": { "type": "string", "example": "USD" }
        },
        "required": [
          "clubId",
          "clubName",
          "clubTypeId",
          "currencyCode",
          "modelType",
          "modelValue"
        ]
      },
      "ContentRequest": {
        "type": "object",
        "properties": {
          "header": { "type": "string", "example": "<h1>header</h1>" },
          "headerType": { "type": "string", "example": "text/html" },
          "content": { "type": "string", "example": "<h1>content</h1>" },
          "contentType": { "type": "string", "example": "text/html" },
          "footer": { "type": "string", "example": "<h1>footer</h1>" },
          "footerType": { "type": "string", "example": "text/html" },
          "contentId": {
            "type": "integer",
            "format": "int64",
            "example": 13212313
          }
        },
        "required": [
          "content",
          "contentId",
          "contentType",
          "footer",
          "footerType",
          "header",
          "headerType"
        ]
      },
      "StaffClubMemberRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 1231231
          },
          "roleId": {
            "type": "integer",
            "format": "int64",
            "example": 1231231
          },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 1231231
          },
          "name": { "type": "string", "example": "John Doe" },
          "email": { "type": "string", "example": "john@xyz.com" },
          "phone": { "type": "string", "example": 211564789 },
          "isoAlpha2Code": { "type": "string", "example": "US" }
        },
        "required": [
          "clubId",
          "email",
          "isoAlpha2Code",
          "name",
          "roleId",
          "userId"
        ]
      },
      "ClubMemberAddRequest": {
        "type": "object",
        "properties": {
          "addMembers": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MemberRequest" },
            "uniqueItems": true
          }
        },
        "required": ["addMembers"]
      },
      "MemberRequest": {
        "type": "object",
        "properties": {
          "fullName": { "type": "string", "example": "John Doe" },
          "email": { "type": "string", "example": "john@yopmail.com" }
        },
        "required": ["email", "fullName"]
      },
      "ClubMemberManyResponse": {
        "type": "object",
        "properties": {
          "playersAdded": { "type": "integer", "format": "int32" },
          "playersInvited": { "type": "integer", "format": "int32" },
          "invalidEmail": { "type": "integer", "format": "int32" },
          "addMembersActionS3Url": {
            "type": "string",
            "example": "https://dupr-dev.s3.amazonaws.com/clubs-members-excel/312312-2021-09-11"
          },
          "validEmail": {
            "type": "array",
            "example": "['dupr@gmail.com']",
            "items": { "type": "string" }
          },
          "inValidEmail": {
            "type": "array",
            "example": "['dupr@gmail.com']",
            "items": { "type": "string" }
          }
        },
        "required": ["invalidEmail", "playersAdded", "playersInvited"]
      },
      "SingleWrapperClubMemberManyResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/ClubMemberManyResponse" }
        }
      },
      "InviteRequest": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "example": "John Doe",
            "minLength": 1
          },
          "email": {
            "type": "string",
            "example": "user@example.com",
            "minLength": 1
          },
          "isoCode": { "type": "string", "example": "US" },
          "phone": { "type": "string", "example": "+19876543210" },
          "identifier": {
            "type": "string",
            "description": "An unique identifier of this user from your platform",
            "example": "unique-identifier"
          }
        },
        "required": ["email", "fullName"]
      },
      "SingleWrapperString": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "type": "string" }
        }
      },
      "UserListRequest": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "example": [1231231, 9999999],
            "items": { "type": "integer", "format": "int64" }
          }
        },
        "required": ["userIds"]
      },
      "MatchUpdateRequest": {
        "type": "object",
        "properties": {
          "matchSource": {
            "type": "string",
            "enum": [
              "DUPR",
              "MANUAL",
              "TOURNAMENT",
              "CLUB",
              "LEAGUE",
              "PARTNER",
              "EXTERNAL"
            ],
            "example": "DUPR/MANUAL/LEAGUE"
          },
          "matchId": {
            "type": "integer",
            "format": "int64",
            "example": 7737603024
          },
          "requestedBy": { "type": "string", "example": "KO8731" },
          "reason": { "type": "string", "example": "requested by player" },
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 7396161624
          },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 6806605627
          },
          "leagueMatchId": {
            "type": "integer",
            "format": "int64",
            "example": 2090230022
          },
          "venue": { "type": "string", "example": "Dreamland Pickleball" },
          "location": { "type": "string", "example": "Newport Beach, CA" },
          "league": { "type": "string", "example": "Example League" },
          "eventDate": {
            "type": "string",
            "format": "date",
            "example": "yyyy-MM-dd"
          },
          "confirmed": { "type": "boolean", "example": true },
          "teams": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TeamUpdateRequest" }
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "example": "2020-03-04T17:21:16.000Z"
          },
          "eventName": { "type": "string", "example": "event name" },
          "playerIds": {
            "type": "array",
            "items": { "type": "integer", "format": "int64" }
          }
        },
        "required": [
          "matchId",
          "matchSource",
          "playerIds",
          "reason",
          "requestedBy",
          "teams"
        ]
      },
      "TeamUpdateRequest": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "player1": { "type": "integer", "format": "int64" },
          "player2": { "type": "integer", "format": "int64" },
          "game1": { "type": "integer", "format": "int32", "example": 11 },
          "game2": { "type": "integer", "format": "int32", "example": -1 },
          "game3": { "type": "integer", "format": "int32", "example": -1 },
          "game4": { "type": "integer", "format": "int32", "example": -1 },
          "game5": { "type": "integer", "format": "int32", "example": -1 },
          "winner": { "type": "boolean" },
          "playerIds": {
            "type": "array",
            "items": { "type": "integer", "format": "int64" }
          }
        },
        "required": ["id", "player1", "playerIds"]
      },
      "BasicUserInfo": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "referralCode": { "type": "string" }
        },
        "required": ["email", "id", "name"]
      },
      "MatchResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64", "example": 7737603024 },
          "matchId": {
            "type": "integer",
            "format": "int64",
            "example": 7737603024
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 231312312312
          },
          "displayIdentity": { "type": "string", "example": "IS20MDL2" },
          "venue": { "type": "string", "example": "Dreamland Pickleball" },
          "location": { "type": "string", "example": "Newport Beach, CA" },
          "matchScoreAdded": { "type": "boolean", "example": true },
          "tournament": {
            "type": "string",
            "example": "Newport Beach Doubles Shootout"
          },
          "league": { "type": "string", "example": "Example League" },
          "eventDate": {
            "type": "string",
            "format": "date",
            "example": "yyyy-MM-dd"
          },
          "eventFormat": {
            "type": "string",
            "enum": ["SINGLES", "DOUBLES"],
            "example": "SINGLES"
          },
          "scoreFormat": { "$ref": "#/components/schemas/ScoreFormatResponse" },
          "confirmed": { "type": "boolean" },
          "teams": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TeamResponse" }
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "example": "2020-03-04T17:21:16.000Z"
          },
          "modified": { "type": "string", "format": "date-time" },
          "eventName": { "type": "string", "example": "event name" },
          "matchSource": {
            "type": "string",
            "enum": [
              "DUPR",
              "MANUAL",
              "TOURNAMENT",
              "CLUB",
              "LEAGUE",
              "PARTNER",
              "EXTERNAL"
            ],
            "example": "DUPR/MANUAL/LEAGUE"
          },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 7737603024
          },
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 7396161624
          },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 6806605627
          },
          "leagueMatchId": {
            "type": "integer",
            "format": "int64",
            "example": 2090230022
          },
          "noOfGames": { "type": "integer", "format": "int32", "example": 2 },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": 2
          },
          "matchType": {
            "type": "string",
            "enum": ["SIDE_ONLY", "RALLY"],
            "example": "SIDE_OUT/RALLY"
          },
          "eloCalculated": { "type": "boolean", "example": true },
          "initialization": { "type": "boolean", "example": true },
          "validator": { "$ref": "#/components/schemas/BasicUserInfo" },
          "creator": { "$ref": "#/components/schemas/BasicUserInfo" },
          "clientId": { "type": "integer", "format": "int64", "example": 45 }
        },
        "required": [
          "confirmed",
          "displayIdentity",
          "eventDate",
          "eventFormat",
          "location",
          "matchScoreAdded",
          "noOfGames",
          "teams",
          "tournament",
          "userId",
          "venue"
        ]
      },
      "PostMatchRating": {
        "type": "object",
        "properties": {
          "singles": { "type": "number" },
          "doubles": { "type": "number" }
        }
      },
      "PreMatchRatingAndImpact": {
        "type": "object",
        "properties": {
          "preMatchSingleRatingPlayer1": { "type": "number" },
          "matchSingleRatingImpactPlayer1": { "type": "number" },
          "preMatchDoubleRatingPlayer1": { "type": "number" },
          "matchDoubleRatingImpactPlayer1": { "type": "number" },
          "preMatchSingleRatingPlayer2": { "type": "number" },
          "matchSingleRatingImpactPlayer2": { "type": "number" },
          "preMatchDoubleRatingPlayer2": { "type": "number" },
          "matchDoubleRatingImpactPlayer2": { "type": "number" }
        }
      },
      "ScoreFormatResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "format": {
            "type": "string",
            "example": "Best 2 out of 3 Games to 11"
          },
          "variant": {
            "type": "string",
            "example": "Game 3 to 15 or until win by 2"
          },
          "games": { "type": "integer", "format": "int32", "example": 1 },
          "winningScore": {
            "type": "integer",
            "format": "int32",
            "example": 11
          },
          "priority": { "type": "integer", "format": "int32", "example": 1 }
        },
        "required": ["format", "games", "id", "variant", "winningScore"]
      },
      "SingleWrapperMatchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/MatchResponse" }
        }
      },
      "TeamPlayerResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 26518181881
          },
          "fullName": { "type": "string", "example": "Brian Lara" },
          "duprId": {
            "type": "string",
            "example": "https://dupr-dev.s3.amazonaws.com/profile/image.png"
          },
          "imageUrl": { "type": "string" },
          "allowSubstitution": { "type": "boolean" },
          "postMatchRating": { "$ref": "#/components/schemas/PostMatchRating" },
          "validatedMatch": { "type": "boolean" }
        },
        "required": ["allowSubstitution", "fullName"]
      },
      "TeamResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "serial": { "type": "integer", "format": "int32", "example": 1 },
          "player1": { "$ref": "#/components/schemas/TeamPlayerResponse" },
          "player2": { "$ref": "#/components/schemas/TeamPlayerResponse" },
          "game1": { "type": "integer", "format": "int32", "example": 11 },
          "game2": { "type": "integer", "format": "int32", "example": -1 },
          "game3": { "type": "integer", "format": "int32", "example": -1 },
          "game4": { "type": "integer", "format": "int32", "example": -1 },
          "game5": { "type": "integer", "format": "int32", "example": -1 },
          "winner": { "type": "boolean" },
          "delta": { "type": "string", "example": -0.682 },
          "teamRating": { "type": "string", "example": 4.659 },
          "preMatchRatingAndImpact": {
            "$ref": "#/components/schemas/PreMatchRatingAndImpact",
            "example": 3.5
          }
        },
        "required": [
          "delta",
          "game1",
          "game2",
          "game3",
          "game4",
          "game5",
          "player1",
          "preMatchRatingAndImpact",
          "serial",
          "teamRating",
          "winner"
        ]
      },
      "BracketRequest": {
        "type": "object",
        "properties": {
          "customCode": { "type": "string", "example": "BRACKET123" },
          "duration": {
            "type": "array",
            "example": "['yyyy-mm-dd','yyyy-mm-dd']",
            "items": { "type": "string", "format": "date" }
          },
          "format": {
            "type": "string",
            "enum": ["SINGLES", "DOUBLES"],
            "example": "SINGLES/DOUBLES"
          },
          "elimination": {
            "type": "string",
            "enum": [
              "SINGLE",
              "DOUBLE",
              "DOUBLE_PREVENTED",
              "ROUND_ROBIN",
              "COMPASS",
              "FLEX"
            ],
            "example": "SINGLE/DOUBLE/DOUBLE_PREVENTED/ROUND_ROBIN"
          },
          "playerGroup": {
            "type": "string",
            "enum": ["MEN", "WOMEN", "MIXED", "COED", "OPEN"],
            "example": "MEN/WOMEN/MIXED/COED"
          },
          "ratingBracket": {
            "type": "array",
            "example": [3.1, 4.5],
            "items": { "type": "number" }
          },
          "ageBracket": {
            "type": "array",
            "example": [27, 35],
            "items": { "type": "integer", "format": "int64" }
          },
          "description": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "matchBonusPoints": { "type": "number", "example": 8 },
          "registrationDate": {
            "type": "array",
            "example": "['yyyy-mm-dd','yyyy-mm-dd']",
            "items": { "type": "string", "format": "date" }
          },
          "scoreFormat": { "type": "integer", "format": "int64", "example": 1 },
          "memberFee": { "type": "number", "example": 500 },
          "nonMemberFee": { "type": "number", "example": 500 },
          "maxTeam": { "type": "integer", "format": "int64", "example": 500 },
          "waitList": { "type": "integer", "format": "int64", "example": 500 },
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "name": { "type": "string", "example": "Stillwater Pickleball" },
          "courts": { "type": "integer", "format": "int32", "example": 5 },
          "registrationDateTime": {
            "type": "array",
            "example": "['yyyy-mm-ddTHH:mm:ss','yyyy-mm-ddTHH:mm:ss']",
            "items": { "type": "string", "format": "date-time" }
          },
          "durationDateTime": {
            "type": "array",
            "example": "['yyyy-mm-ddTHH:mm:ss','yyyy-mm-ddTHH:mm:ss']",
            "items": { "type": "string", "format": "date-time" }
          },
          "timeZone": { "type": "string", "example": "IST" },
          "zoneName": { "type": "string", "example": "IST" }
        },
        "required": [
          "bracketId",
          "duration",
          "elimination",
          "format",
          "playerGroup",
          "scoreFormat",
          "waitList"
        ]
      },
      "EditBracketRequest": {
        "type": "object",
        "properties": {
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "name": { "type": "string", "example": "Stillwater Pickleball" },
          "customCode": { "type": "string", "example": "BRACKET123" },
          "duration": {
            "type": "array",
            "example": "['yyyy-mm-dd','yyyy-mm-dd']",
            "items": { "type": "string", "format": "date" }
          },
          "format": {
            "type": "string",
            "enum": ["SINGLES", "DOUBLES"],
            "example": "SINGLES/DOUBLES"
          },
          "elimination": {
            "type": "string",
            "enum": [
              "SINGLE",
              "DOUBLE",
              "DOUBLE_PREVENTED",
              "ROUND_ROBIN",
              "COMPASS",
              "FLEX"
            ],
            "example": "SINGLE/DOUBLE/DOUBLE_PREVENTED/ROUND_ROBIN"
          },
          "playerGroup": {
            "type": "string",
            "enum": ["MEN", "WOMEN", "MIXED", "COED", "OPEN"],
            "example": "MEN/WOMEN/MIXED/COED"
          },
          "ratingBracket": {
            "type": "array",
            "example": [3.1, 4.5],
            "items": { "type": "number" }
          },
          "ageBracket": {
            "type": "array",
            "example": [27, 35],
            "items": { "type": "integer", "format": "int64" }
          },
          "description": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "matchBonusPoints": { "type": "number", "example": 8 },
          "registrationDate": {
            "type": "array",
            "example": "['yyyy-mm-dd','yyyy-mm-dd']",
            "items": { "type": "string", "format": "date" }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "IN_PROGRESS/COMPLETE/CANCELLED"
          },
          "scoreFormat": { "type": "integer", "format": "int64", "example": 1 },
          "memberFee": { "type": "number", "example": 500 },
          "nonMemberFee": { "type": "number", "example": 500 },
          "maxTeam": { "type": "integer", "format": "int64", "example": 500 },
          "waitList": { "type": "integer", "format": "int64", "example": 500 },
          "courts": { "type": "integer", "format": "int32", "example": 5 },
          "registrationDateTime": {
            "type": "array",
            "example": "['yyyy-mm-dd HH:mm:ss','yyyy-mm-dd HH:mm:ss']",
            "items": { "type": "string", "format": "date-time" }
          },
          "durationDateTime": {
            "type": "array",
            "example": "['yyyy-mm-dd HH:mm:ss','yyyy-mm-dd HH:mm:ss']",
            "items": { "type": "string", "format": "date-time" }
          },
          "timeZone": { "type": "string", "example": "IST" },
          "zoneName": { "type": "string", "example": "IST" }
        },
        "required": [
          "bracketId",
          "courts",
          "leagueId",
          "nonMemberFee",
          "scoreFormat",
          "waitList"
        ]
      },
      "DeviceRequest": {
        "type": "object",
        "properties": {
          "platform": {
            "type": "string",
            "example": "android/ios/web",
            "minLength": 1
          },
          "uuid": {
            "type": "string",
            "example": "unique-device-identity",
            "minLength": 1
          },
          "token": {
            "type": "string",
            "example": "740f4707bebcf74f9b7c25d48e3358945f6aa01da5ddb387462c7eaf61bb78ad",
            "minLength": 1
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 4086274008
          }
        },
        "required": ["platform", "token", "uuid"]
      },
      "S3Object": {
        "type": "object",
        "properties": {
          "bucket": { "type": "string" },
          "key": { "type": "string" }
        },
        "required": ["bucket", "key"]
      },
      "BatchPlayerRatingProvisionalRequest": {
        "type": "object",
        "properties": {
          "bucket": { "type": "string" },
          "key": { "type": "string" }
        },
        "required": ["bucket", "key"]
      },
      "BatchPlayerRatingRequest": {
        "type": "object",
        "properties": {
          "bucket": { "type": "string" },
          "key": { "type": "string" },
          "event": { "type": "string", "enum": ["SINGLES", "DOUBLES"] }
        },
        "required": ["bucket", "event", "key"]
      },
      "PlayerRatingUpdateRequest": {
        "type": "object",
        "properties": {
          "format": { "type": "string", "enum": ["SINGLES", "DOUBLES"] },
          "newRating": { "type": "number" }
        },
        "required": ["format"]
      },
      "DynamicUserIdentityType": {
        "type": "object",
        "properties": {
          "input": { "type": "string" },
          "type": {
            "type": "string",
            "enum": ["DUPR_ID", "OBFUSCATED_USER_ID", "EMAIL"]
          }
        },
        "required": ["type"]
      },
      "SignUpRequest": {
        "type": "object",
        "properties": {
          "email": { "type": "string", "example": "john.doe@yopmail.com" },
          "playerName": { "type": "string", "example": "John Doe" },
          "externalId": { "type": "string", "example": "B1234" },
          "birthdate": {
            "type": "string",
            "format": "date",
            "example": "yyyy-MM-dd"
          },
          "singlesRating": { "type": "number", "example": 2.6 },
          "doublesRating": { "type": "number", "example": 4.3 },
          "gender": { "type": "string", "example": "male" },
          "phoneNumber": { "type": "string", "example": "+12481234701" },
          "duprId": { "type": "string", "example": "C8AX1" },
          "address": {
            "type": "string",
            "example": "GhIJQWX8-4yLQkARem8MAcBEWcA"
          }
        },
        "required": ["email", "playerName"]
      },
      "SingleWrapperMapStringString": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": {
            "type": "object",
            "additionalProperties": { "type": "string" }
          }
        }
      },
      "BannerContent": {
        "type": "object",
        "properties": {
          "header": { "type": "string", "example": "<h1>header</h1>" },
          "headerType": { "type": "string", "example": "text/html" },
          "content": { "type": "string", "example": "<h1>content</h1>" },
          "contentType": { "type": "string", "example": "text/html" },
          "footer": { "type": "string", "example": "<h1>footer</h1>" },
          "footerType": { "type": "string", "example": "text/html" },
          "contentId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          }
        },
        "required": ["content", "contentType"]
      },
      "CreateBannerRequest": {
        "type": "object",
        "properties": {
          "bannerId": { "type": "integer", "format": "int64", "example": 2322 },
          "contentId": {
            "type": "integer",
            "format": "int64",
            "example": 1214
          },
          "description": {
            "$ref": "#/components/schemas/BannerContent",
            "example": "A1C3Z"
          },
          "title": { "type": "string", "example": "banner Title" },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "ACTIVE/INACTIVE"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "10-03-2023"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "10-03-2023"
          }
        },
        "required": ["bannerId", "contentId", "description", "status", "title"]
      },
      "ChangeEmailAdminRequest": {
        "type": "object",
        "properties": {
          "oldEmail": { "type": "string" },
          "newEmail": { "type": "string" }
        },
        "required": ["newEmail", "oldEmail"]
      },
      "ClubSettings": {
        "type": "object",
        "properties": { "autoApproveJoinRequests": { "type": "boolean" } },
        "required": ["autoApproveJoinRequests"]
      },
      "SetClubSettingsRequest": {
        "type": "object",
        "properties": {
          "clubId": { "type": "integer", "format": "int64" },
          "settings": { "$ref": "#/components/schemas/ClubSettings" }
        },
        "required": ["clubId", "settings"]
      },
      "SetClubRestrictionsRequest": {
        "type": "object",
        "properties": {
          "clubId": { "type": "integer", "format": "int64" },
          "restrictions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["UNKNOWN", "MATCH_UPLOAD", "MEMBER_INVITE_WEB"]
            },
            "uniqueItems": true
          }
        },
        "required": ["clubId", "restrictions"]
      },
      "BulkSetClubRestrictionsRequest": {
        "type": "object",
        "properties": {
          "clubs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SetClubRestrictionsRequest"
            }
          }
        },
        "required": ["clubs"]
      },
      "CreateClubsRequest": {
        "type": "object",
        "properties": {
          "placeId": {
            "type": "string",
            "example": "ChIJQabAAlSEj4ARYHQBAw8MY7A=",
            "minLength": 1
          },
          "clubName": {
            "type": "string",
            "example": "Pickleball Club",
            "minLength": 1
          },
          "phoneNumber": { "type": "string", "example": "+123456789" },
          "directorName": {
            "type": "string",
            "example": "John Doe",
            "minLength": 1
          },
          "directorEmail": {
            "type": "string",
            "example": "john.doe@mmm.com",
            "minLength": 1
          },
          "directorPhone": { "type": "string", "example": "+123456789" },
          "duprId": { "type": "string", "example": "K1RRD1", "minLength": 1 },
          "revenueType": {
            "type": "string",
            "enum": ["ABSOLUTE", "RELATIVE"],
            "example": "ABSOLUTE/RELATIVE"
          },
          "revenueValue": {
            "type": "number",
            "format": "double",
            "example": 1.0
          },
          "currencyCode": { "type": "string", "example": "USD" },
          "isoCodeClub": { "type": "string", "example": "CA" },
          "isoCodeDirector": { "type": "string", "example": "US" }
        },
        "required": [
          "clubName",
          "currencyCode",
          "directorEmail",
          "directorName",
          "duprId",
          "isoCodeClub",
          "isoCodeDirector",
          "placeId",
          "revenueType",
          "revenueValue"
        ]
      },
      "ClubRevenueModelRequest": {
        "type": "object",
        "properties": {
          "modelType": {
            "type": "string",
            "enum": ["ABSOLUTE", "RELATIVE"],
            "example": "ABSOLUTE/RELATIVE"
          },
          "value": { "type": "number", "format": "double", "example": 33.5 }
        },
        "required": ["modelType", "value"]
      },
      "RevenueModel": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "enum": ["ABSOLUTE", "RELATIVE"] },
          "value": { "type": "number", "format": "double" }
        },
        "required": ["type", "value"]
      },
      "SingleWrapperRevenueModel": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/RevenueModel" }
        }
      },
      "ClubCurrencyRequest": {
        "type": "object",
        "properties": { "currencyCode": { "type": "string" } },
        "required": ["currencyCode"]
      },
      "UserSubscriptionRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 1241632612
          },
          "cost": { "type": "number", "format": "double", "example": 1000 },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2024-01-01"
          },
          "renewalDate": {
            "type": "string",
            "format": "date",
            "example": "2024-01-01"
          },
          "billingPeriod": {
            "type": "string",
            "enum": ["WEEKLY", "MONTHLY", "ANNUAL"],
            "example": "MONTHLY/ANNUAL"
          },
          "isActive": { "type": "boolean", "example": true }
        },
        "required": [
          "billingPeriod",
          "cost",
          "isActive",
          "renewalDate",
          "startDate",
          "userId"
        ]
      },
      "AdjustRatingRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 26518181881
          },
          "email": { "type": "string" },
          "duprId": { "type": "string", "example": "GB0NV05E" },
          "singles": { "type": "number", "example": 3.145 },
          "singlesVerified": { "type": "number", "example": 4.145 },
          "doubles": { "type": "number", "example": 3.7 },
          "doublesVerified": { "type": "number", "example": 4.3 },
          "reason": { "type": "string", "example": "rating edit reason" }
        },
        "required": ["reason"]
      },
      "LeagueFeesRequest": {
        "type": "object",
        "properties": {
          "memberFee": { "type": "number", "example": 500, "minimum": 0 },
          "nonMemberFee": { "type": "number", "example": 500, "minimum": 0 }
        },
        "required": ["memberFee", "nonMemberFee"]
      },
      "MatchRatings": {
        "type": "object",
        "properties": {
          "averagePartnerDupr": { "type": "number", "example": 6.391 },
          "averageOpponentDupr": { "type": "number", "example": 3.254 },
          "averagePointsWonPercent": {
            "type": "number",
            "example": 0.67,
            "maximum": 1.0,
            "minimum": 0.0
          },
          "halfLife": { "type": "number", "example": 3.0 }
        },
        "required": [
          "averageOpponentDupr",
          "averagePartnerDupr",
          "averagePointsWonPercent",
          "halfLife"
        ]
      },
      "PlayerStatisticsUpdateRequest": {
        "type": "object",
        "properties": {
          "obfuscatedPlayerId": {
            "type": "integer",
            "format": "int64",
            "example": 1234
          },
          "singles": { "$ref": "#/components/schemas/MatchRatings" },
          "doubles": { "$ref": "#/components/schemas/MatchRatings" }
        },
        "required": ["obfuscatedPlayerId"]
      },
      "SingleWrapperBoolean": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "type": "boolean" }
        }
      },
      "AddressComponent": {
        "type": "object",
        "properties": {
          "longName": { "type": "string" },
          "shortName": { "type": "string" },
          "types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "street_address",
                "route",
                "intersection",
                "continent",
                "political",
                "country",
                "administrative_area_level_1",
                "administrative_area_level_2",
                "administrative_area_level_3",
                "administrative_area_level_4",
                "administrative_area_level_5",
                "colloquial_area",
                "locality",
                "ward",
                "sublocality",
                "sublocality_level_1",
                "sublocality_level_2",
                "sublocality_level_3",
                "sublocality_level_4",
                "sublocality_level_5",
                "neighborhood",
                "premise",
                "subpremise",
                "postal_code",
                "postal_code_prefix",
                "postal_code_suffix",
                "natural_feature",
                "airport",
                "park",
                "point_of_interest",
                "floor",
                "establishment",
                "parking",
                "post_box",
                "postal_town",
                "room",
                "street_number",
                "bus_station",
                "train_station",
                "subway_station",
                "transit_station",
                "light_rail_station",
                "general_contractor",
                "food",
                "real_estate_agency",
                "car_rental",
                "travel_agency",
                "electronics_store",
                "home_goods_store",
                "school",
                "store",
                "shopping_mall",
                "lodging",
                "art_gallery",
                "lawyer",
                "restaurant",
                "bar",
                "meal_takeaway",
                "clothing_store",
                "local_government_office",
                "finance",
                "moving_company",
                "storage",
                "cafe",
                "car_repair",
                "health",
                "insurance_agency",
                "painter",
                "archipelago",
                "museum",
                "campground",
                "rv_park",
                "meal_delivery",
                "primary_school",
                "secondary_school",
                "town_square",
                "tourist_attraction",
                "plus_code",
                "drugstore",
                "unknown"
              ]
            }
          }
        }
      },
      "AddressRequest": {
        "type": "object",
        "properties": {
          "addressLine": { "type": "string", "example": "402, B wing" },
          "geocode": {
            "$ref": "#/components/schemas/GeocodingResult",
            "example": {
              "addressComponents": [
                {
                  "longName": "13646",
                  "shortName": "13646",
                  "types": ["STREET_NUMBER"]
                },
                {
                  "longName": "California 33",
                  "shortName": "CA-33",
                  "types": ["ROUTE"]
                },
                {
                  "longName": "Lost Hills",
                  "shortName": "Lost Hills",
                  "types": ["LOCALITY", "POLITICAL"]
                },
                {
                  "longName": "Kern County",
                  "shortName": "Kern County",
                  "types": ["ADMINISTRATIVE_AREA_LEVEL_2", "POLITICAL"]
                },
                {
                  "longName": "California",
                  "shortName": "CA",
                  "types": ["ADMINISTRATIVE_AREA_LEVEL_1", "POLITICAL"]
                },
                {
                  "longName": "United States",
                  "shortName": "US",
                  "types": ["COUNTRY", "POLITICAL"]
                },
                {
                  "longName": "93249",
                  "shortName": "93249",
                  "types": ["POSTAL_CODE"]
                },
                {
                  "longName": "9719",
                  "shortName": "9719",
                  "types": ["POSTAL_CODE_SUFFIX"]
                }
              ],
              "formattedAddress": "13646 CA-33, Lost Hills, CA 93249, USA",
              "postcodeLocalities": null,
              "geometry": {
                "bounds": null,
                "location": { "lat": 35.6542507, "lng": -119.8916656 },
                "locationType": "ROOFTOP",
                "viewport": {
                  "northeast": {
                    "lat": 35.65559968029149,
                    "lng": -119.8903166197085
                  },
                  "southwest": {
                    "lat": 35.6529017197085,
                    "lng": -119.8930145802915
                  }
                }
              },
              "types": ["STREET_ADDRESS"],
              "partialMatch": false,
              "placeId": "ChIJr2rdtntp64ARQsSAoxaBpbU",
              "plusCode": {
                "globalCode": "8572M435+P8",
                "compoundCode": "M435+P8 Blackwells Corner, California, United States"
              }
            }
          },
          "placeId": {
            "type": "string",
            "example": "ChIJW37e6g4AwTsRfjFKn0_XRiU"
          }
        }
      },
      "Bounds": {
        "type": "object",
        "properties": {
          "northeast": { "$ref": "#/components/schemas/LatLng" },
          "southwest": { "$ref": "#/components/schemas/LatLng" }
        }
      },
      "GeocodingResult": {
        "type": "object",
        "properties": {
          "addressComponents": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AddressComponent" }
          },
          "formattedAddress": { "type": "string" },
          "postcodeLocalities": {
            "type": "array",
            "items": { "type": "string" }
          },
          "geometry": { "$ref": "#/components/schemas/Geometry" },
          "types": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "street_address",
                "street_number",
                "floor",
                "room",
                "post_box",
                "route",
                "intersection",
                "continent",
                "political",
                "country",
                "administrative_area_level_1",
                "administrative_area_level_2",
                "administrative_area_level_3",
                "administrative_area_level_4",
                "administrative_area_level_5",
                "colloquial_area",
                "locality",
                "ward",
                "sublocality",
                "sublocality_level_1",
                "sublocality_level_2",
                "sublocality_level_3",
                "sublocality_level_4",
                "sublocality_level_5",
                "neighborhood",
                "premise",
                "subpremise",
                "postal_code",
                "postal_code_prefix",
                "postal_code_suffix",
                "plus_code",
                "natural_feature",
                "airport",
                "university",
                "park",
                "museum",
                "point_of_interest",
                "establishment",
                "bus_station",
                "train_station",
                "subway_station",
                "transit_station",
                "light_rail_station",
                "church",
                "primary_school",
                "secondary_school",
                "finance",
                "post_office",
                "place_of_worship",
                "postal_town",
                "synagogue",
                "food",
                "grocery_or_supermarket",
                "store",
                "drugstore",
                "lawyer",
                "health",
                "insurance_agency",
                "gas_station",
                "car_dealer",
                "car_repair",
                "meal_takeaway",
                "furniture_store",
                "home_goods_store",
                "shopping_mall",
                "gym",
                "accounting",
                "moving_company",
                "lodging",
                "storage",
                "casino",
                "parking",
                "stadium",
                "travel_agency",
                "night_club",
                "beauty_salon",
                "hair_care",
                "spa",
                "shoe_store",
                "bakery",
                "pharmacy",
                "school",
                "book_store",
                "department_store",
                "restaurant",
                "real_estate_agency",
                "bar",
                "doctor",
                "hospital",
                "fire_station",
                "supermarket",
                "city_hall",
                "local_government_office",
                "atm",
                "bank",
                "library",
                "car_wash",
                "hardware_store",
                "amusement_park",
                "aquarium",
                "art_gallery",
                "bicycle_store",
                "bowling_alley",
                "cafe",
                "campground",
                "car_rental",
                "cemetery",
                "clothing_store",
                "convenience_store",
                "courthouse",
                "dentist",
                "electrician",
                "electronics_store",
                "embassy",
                "florist",
                "funeral_home",
                "general_contractor",
                "hindu_temple",
                "jewelry_store",
                "laundry",
                "liquor_store",
                "locksmith",
                "meal_delivery",
                "mosque",
                "movie_rental",
                "movie_theater",
                "painter",
                "pet_store",
                "physiotherapist",
                "plumber",
                "police",
                "roofing_contractor",
                "rv_park",
                "taxi_stand",
                "veterinary_care",
                "zoo",
                "archipelago",
                "tourist_attraction",
                "town_square",
                "unknown"
              ]
            }
          },
          "partialMatch": { "type": "boolean" },
          "placeId": { "type": "string" },
          "plusCode": { "$ref": "#/components/schemas/PlusCode" }
        }
      },
      "Geometry": {
        "type": "object",
        "properties": {
          "bounds": { "$ref": "#/components/schemas/Bounds" },
          "location": { "$ref": "#/components/schemas/LatLng" },
          "locationType": {
            "type": "string",
            "enum": [
              "ROOFTOP",
              "RANGE_INTERPOLATED",
              "GEOMETRIC_CENTER",
              "APPROXIMATE",
              "UNKNOWN"
            ]
          },
          "viewport": { "$ref": "#/components/schemas/Bounds" }
        }
      },
      "LatLng": {
        "type": "object",
        "properties": {
          "lat": { "type": "number", "format": "double" },
          "lng": { "type": "number", "format": "double" }
        }
      },
      "PlusCode": {
        "type": "object",
        "properties": {
          "globalCode": { "type": "string" },
          "compoundCode": { "type": "string" }
        }
      },
      "IdPayload": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64", "example": 7615704574 }
        },
        "required": ["id"]
      },
      "SingleWrapperIdPayload": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/IdPayload" }
        }
      },
      "CheckInLocation": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/AddressRequest",
            "example": "AddressRequest"
          },
          "type": {
            "type": "string",
            "enum": ["CLUB", "EVENT", "RAW", "NONE"],
            "example": "RAW/CLUB/EVENT/NONE"
          },
          "id": { "type": "integer", "format": "int64", "example": 5333652862 },
          "isEmpty": { "type": "boolean" }
        },
        "required": ["address", "id", "isEmpty", "type"]
      },
      "Feed": {
        "type": "object",
        "properties": {
          "feedId": { "type": "integer", "format": "int64", "example": 1 },
          "slug": {
            "type": "string",
            "enum": ["TIMELINE", "USER", "CLUB", "EVENT", "DUPR", "PARTNER"],
            "example": "USER/CLUB/EVENT/DUPR"
          }
        },
        "required": ["feedId", "slug"]
      },
      "PostRequest": {
        "type": "object",
        "properties": {
          "actor": {
            "type": "integer",
            "format": "int64",
            "example": 5333652862
          },
          "feed": { "$ref": "#/components/schemas/Feed" },
          "verb": {
            "type": "string",
            "enum": ["POST", "MATCH"],
            "example": "POST"
          },
          "content": { "type": "string", "example": "Welcome to my Feed" },
          "tags": {
            "type": "array",
            "example": [5333652862],
            "items": { "type": "integer", "format": "int64" }
          },
          "hashtags": {
            "type": "array",
            "example": "[Welcome, Feeds]",
            "items": { "type": "string" }
          },
          "images": {
            "type": "array",
            "example": "[/path/to/image]",
            "items": { "type": "string" }
          },
          "matches": {
            "type": "array",
            "example": [7578951408],
            "items": { "type": "integer", "format": "int64" }
          },
          "checkin": {
            "$ref": "#/components/schemas/CheckInLocation",
            "example": "NY"
          }
        },
        "required": [
          "actor",
          "checkin",
          "content",
          "feed",
          "hashtags",
          "images",
          "matches",
          "tags",
          "verb"
        ]
      },
      "ActivityUser": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "profileImage": { "type": "string" },
          "isFollow": { "type": "boolean" }
        },
        "required": ["id", "isFollow", "name", "profileImage"]
      },
      "Match": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "userId": { "type": "integer", "format": "int64" },
          "venue": { "type": "string" },
          "location": { "type": "string" },
          "matchScoreAdded": { "type": "boolean" },
          "tournament": { "type": "string" },
          "league": { "type": "string" },
          "eventDate": { "type": "string", "format": "date" },
          "eventFormat": { "type": "string", "enum": ["SINGLES", "DOUBLES"] },
          "scoreFormat": { "$ref": "#/components/schemas/ScoreFormat" },
          "confirmed": { "type": "boolean" },
          "confirmationThreshold": { "type": "integer", "format": "int32" },
          "teams": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Team" }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "modified": { "type": "string", "format": "date-time" },
          "created": { "type": "string", "format": "date-time" },
          "event": { "type": "string" },
          "matchSource": {
            "type": "string",
            "enum": [
              "DUPR",
              "MANUAL",
              "TOURNAMENT",
              "CLUB",
              "LEAGUE",
              "PARTNER",
              "EXTERNAL"
            ]
          },
          "clubId": { "type": "integer", "format": "int64" },
          "leagueId": { "type": "integer", "format": "int64" },
          "bracketId": { "type": "integer", "format": "int64" },
          "leagueMatchId": { "type": "integer", "format": "int64" },
          "matchType": { "type": "string", "enum": ["SIDE_ONLY", "RALLY"] },
          "usedInInitialization": { "type": "boolean" },
          "eloCalculated": { "type": "boolean" },
          "validator": { "$ref": "#/components/schemas/BasicUserInfo" },
          "creator": { "$ref": "#/components/schemas/BasicUserInfo" },
          "clientId": { "type": "integer", "format": "int64" },
          "isEloRatedMatch": { "type": "boolean" },
          "isPreEloMatch": { "type": "boolean" },
          "playerIds": {
            "type": "array",
            "items": { "type": "integer", "format": "int64" }
          },
          "isProMatch": { "type": "boolean" }
        },
        "required": [
          "confirmationThreshold",
          "confirmed",
          "eventDate",
          "eventFormat",
          "isEloRatedMatch",
          "isPreEloMatch",
          "isProMatch",
          "location",
          "matchScoreAdded",
          "playerIds",
          "teams",
          "usedInInitialization"
        ]
      },
      "Player": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "fullName": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "username": { "type": "string" },
          "displayUsername": { "type": "boolean" },
          "email": { "type": "string" },
          "verifiedEmail": { "type": "boolean" },
          "isoAlpha2Code": { "type": "string" },
          "phone": { "type": "string" },
          "verifiedPhone": { "type": "boolean" },
          "shortAddress": { "type": "string" },
          "formattedAddress": { "type": "string" },
          "latitude": { "type": "number", "format": "double" },
          "longitude": { "type": "number", "format": "double" },
          "gender": { "type": "string", "enum": ["MALE", "FEMALE"] },
          "birthdate": { "type": "string", "format": "date" },
          "age": { "type": "integer", "format": "int32" },
          "hand": {
            "type": "string",
            "enum": ["RIGHT", "LEFT", "BOTH", "NONE"]
          },
          "reliabilityScore": { "type": "integer", "format": "int32" },
          "imageUrl": { "type": "string" },
          "singles": { "type": "number" },
          "singlesVerified": { "type": "number" },
          "singlesProvisional": { "type": "boolean" },
          "doubles": { "type": "number" },
          "doublesVerified": { "type": "number" },
          "doublesProvisional": { "type": "boolean" },
          "defaultRating": { "type": "string", "enum": ["SINGLES", "DOUBLES"] },
          "registrationType": {
            "type": "string",
            "enum": ["INVITATION", "UNCLAIMED"]
          },
          "registered": { "type": "boolean" },
          "referralCode": { "type": "string" },
          "sponsor": { "$ref": "#/components/schemas/Sponsor" },
          "distance": { "type": "string" },
          "distanceInMiles": { "type": "number", "format": "double" },
          "enablePrivacy": { "type": "boolean" },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "created": { "type": "string", "format": "date-time" },
          "lucraConnected": { "type": "boolean" },
          "singlesReliability": { "type": "number" },
          "doublesReliability": { "type": "number" },
          "provisionalSinglesRating": { "type": "number", "format": "float" },
          "provisionalDoublesRating": { "type": "number", "format": "float" },
          "location": { "type": "string" }
        },
        "required": [
          "displayUsername",
          "email",
          "enablePrivacy",
          "fullName",
          "id",
          "registered",
          "verifiedEmail",
          "verifiedPhone"
        ]
      },
      "PostReactionResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "postId": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/ActivityUser" },
          "react": { "type": "string", "enum": ["LIKE", "COMMENT"] },
          "comment": { "type": "string" },
          "createdAt": { "type": "integer", "format": "int64" },
          "updatedAt": { "type": "integer", "format": "int64" },
          "getstreamId": { "type": "string" },
          "activityId": { "type": "string" },
          "parentId": { "type": "string" },
          "reactionCounts": {
            "type": "object",
            "additionalProperties": { "type": "number" }
          },
          "tags": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ActivityUser" }
          },
          "images": { "type": "array", "items": { "type": "string" } },
          "matches": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Match" }
          }
        },
        "required": [
          "activityId",
          "actor",
          "comment",
          "createdAt",
          "getstreamId",
          "id",
          "images",
          "matches",
          "parentId",
          "postId",
          "react",
          "reactionCounts",
          "tags",
          "updatedAt"
        ]
      },
      "PostResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "activityId": { "type": "string" },
          "actor": { "$ref": "#/components/schemas/ActivityUser" },
          "verb": { "type": "string", "enum": ["POST", "MATCH"] },
          "content": { "type": "string" },
          "reactionCounts": {
            "type": "object",
            "additionalProperties": { "type": "number" }
          },
          "ownReactions": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/PostReactionResponse" }
            }
          },
          "tags": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ActivityUser" }
          },
          "hashtags": { "type": "array", "items": { "type": "string" } },
          "images": { "type": "array", "items": { "type": "string" } },
          "matches": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Match" }
          },
          "location": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          },
          "createdAt": { "type": "integer", "format": "int64" },
          "updatedAt": { "type": "integer", "format": "int64" }
        },
        "required": [
          "activityId",
          "actor",
          "content",
          "createdAt",
          "hashtags",
          "id",
          "images",
          "location",
          "matches",
          "ownReactions",
          "reactionCounts",
          "tags",
          "updatedAt",
          "verb"
        ]
      },
      "ScoreFormat": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "format": { "type": "string" },
          "variant": { "type": "string" },
          "priority": { "type": "integer", "format": "int32" },
          "games": { "type": "integer", "format": "int32" },
          "winningScore": { "type": "integer", "format": "int32" },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          }
        },
        "required": ["games", "winningScore"]
      },
      "SingleWrapperPostResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PostResponse" }
        }
      },
      "Sponsor": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "imageURL": { "type": "string" },
          "sponsorRedirectUrl": { "type": "string" },
          "sponsorPopupHeading": { "type": "string" },
          "description": { "type": "string" },
          "buttonText": { "type": "string" }
        }
      },
      "ReactRequest": {
        "type": "object",
        "properties": {
          "actor": {
            "type": "integer",
            "format": "int64",
            "description": "Obfuscated Id of user do the reaction",
            "example": 1
          },
          "id": {
            "type": "string",
            "description": "The post's id",
            "example": "db0f3ce2-99ab-4ec0-b006-333de4a3d47b"
          },
          "react": {
            "type": "string",
            "description": "type of reaction, if COMMENT then add the contain in the 'comment', else let it empty",
            "enum": ["LIKE", "COMMENT"],
            "example": "COMMENT|LIKE"
          },
          "comment": {
            "type": "string",
            "description": "If the react type is comment, then put the contain here",
            "example": "Hi"
          },
          "tags": {
            "type": "array",
            "example": [1],
            "items": { "type": "integer", "format": "int64" }
          },
          "images": {
            "type": "array",
            "example": "[/path/to/image]",
            "items": { "type": "string" }
          },
          "matches": {
            "type": "array",
            "example": [1],
            "items": { "type": "integer", "format": "int64" }
          },
          "reactOn": {
            "type": "string",
            "description": "if react on comment, add this comment getstreamId here, if not lets empty",
            "example": "db0f3ce2-99ab-4ec0-b006-333de4a3d47b"
          }
        },
        "required": [
          "actor",
          "comment",
          "id",
          "images",
          "matches",
          "react",
          "reactOn",
          "tags"
        ]
      },
      "LogoutRequest": {
        "type": "object",
        "properties": {
          "platform": { "type": "string", "example": "android/ios/webapp" },
          "uuid": { "type": "string", "example": "unique-device-identity" }
        },
        "required": ["platform", "uuid"]
      },
      "ArrayWrapperPlayerInitializationDataResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerInitializationDataResponse"
            }
          }
        }
      },
      "PlayerInitializationDataResponse": {
        "type": "object",
        "properties": {
          "playerId": { "type": "string" },
          "playerName": { "type": "string" },
          "initializationStatus": { "type": "string" },
          "daysLeftForInitialization": { "type": "integer", "format": "int64" },
          "eventFormat": { "type": "string" },
          "qualificationScore": { "type": "number" }
        },
        "required": [
          "eventFormat",
          "initializationStatus",
          "playerId",
          "playerName",
          "qualificationScore"
        ]
      },
      "VerifyOtpRequest": {
        "type": "object",
        "properties": {
          "isoCode": { "type": "string", "example": "US", "minLength": 1 },
          "phoneNumber": {
            "type": "string",
            "example": "+918087XXXXXX",
            "minLength": 1
          },
          "otp": { "type": "string", "example": "012345", "minLength": 1 }
        },
        "required": ["isoCode", "otp", "phoneNumber"]
      },
      "SendOtpRequest": {
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "example": "+918087XXXXXX",
            "minLength": 1
          }
        },
        "required": ["phoneNumber"]
      },
      "ResetPasswordRequest": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "example": "mySecretPassword",
            "minLength": 1
          },
          "newPassword": {
            "type": "string",
            "example": "mySecretPassword",
            "minLength": 1
          }
        },
        "required": ["newPassword", "oldPassword"]
      },
      "VerifyTokenRequest": {
        "type": "object",
        "properties": {
          "token": { "type": "string", "example": "eyJhbGciOiJSUzUxMiJ9.eyJ" }
        },
        "required": ["token"]
      },
      "VerifyEmailRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com",
            "minLength": 1
          },
          "code": { "type": "string", "example": 1234 }
        },
        "required": ["code", "email"]
      },
      "EmailExistRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com",
            "minLength": 1
          }
        },
        "required": ["email"]
      },
      "PaymentReportRequest": {
        "type": "object",
        "properties": {
          "clientKey": { "type": "string" },
          "purchasedPackage": { "type": "string" }
        },
        "required": ["clientKey", "purchasedPackage"]
      },
      "GetStripeSessionRequest": {
        "type": "object",
        "properties": { "sessionId": { "type": "string" } },
        "required": ["sessionId"]
      },
      "DeleteUserResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://api.gamestoppedout.com/"
          },
          "confirmation_code": { "type": "string", "example": 200 }
        },
        "required": ["confirmation_code", "url"]
      },
      "ReportRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["COMMENT", "POST"],
            "example": "POST/COMMENT"
          },
          "id": { "type": "string", "example": "ID reported" },
          "reason": { "type": "string", "example": "Report reason" },
          "note": { "type": "string", "example": "Reason note" }
        },
        "required": ["id", "note", "reason", "type"]
      },
      "PostReport": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "format": "uuid" },
          "reporterId": { "type": "integer", "format": "int64" },
          "reportedId": { "type": "string" },
          "reportType": { "type": "string", "enum": ["COMMENT", "POST"] },
          "reportReason": { "type": "string" },
          "note": { "type": "string" },
          "status": {
            "type": "string",
            "enum": ["PENDING", "IN_REVIEW", "APPROVED", "REJECTED"]
          },
          "createdAt": { "type": "integer", "format": "int64" },
          "updatedAt": { "type": "integer", "format": "int64" },
          "countReport": { "type": "integer", "format": "int64" }
        },
        "required": [
          "countReport",
          "createdAt",
          "id",
          "reportReason",
          "reportType",
          "reportedId",
          "reporterId",
          "status",
          "updatedAt"
        ]
      },
      "SingleWrapperPostReport": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PostReport" }
        }
      },
      "DateRange": {
        "type": "object",
        "properties": {
          "startDate": { "type": "string", "format": "date" },
          "endDate": { "type": "string", "format": "date" }
        },
        "required": ["endDate", "startDate"]
      },
      "MatchFilters": {
        "type": "object",
        "properties": {
          "eventFormat": {
            "type": "array",
            "example": "['SINGLES','DOUBLES']",
            "items": { "type": "string", "enum": ["SINGLES", "DOUBLES"] }
          },
          "matchStatus": {
            "type": "array",
            "example": "['COMPLETE','PENDING']",
            "items": { "type": "string" }
          },
          "eventDate": {
            "$ref": "#/components/schemas/DateRange",
            "example": "yyyy-MM-dd"
          },
          "eventName": { "type": "string", "example": "Pickle ball" },
          "playerId": {
            "type": "integer",
            "format": "int64",
            "example": "0215254148"
          }
        }
      },
      "MatchSearchRequest": {
        "type": "object",
        "properties": {
          "offset": { "type": "integer", "format": "int32", "example": 0 },
          "limit": { "type": "integer", "format": "int32", "example": 3 },
          "filters": { "$ref": "#/components/schemas/MatchFilters" },
          "sort": { "$ref": "#/components/schemas/MatchSort" }
        },
        "required": ["limit", "offset"]
      },
      "MatchSort": {
        "type": "object",
        "properties": {
          "parameter": {
            "type": "string",
            "enum": ["MATCH_DATE", "CREATED_DATE", "MODIFIED_DATE"],
            "example": "MATCH_DATE/CREATED_DATE/MODIFIED_DATE"
          },
          "order": {
            "type": "string",
            "enum": ["asc", "desc"],
            "example": "ASC/DESC"
          }
        },
        "required": ["order", "parameter"]
      },
      "PageMatchResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/MatchResponse" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "SingleWrapperPageMatchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PageMatchResponse" }
        }
      },
      "AgeRangeFilter": {
        "type": "object",
        "properties": {
          "minAge": { "type": "integer", "format": "int32", "example": 18 },
          "maxAge": { "type": "integer", "format": "int32", "example": 25 }
        },
        "required": ["maxAge", "minAge"]
      },
      "ExcludeClubMembers": {
        "type": "object",
        "properties": {
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 7828935307
          },
          "roles": {
            "type": "array",
            "example": "ORGANIZER/DIRECTOR",
            "items": {
              "type": "string",
              "enum": ["PLAYER", "DIRECTOR", "ORGANIZER", "PENDING_PLAYER"]
            }
          }
        },
        "required": ["clubId", "roles"]
      },
      "RatingFilter": {
        "type": "object",
        "properties": {
          "minRating": {
            "type": "number",
            "example": 2.3,
            "maximum": 8.0,
            "minimum": 2.0
          },
          "maxRating": {
            "type": "number",
            "example": 3.3,
            "maximum": 8.0,
            "minimum": 2.0
          },
          "type": {
            "type": "string",
            "enum": ["SINGLES", "DOUBLES"],
            "example": "DOUBLES"
          },
          "category": { "type": "string", "enum": ["DUPR", "PROVISIONAL"] }
        },
        "required": ["maxRating", "minRating"]
      },
      "SearchFilter": {
        "type": "object",
        "properties": {
          "rating": { "$ref": "#/components/schemas/RatingFilter" },
          "gender": { "type": "string", "enum": ["MALE", "FEMALE"] },
          "lat": {
            "type": "number",
            "format": "double",
            "example": 72.34654645455
          },
          "lng": {
            "type": "number",
            "format": "double",
            "example": 19.55151584984
          },
          "radiusInMeters": {
            "type": "number",
            "format": "double",
            "example": 16093.4
          },
          "ageRange": { "$ref": "#/components/schemas/AgeRangeFilter" }
        },
        "required": ["lat", "lng", "radiusInMeters"]
      },
      "SearchRequest": {
        "type": "object",
        "properties": {
          "offset": { "type": "integer", "format": "int32" },
          "limit": { "type": "integer", "format": "int32", "maximum": 25 },
          "query": { "type": "string", "minLength": 1 },
          "exclude": {
            "type": "array",
            "items": { "type": "integer", "format": "int64" }
          },
          "filter": { "$ref": "#/components/schemas/SearchFilter" },
          "excludeClubMembers": {
            "$ref": "#/components/schemas/ExcludeClubMembers"
          },
          "includeUnclaimedPlayers": { "type": "boolean" },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 7828935307
          },
          "pageSource": {
            "type": "string",
            "enum": ["LD_ADD_PARTICIPANT"],
            "example": "LD_ADD_PARTICIPANT"
          },
          "verifiedEmail": { "type": "boolean" }
        },
        "required": ["filter", "includeUnclaimedPlayers", "limit", "offset"]
      },
      "PagePlayerResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/PlayerResponse" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "PlayerResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 26518181881
          },
          "fullName": { "type": "string", "example": "John Doe" },
          "firstName": { "type": "string", "example": "John" },
          "lastName": { "type": "string", "example": "Doe" },
          "username": { "type": "string", "example": "X AE A-XII" },
          "displayUsername": { "type": "boolean", "example": true },
          "shortAddress": { "type": "string", "example": "Los Angels, CA" },
          "formattedAddress": { "type": "string", "example": 5800 },
          "latitude": {
            "type": "number",
            "format": "double",
            "example": 72.34654645455
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": 19.55151584984
          },
          "gender": {
            "type": "string",
            "enum": ["MALE", "FEMALE"],
            "example": "MALE"
          },
          "age": { "type": "integer", "format": "int32", "example": 55 },
          "hand": {
            "type": "string",
            "enum": ["RIGHT", "LEFT", "BOTH", "NONE"],
            "example": "RIGHT"
          },
          "imageUrl": {
            "type": "string",
            "example": "https://dupr-dev.s3.amazonaws.com/profile/image.png"
          },
          "ratings": {
            "$ref": "#/components/schemas/PlayerRatingResponse",
            "description": "Ratings data"
          },
          "invited": { "type": "boolean" },
          "distance": { "type": "string", "example": "Nearby" },
          "enablePrivacy": { "type": "boolean", "example": false },
          "distanceInMiles": {
            "type": "number",
            "format": "double",
            "example": 15.4
          },
          "isLoggedInUser": { "type": "boolean", "example": true },
          "partnerStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "INVITED/CONFIRMED/NOT_CONFIRMED/CANCELLED"
          },
          "teamStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "ACTIVE/INACTIVE"
          },
          "isPlayer1": { "type": "boolean", "example": true },
          "registrationDetails": {
            "$ref": "#/components/schemas/RegistrationResponse",
            "example": "user@exmaple.com"
          },
          "phone": { "type": "string", "example": "+14445785789" },
          "email": { "type": "string", "example": "user@exmaple.com" },
          "verifiedEmail": { "type": "boolean", "example": true },
          "registrationType": {
            "type": "string",
            "enum": ["INVITATION", "UNCLAIMED"],
            "example": "INVITATION/UNCLAIMED"
          },
          "registered": { "type": "boolean", "example": true },
          "duprId": { "type": "string", "example": "8M2YEL" },
          "showRatingBanner": { "type": "boolean", "example": true },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "sponsor": { "$ref": "#/components/schemas/SponsorLogoResponse" },
          "substitutionDetails": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PlayerResponse" }
          },
          "isSubstitute": { "type": "boolean" },
          "lucraConnected": { "type": "boolean" },
          "substitute": { "type": "boolean", "writeOnly": true }
        },
        "required": [
          "duprId",
          "email",
          "enablePrivacy",
          "firstName",
          "fullName",
          "isPlayer1",
          "lastName",
          "registered",
          "registrationDetails",
          "registrationType",
          "showRatingBanner"
        ]
      },
      "SingleWrapperPagePlayerResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PagePlayerResponse" }
        }
      },
      "SponsorLogoResponse": {
        "type": "object",
        "properties": {
          "imageURL": { "type": "string" },
          "sponsorRedirectUrl": { "type": "string" },
          "sponsorPopupHeading": { "type": "string" },
          "description": { "type": "string" },
          "buttonText": { "type": "string" }
        }
      },
      "SingleWrapperPlayerResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PlayerResponse" }
        }
      },
      "AgeFilter": {
        "type": "object",
        "properties": {
          "minAge": { "type": "number", "example": 20, "minimum": 0.0 },
          "maxAge": { "type": "number", "example": 40 }
        },
        "required": ["maxAge", "minAge"]
      },
      "ClaimPlayerRatingFilter": {
        "type": "object",
        "properties": {
          "minRating": {
            "type": "number",
            "example": 2.3,
            "maximum": 8.0,
            "minimum": 2.0
          },
          "maxRating": {
            "type": "number",
            "example": 3.3,
            "maximum": 8.0,
            "minimum": 2.0
          },
          "type": {
            "type": "string",
            "enum": ["SINGLES", "DOUBLES"],
            "example": "DOUBLES"
          }
        },
        "required": ["maxRating", "minRating"]
      },
      "ClaimPlayerSearchFilter": {
        "type": "object",
        "properties": {
          "age": { "$ref": "#/components/schemas/AgeFilter" },
          "rating": { "$ref": "#/components/schemas/ClaimPlayerRatingFilter" },
          "gender": { "type": "string", "enum": ["MALE", "FEMALE"] },
          "shortAddress": {
            "type": "string",
            "example": "King County, WA, US"
          },
          "lat": {
            "type": "number",
            "format": "double",
            "example": 72.34654645455
          },
          "lng": {
            "type": "number",
            "format": "double",
            "example": 19.55151584984
          },
          "radiusInMeters": {
            "type": "number",
            "format": "double",
            "example": 16093.4
          }
        }
      },
      "ClaimPlayerSearchRequest": {
        "type": "object",
        "properties": {
          "offset": { "type": "integer", "format": "int32" },
          "limit": { "type": "integer", "format": "int32", "maximum": 25 },
          "query": { "type": "string", "minLength": 1 },
          "filter": { "$ref": "#/components/schemas/ClaimPlayerSearchFilter" },
          "sort": { "$ref": "#/components/schemas/ClaimPlayerSearchSort" }
        },
        "required": ["limit", "offset"]
      },
      "ClaimPlayerSearchSort": {
        "type": "object",
        "properties": {
          "parameter": {
            "type": "string",
            "enum": ["fullNameSort", "singles", "doubles"],
            "example": "fullNameSort/singles/doubles"
          },
          "order": {
            "type": "string",
            "enum": ["asc", "desc"],
            "example": "ASC/DESC"
          }
        },
        "required": ["order", "parameter"]
      },
      "PageUnclaimedPlayerResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/UnclaimedPlayerResponse" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "RatingsUnclaimedPlayerResponse": {
        "type": "object",
        "properties": {
          "singles": { "type": "string", "example": 4.125 },
          "doubles": { "type": "string", "example": 2.864 },
          "singlesProvisional": { "type": "boolean", "example": false },
          "doublesProvisional": { "type": "boolean", "example": false },
          "singlesVerified": { "type": "string", "example": 4.125 },
          "doublesVerified": { "type": "string", "example": 2.864 }
        }
      },
      "SingleWrapperPageUnclaimedPlayerResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": {
            "$ref": "#/components/schemas/PageUnclaimedPlayerResponse"
          }
        }
      },
      "UnclaimedPlayerResponse": {
        "type": "object",
        "properties": {
          "fullname": { "type": "string", "example": "Brian Lara" },
          "ratings": {
            "$ref": "#/components/schemas/RatingsUnclaimedPlayerResponse"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 26518181881
          },
          "referralCode": { "type": "string", "example": "NV3JF2" },
          "age": { "type": "integer", "format": "int32", "example": 12 },
          "gender": {
            "type": "string",
            "enum": ["MALE", "FEMALE"],
            "example": "MALE/FEMALE"
          },
          "imageUrl": {
            "type": "string",
            "example": "http://www.example.com/image.png"
          },
          "shortAddress": {
            "type": "string",
            "example": "201, San Jose, CA, USA"
          },
          "claimed": { "type": "boolean", "example": true },
          "sponsor": { "$ref": "#/components/schemas/SponsorLogoResponse" }
        },
        "required": ["claimed", "fullname", "ratings"]
      },
      "UnclaimedPlayerDetailsRequest": {
        "type": "object",
        "properties": { "duprId": { "type": "string" } },
        "required": ["duprId"]
      },
      "Error": {
        "type": "object",
        "properties": { "message": { "type": "string" } },
        "required": ["message"]
      },
      "ResultUnclaimedPlayerDetailsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnclaimedPlayerDetailsResponse"
            }
          },
          "errors": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Error" }
          }
        },
        "required": ["errors", "results", "status"]
      },
      "UnclaimedPlayerDetailsResponse": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "userId": { "type": "integer", "format": "int64" },
          "age": { "type": "integer", "format": "int32" },
          "gender": { "type": "string", "enum": ["MALE", "FEMALE"] }
        },
        "required": ["name", "userId"]
      },
      "PlayerRatingHistoryOvertimeRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Match event format",
            "enum": ["SINGLES", "DOUBLES"],
            "example": "SINGLES or DOUBLES"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "Start date",
            "example": "YYYY-MM-DD"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "description": "End date",
            "example": "YYYY-MM-DD"
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Data limitation",
            "example": 100
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Data offset",
            "example": 100
          },
          "sortBy": {
            "type": "string",
            "description": "Sort by type",
            "example": "asc | desc"
          }
        },
        "required": ["type"]
      },
      "History": {
        "type": "object",
        "properties": {
          "date": { "type": "string", "format": "date-time" },
          "matchDate": { "type": "string", "format": "date" },
          "rating": { "type": "number" },
          "changedByAdmin": { "type": "boolean" }
        },
        "required": ["changedByAdmin", "date"]
      },
      "PlayerRatingOvertime": {
        "type": "object",
        "properties": {
          "playerId": { "type": "integer", "format": "int64" },
          "type": { "type": "string", "enum": ["SINGLES", "DOUBLES"] },
          "ratingHistory": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/History" }
          }
        },
        "required": ["playerId", "ratingHistory", "type"]
      },
      "SingleWrapperPlayerRatingOvertime": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PlayerRatingOvertime" }
        }
      },
      "UserByDuprIdRequest": {
        "type": "object",
        "properties": {
          "duprId": { "type": "string", "maxLength": 6, "minLength": 6 }
        },
        "required": ["duprId"]
      },
      "ResultUserByDuprIdResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserByDuprIdResponse" }
          },
          "errors": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Error" }
          }
        },
        "required": ["errors", "results", "status"]
      },
      "UserByDuprIdResponse": {
        "type": "object",
        "properties": { "userId": { "type": "integer", "format": "int64" } },
        "required": ["userId"]
      },
      "MiLPTeamRequest": {
        "type": "object",
        "properties": {
          "teamName": { "type": "string", "example": "Pickleball Team" },
          "teamCaptainDuprId": { "type": "string", "example": "XFRGTR" },
          "teamMembersDuprIds": {
            "type": "array",
            "example": "['FDSGF', 'VVBGS']",
            "items": { "type": "string" }
          }
        },
        "required": ["teamCaptainDuprId", "teamMembersDuprIds", "teamName"]
      },
      "MiLPTeam": {
        "type": "object",
        "properties": {
          "teamId": { "type": "integer", "format": "int64" },
          "teamCode": { "type": "string" },
          "teamName": { "type": "string" },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "created": { "type": "string", "format": "date-time" },
          "teamMembers": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TeamMember" }
          }
        },
        "required": ["teamId", "teamMembers", "teamName"]
      },
      "SingleWrapperMiLPTeam": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/MiLPTeam" }
        }
      },
      "TeamMember": {
        "type": "object",
        "properties": {
          "teamId": { "type": "integer", "format": "int64" },
          "userId": { "type": "integer", "format": "int64" },
          "fullName": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "role": { "type": "string" },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "created": { "type": "string", "format": "date-time" },
          "imageUrl": { "type": "string" }
        },
        "required": ["role", "teamId", "userId"]
      },
      "MiLPRegisterTeamRequest": {
        "type": "object",
        "properties": {
          "divisionId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "eventId": {
            "type": "integer",
            "format": "int64",
            "example": 1231242
          },
          "teamId": { "type": "integer", "format": "int64", "example": 1231242 }
        },
        "required": ["divisionId", "eventId", "teamId"]
      },
      "SessionResponse": {
        "type": "object",
        "properties": {
          "sessionId": { "type": "string" },
          "checkoutUrl": { "type": "string" },
          "previouslyPaid": { "type": "boolean" }
        },
        "required": ["checkoutUrl", "sessionId"]
      },
      "SingleWrapperSessionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/SessionResponse" }
        }
      },
      "Distance": {
        "type": "object",
        "properties": {
          "from": { "type": "integer", "format": "int32" },
          "to": { "type": "integer", "format": "int32" }
        }
      },
      "EventFilter": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "Event name" },
          "statuses": {
            "type": "array",
            "example": "UPCOMING/ONGOING/COMPLETE",
            "items": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "UPCOMING",
                "IN_PROGRESS",
                "COMPLETE",
                "CANCELLED",
                "NOT_CONFIRMED",
                "INVITED",
                "CONFIRMED",
                "MATCH_BYE",
                "PENDING",
                "FORFEITED",
                "DELETED",
                "ONGOING",
                "SUSPENDED_TOS_13"
              ]
            }
          },
          "placeId": { "type": "string", "example": "Peh173uin271llopvdanh2" },
          "distance": {
            "$ref": "#/components/schemas/Distance",
            "example": "Distance by kilometers"
          },
          "geoPoint": {
            "$ref": "#/components/schemas/GeoPoint",
            "example": "Longitude & Latitude"
          },
          "division": {
            "type": "string",
            "enum": [
              "DUPR12",
              "DUPR14",
              "DUPR16",
              "DUPR18",
              "DUPR20",
              "DUPR22",
              "DUPR_OPEN"
            ],
            "example": "DUPR12/DUPR14/DUPR16/DUPR18/DUPR20/DUPR22/DUPR_OPEN"
          },
          "type": {
            "type": "string",
            "enum": ["STANDARD", "MARQUE", "SHOWDOWN"],
            "example": "STANDARD/MARQUE/SHOWDOWN"
          }
        }
      },
      "GeoPoint": {
        "type": "object",
        "properties": {
          "lon": { "type": "number", "format": "double" },
          "lat": { "type": "number", "format": "double" }
        }
      },
      "MiLPEventSearchRequest": {
        "type": "object",
        "properties": {
          "offset": { "type": "integer", "format": "int32" },
          "limit": { "type": "integer", "format": "int32" },
          "filters": { "$ref": "#/components/schemas/EventFilter" }
        }
      },
      "Description": {
        "type": "object",
        "properties": {
          "header": { "type": "string" },
          "headerType": { "type": "string" },
          "content": { "type": "string" },
          "contentType": { "type": "string" },
          "footer": { "type": "string" },
          "footerType": { "type": "string" }
        }
      },
      "Division": {
        "type": "object",
        "properties": {
          "eventId": { "type": "integer", "format": "int64" },
          "divisionId": { "type": "integer", "format": "int64" },
          "divisionName": { "type": "string" },
          "divisionCode": { "type": "string" },
          "registrationPeriod": {
            "type": "array",
            "items": { "type": "string" }
          },
          "registrationStart": { "type": "string", "format": "date" },
          "registrationEnd": { "type": "string", "format": "date" },
          "day1Start": { "type": "string", "format": "date" },
          "day2Start": { "type": "string", "format": "date" },
          "maxTeams": { "type": "integer", "format": "int32" },
          "maxWaitlist": { "type": "integer", "format": "int32" },
          "entryFee": { "type": "number" },
          "prize": { "type": "number" },
          "divisionType": {
            "type": "string",
            "enum": [
              "DUPR12",
              "DUPR14",
              "DUPR16",
              "DUPR18",
              "DUPR20",
              "DUPR22",
              "DUPR_OPEN"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          }
        },
        "required": [
          "divisionCode",
          "divisionId",
          "divisionName",
          "divisionType",
          "eventId",
          "prize"
        ]
      },
      "MiLPEvent": {
        "type": "object",
        "properties": {
          "eventId": { "type": "integer", "format": "int64" },
          "eventName": { "type": "string" },
          "clubId": { "type": "integer", "format": "int64" },
          "clubName": { "type": "string" },
          "creatorId": { "type": "integer", "format": "int64" },
          "creatorName": { "type": "string" },
          "creatorEmail": { "type": "string" },
          "eventType": {
            "type": "string",
            "enum": ["STANDARD", "MARQUE", "SHOWDOWN"]
          },
          "defaultMaxTeams": { "type": "integer", "format": "int32" },
          "defaultMaxWaitlist": { "type": "integer", "format": "int32" },
          "defaultEntryFee": { "type": "number" },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "duration": { "type": "array", "items": { "type": "string" } },
          "addressStr": { "type": "string" },
          "description": { "$ref": "#/components/schemas/Description" },
          "divisions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Division" }
          }
        },
        "required": [
          "addressStr",
          "clubId",
          "creatorId",
          "defaultEntryFee",
          "defaultMaxTeams",
          "defaultMaxWaitlist",
          "divisions",
          "eventId",
          "eventName",
          "eventType",
          "status"
        ]
      },
      "PageMiLPEvent": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/MiLPEvent" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "SingleWrapperPageMiLPEvent": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PageMiLPEvent" }
        }
      },
      "MILPDivisionRequest": {
        "type": "object",
        "properties": {
          "divisionType": {
            "type": "string",
            "enum": [
              "DUPR12",
              "DUPR14",
              "DUPR16",
              "DUPR18",
              "DUPR20",
              "DUPR22",
              "DUPR_OPEN"
            ],
            "example": "DUPR12/DUPR_OPEN/DUPR14/DUPR16/DUPR18/DUPR20/DUPR22"
          },
          "divisionName": {
            "type": "string",
            "example": "Stillwater Pickleball"
          },
          "maxTeams": { "type": "integer", "format": "int32", "example": 10 },
          "maxWaitlist": { "type": "integer", "format": "int32", "example": 3 },
          "day1Start": {
            "type": "string",
            "format": "date-time",
            "example": "yyyy-mm-ddTHH:mm:ss"
          },
          "day2Start": {
            "type": "string",
            "format": "date-time",
            "example": "yyyy-mm-ddTHH:mm:ss"
          },
          "registrationPeriod": {
            "type": "array",
            "example": "['yyyy-mm-dd','yyyy-mm-dd']",
            "items": { "type": "string", "format": "date" }
          },
          "entryFee": { "type": "number", "example": 50 },
          "prize": { "type": "number", "example": 500 }
        },
        "required": ["day1Start", "divisionType", "prize", "registrationPeriod"]
      },
      "MILPEventOrganizerRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "ACTIVE/CANCELLED"
          }
        },
        "required": ["userId"]
      },
      "MiLPEventRequest": {
        "type": "object",
        "properties": {
          "eventName": { "type": "string", "example": "Stillwater Pickleball" },
          "organizers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MILPEventOrganizerRequest"
            }
          },
          "defaultEntryFee": { "type": "number", "example": 500 },
          "defaultMaxTeams": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "defaultMaxWaitlist": {
            "type": "integer",
            "format": "int32",
            "example": 3
          },
          "description": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "addressId": {
            "type": "integer",
            "format": "int64",
            "example": 5156151658
          },
          "eventType": {
            "type": "string",
            "enum": ["STANDARD", "MARQUE", "SHOWDOWN"],
            "example": "STANDARD/MARQUE/SHOWDOWN"
          },
          "timeZone": { "type": "string", "example": "America/New_York" },
          "duration": {
            "type": "array",
            "example": "['yyyy-mm-dd','yyyy-mm-dd']",
            "items": { "type": "string", "format": "date" }
          },
          "divisions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MILPDivisionRequest" }
          },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "ACTIVE/IN_PROGRESS/COMPLETE/CANCELLED"
          }
        },
        "required": [
          "addressId",
          "clubId",
          "defaultEntryFee",
          "defaultMaxTeams",
          "defaultMaxWaitlist",
          "divisions",
          "duration",
          "eventName",
          "eventType",
          "organizers",
          "timeZone"
        ]
      },
      "ShareMatchRequest": {
        "type": "object",
        "properties": { "content": { "type": "string" } },
        "required": ["content"]
      },
      "MatchInfo": {
        "type": "object",
        "properties": {
          "eventFormat": { "type": "string", "enum": ["SINGLES", "DOUBLES"] },
          "matchSource": {
            "type": "string",
            "enum": [
              "DUPR",
              "MANUAL",
              "TOURNAMENT",
              "CLUB",
              "LEAGUE",
              "PARTNER",
              "EXTERNAL"
            ]
          },
          "eventName": { "type": "string" }
        },
        "required": ["eventFormat", "matchSource"]
      },
      "MatchRatingSimulatorRequest": {
        "type": "object",
        "properties": {
          "match": { "$ref": "#/components/schemas/MatchInfo" },
          "team1": { "$ref": "#/components/schemas/TeamInfo" },
          "team2": { "$ref": "#/components/schemas/TeamInfo" }
        },
        "required": ["match", "team1", "team2"]
      },
      "TeamInfo": {
        "type": "object",
        "properties": {
          "player1Id": { "type": "integer", "format": "int64" },
          "player2Id": { "type": "integer", "format": "int64" },
          "game1": { "type": "integer", "format": "int32" },
          "game2": { "type": "integer", "format": "int32" },
          "game3": { "type": "integer", "format": "int32" },
          "game4": { "type": "integer", "format": "int32" },
          "game5": { "type": "integer", "format": "int32" },
          "winner": { "type": "boolean" }
        },
        "required": ["winner"]
      },
      "MatchConfirmRequest": {
        "type": "object",
        "properties": {
          "matchId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          }
        },
        "required": ["matchId"]
      },
      "MyLeagueRequest": {
        "type": "object",
        "properties": {
          "offset": { "type": "integer", "format": "int32", "example": 0 },
          "limit": { "type": "integer", "format": "int32", "example": 10 },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "COMPLETE/IN_PROGRESS/UPCOMING"
          }
        }
      },
      "PageLeagueResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/LeagueResponse" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "SingleWrapperPageLeagueResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PageLeagueResponse" }
        }
      },
      "LeagueFilter": {
        "type": "object",
        "properties": {
          "skillLevel": { "$ref": "#/components/schemas/SkillLevelFilter" },
          "elimination": {
            "type": "array",
            "example": "['DOUBLE_PREVENTED','ROUND_ROBIN']",
            "items": {
              "type": "string",
              "enum": [
                "SINGLE",
                "DOUBLE",
                "DOUBLE_PREVENTED",
                "ROUND_ROBIN",
                "COMPASS",
                "FLEX"
              ]
            }
          },
          "eventFormat": {
            "type": "array",
            "example": "['SINGLES','DOUBLES']",
            "items": { "type": "string", "enum": ["SINGLES", "DOUBLES"] }
          },
          "playerGroup": {
            "type": "array",
            "example": "['MEN','WOMEN','MIXED']",
            "items": {
              "type": "string",
              "enum": ["MEN", "WOMEN", "MIXED", "COED", "OPEN"]
            }
          },
          "city": {
            "type": "array",
            "example": "['San Francisco','Great Falls']",
            "items": { "type": "string" }
          },
          "status": {
            "type": "array",
            "example": "['ACTIVE','IN_ACTIVE']",
            "items": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "UPCOMING",
                "IN_PROGRESS",
                "COMPLETE",
                "CANCELLED",
                "NOT_CONFIRMED",
                "INVITED",
                "CONFIRMED",
                "MATCH_BYE",
                "PENDING",
                "FORFEITED",
                "DELETED",
                "ONGOING",
                "SUSPENDED_TOS_13"
              ]
            }
          },
          "durationStatus": {
            "type": "array",
            "example": "['COMPLETE','IN_PROGRESS','UPCOMING']",
            "items": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "UPCOMING",
                "IN_PROGRESS",
                "COMPLETE",
                "CANCELLED",
                "NOT_CONFIRMED",
                "INVITED",
                "CONFIRMED",
                "MATCH_BYE",
                "PENDING",
                "FORFEITED",
                "DELETED",
                "ONGOING",
                "SUSPENDED_TOS_13"
              ]
            }
          },
          "registrationStatus": {
            "type": "array",
            "example": "['OPEN','NOT_STARTED','CLOSED']",
            "items": {
              "type": "string",
              "enum": ["OPEN", "NOT_STARTED", "CLOSED"]
            }
          }
        }
      },
      "SearchLeaguesRequest": {
        "type": "object",
        "properties": {
          "offset": { "type": "integer", "format": "int32" },
          "limit": { "type": "integer", "format": "int32", "maximum": 25 },
          "query": { "type": "string", "minLength": 1 },
          "lat": {
            "type": "number",
            "format": "double",
            "example": 72.34654645455
          },
          "lng": {
            "type": "number",
            "format": "double",
            "example": 19.55151584984
          },
          "radiusInMeters": {
            "type": "number",
            "format": "double",
            "example": 16093.4
          },
          "filters": { "$ref": "#/components/schemas/LeagueFilter" },
          "isNearMe": { "type": "boolean", "example": true }
        },
        "required": ["lat", "limit", "lng", "offset"]
      },
      "SkillLevelFilter": {
        "type": "object",
        "properties": {
          "maxRating": { "type": "number", "format": "double", "example": 4.2 },
          "minRating": { "type": "number", "format": "double", "example": 3.2 }
        },
        "required": ["maxRating", "minRating"]
      },
      "LeagueRequest": {
        "type": "object",
        "properties": {
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "leagueName": {
            "type": "string",
            "example": "Stillwater Pickleball"
          },
          "mediaId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "liabilityWaiverId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "memberFee": { "type": "number", "example": 500 },
          "nonMemberFee": { "type": "number", "example": 500 },
          "longDescription": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "shortDescription": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "additionalInformation": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "refundPolicy": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "safetyPolicy": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "addressId": {
            "type": "integer",
            "format": "int64",
            "example": 5156151658
          },
          "type": { "type": "string", "enum": ["FLEX"], "example": "FLEX" },
          "attributes": {
            "type": "object",
            "additionalProperties": { "$ref": "#/components/schemas/Attribute" }
          },
          "membershipPermission": {
            "type": "string",
            "enum": ["OPEN_TO_ALL", "CLUB_MEMBERS"],
            "example": "OPEN_TO_ALL/CLUB_MEMBERS"
          },
          "advertiseStart": {
            "type": "string",
            "format": "date",
            "example": "yyyy-mm-dd"
          },
          "advertiseEnd": {
            "type": "string",
            "format": "date",
            "example": "yyyy-mm-dd"
          },
          "brackets": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BracketRequest" }
          },
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "ACTIVE/IN_PROGRESS/COMPLETE/CANCELLED"
          },
          "registrationUrl": {
            "type": "string",
            "example": "https://mydupr.com/register"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "yyyy-mm-dd"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "yyyy-mm-dd"
          }
        },
        "required": [
          "addressId",
          "clubId",
          "endDate",
          "leagueName",
          "mediaId",
          "nonMemberFee",
          "registrationUrl",
          "startDate",
          "userId"
        ]
      },
      "OpenPlayEventWaitlist": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "eventId": { "type": "integer", "format": "int64" },
          "waitlistPosition": { "type": "integer", "format": "int32" }
        },
        "required": ["eventId", "waitlistPosition"]
      },
      "SingleWrapperOpenPlayEventWaitlist": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/OpenPlayEventWaitlist" }
        }
      },
      "OpenPlayCreateRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "Dreamland Open Play" },
          "eventDate": {
            "type": "string",
            "format": "date",
            "example": "YYYY-MM-dd"
          },
          "time": {
            "$ref": "#/components/schemas/TimeRange",
            "example": "HH:mm:ss"
          },
          "addressId": {
            "type": "integer",
            "format": "int64",
            "example": 5156151658
          },
          "invitedPlayers": {
            "type": "array",
            "example": "['DUPR1', 'DUPR2']",
            "items": { "type": "string" },
            "uniqueItems": true
          },
          "maxPlayers": { "type": "integer", "format": "int32", "example": 25 },
          "rating": {
            "$ref": "#/components/schemas/RatingRange",
            "example": 2.0
          },
          "description": {
            "type": "string",
            "example": "Welcome to new open play event"
          }
        },
        "required": [
          "addressId",
          "eventDate",
          "maxPlayers",
          "name",
          "rating",
          "time"
        ]
      },
      "DraftBracketRequest": {
        "type": "object",
        "properties": {
          "customCode": { "type": "string", "example": "BRACKET123" },
          "duration": {
            "type": "array",
            "example": "['yyyy-mm-dd','yyyy-mm-dd']",
            "items": { "type": "string", "format": "date" }
          },
          "format": {
            "type": "string",
            "enum": ["SINGLES", "DOUBLES"],
            "example": "SINGLES/DOUBLES"
          },
          "elimination": {
            "type": "string",
            "enum": [
              "SINGLE",
              "DOUBLE",
              "DOUBLE_PREVENTED",
              "ROUND_ROBIN",
              "COMPASS",
              "FLEX"
            ],
            "example": "SINGLE/DOUBLE/DOUBLE_PREVENTED/ROUND_ROBIN"
          },
          "playerGroup": {
            "type": "string",
            "enum": ["MEN", "WOMEN", "MIXED", "COED", "OPEN"],
            "example": "MEN/WOMEN/MIXED/COED"
          },
          "ratingBracket": {
            "type": "array",
            "example": [3.1, 4.5],
            "items": { "type": "number" }
          },
          "ageBracket": {
            "type": "array",
            "example": [27, 35],
            "items": { "type": "integer", "format": "int64" }
          },
          "description": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "matchBonusPoints": { "type": "number", "example": 8 },
          "registrationDate": {
            "type": "array",
            "example": "['yyyy-mm-dd','yyyy-mm-dd']",
            "items": { "type": "string", "format": "date" }
          },
          "scoreFormat": { "type": "integer", "format": "int64", "example": 1 },
          "memberFee": { "type": "number", "example": 500 },
          "nonMemberFee": { "type": "number", "example": 500 },
          "maxTeam": { "type": "integer", "format": "int64", "example": 500 },
          "waitList": { "type": "integer", "format": "int64", "example": 500 },
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "name": { "type": "string", "example": "Stillwater Pickleball" },
          "courts": { "type": "integer", "format": "int32", "example": 5 },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "registrationDateTime": {
            "type": "array",
            "example": "['yyyy-mm-dd HH:mm:ss','yyyy-mm-dd HH:mm:ss']",
            "items": { "type": "string", "format": "date-time" }
          },
          "durationDateTime": {
            "type": "array",
            "example": "['yyyy-mm-dd HH:mm:ss','yyyy-mm-dd HH:mm:ss']",
            "items": { "type": "string", "format": "date-time" }
          },
          "timeZone": { "type": "string", "example": "IST" },
          "zoneName": { "type": "string", "example": "IST" }
        },
        "required": ["bracketId"]
      },
      "DraftLeagueRequest": {
        "type": "object",
        "properties": {
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "leagueName": {
            "type": "string",
            "example": "Stillwater Pickleball"
          },
          "mediaId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "liabilityWaiverId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "memberFee": { "type": "number", "example": 500 },
          "nonMemberFee": { "type": "number", "example": 500 },
          "longDescription": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "shortDescription": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "additionalInformation": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "refundPolicy": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "safetyPolicy": {
            "$ref": "#/components/schemas/LeagueContentRequest"
          },
          "addressId": {
            "type": "integer",
            "format": "int64",
            "example": 5156151658
          },
          "type": { "type": "string", "enum": ["FLEX"], "example": "FLEX" },
          "attributes": {
            "type": "object",
            "additionalProperties": { "$ref": "#/components/schemas/Attribute" }
          },
          "membershipPermission": {
            "type": "string",
            "enum": ["OPEN_TO_ALL", "CLUB_MEMBERS"],
            "example": "OPEN_TO_ALL/CLUB_MEMBERS"
          },
          "advertiseStart": {
            "type": "string",
            "format": "date",
            "example": "yyyy-mm-dd"
          },
          "advertiseEnd": {
            "type": "string",
            "format": "date",
            "example": "yyyy-mm-dd"
          },
          "brackets": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/DraftBracketRequest" }
          },
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          }
        },
        "required": ["clubId", "leagueId", "userId"]
      },
      "AddPartnerRequest": {
        "type": "object",
        "properties": {
          "partnerId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "partnerStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "NOT_CONFIRMED/INVITED/CONFIRMED/INACTIVE"
          }
        },
        "required": ["partnerId", "partnerStatus"]
      },
      "JoinLeagueRequest": {
        "type": "object",
        "properties": {
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "isClubMember": { "type": "boolean", "example": true },
          "partnerDetails": { "$ref": "#/components/schemas/AddPartnerRequest" }
        },
        "required": ["bracketId", "isClubMember"]
      },
      "JoinLeagueResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "array",
            "example": "['26518181881']",
            "items": { "type": "integer", "format": "int64" }
          },
          "failed": {
            "type": "array",
            "example": "['26518181881']",
            "items": { "type": "integer", "format": "int64" }
          },
          "session": { "$ref": "#/components/schemas/SessionResponse" }
        },
        "required": ["failed", "success"]
      },
      "SingleWrapperJoinLeagueResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/JoinLeagueResponse" }
        }
      },
      "Filters": {
        "type": "object",
        "properties": {
          "registrationStatus": {
            "type": "string",
            "enum": ["OPEN", "NOT_STARTED", "CLOSED"]
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "COMPLETE/PENDING"
          },
          "partnerStatus": {
            "type": "string",
            "enum": ["REGISTERED", "PENDING", "NO_PARTNER"]
          },
          "isRegistered": { "type": "boolean" },
          "isWaitListed": { "type": "boolean" }
        }
      },
      "PlayerSort": {
        "type": "object",
        "properties": {
          "parameter": {
            "type": "string",
            "enum": [
              "RATINGS",
              "SINGLES_RATINGS",
              "DOUBLES_RATINGS",
              "PLAYER_NAME"
            ],
            "example": "RATINGS"
          },
          "order": {
            "type": "string",
            "enum": ["asc", "desc"],
            "example": "ASC/DESC"
          }
        },
        "required": ["order", "parameter"]
      },
      "SearchLeaguePlayerRequest": {
        "type": "object",
        "properties": {
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 7828935307
          },
          "query": { "type": "string", "example": "*" },
          "filters": { "$ref": "#/components/schemas/Filters" },
          "sort": { "$ref": "#/components/schemas/PlayerSort" },
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 7828935307
          }
        },
        "required": ["bracketId", "leagueId", "query"]
      },
      "PagePlayerPaymentResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/PlayerPaymentResponse" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "PlayerPaymentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 26518181881
          },
          "fullName": { "type": "string", "example": "John Doe" },
          "firstName": { "type": "string", "example": "John" },
          "lastName": { "type": "string", "example": "Doe" },
          "username": { "type": "string", "example": "X AE A-XII" },
          "displayUsername": { "type": "boolean", "example": true },
          "shortAddress": { "type": "string", "example": "Los Angels, CA" },
          "formattedAddress": { "type": "string", "example": 5800 },
          "latitude": {
            "type": "number",
            "format": "double",
            "example": 72.34654645455
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "example": 19.55151584984
          },
          "gender": {
            "type": "string",
            "enum": ["MALE", "FEMALE"],
            "example": "MALE"
          },
          "age": { "type": "integer", "format": "int32", "example": 55 },
          "hand": {
            "type": "string",
            "enum": ["RIGHT", "LEFT", "BOTH", "NONE"],
            "example": "RIGHT"
          },
          "imageUrl": {
            "type": "string",
            "example": "https://dupr-dev.s3.amazonaws.com/profile/image.png"
          },
          "ratings": { "$ref": "#/components/schemas/PlayerRatingResponse" },
          "invited": { "type": "boolean" },
          "distance": { "type": "string", "example": "Nearby" },
          "enablePrivacy": { "type": "boolean", "example": false },
          "distanceInMiles": {
            "type": "number",
            "format": "double",
            "example": 15.4
          },
          "isLoggedInUser": { "type": "boolean", "example": true },
          "partnerStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "INVITED/CONFIRMED/NOT_CONFIRMED/CANCELLED"
          },
          "teamStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "ACTIVE/INACTIVE"
          },
          "isPlayer1": { "type": "boolean", "example": true },
          "phone": { "type": "string", "example": "+14445785789" },
          "email": { "type": "string", "example": "user@exmaple.com" },
          "verifiedEmail": { "type": "boolean", "example": true },
          "registrationType": {
            "type": "string",
            "enum": ["INVITATION", "UNCLAIMED"],
            "example": "INVITATION/UNCLAIMED"
          },
          "registered": { "type": "boolean", "example": true },
          "duprId": { "type": "string", "example": "8M2YEL" },
          "eventFee": { "type": "number", "example": "8M2YEL" },
          "eventRefundedAmount": { "type": "number", "example": "8M2YEL" },
          "brackets": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BracketResponse" }
          },
          "isSubstitute": { "type": "boolean" },
          "substitute": { "type": "boolean", "writeOnly": true }
        },
        "required": [
          "duprId",
          "email",
          "enablePrivacy",
          "eventFee",
          "eventRefundedAmount",
          "firstName",
          "fullName",
          "isPlayer1",
          "lastName",
          "registered",
          "registrationType"
        ]
      },
      "SingleWrapperPagePlayerPaymentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PagePlayerPaymentResponse" }
        }
      },
      "ExportEventPaymentRequest": {
        "type": "object",
        "properties": {
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 7828935307
          },
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 7828935307
          },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 7828935307
          }
        },
        "required": ["bracketId", "clubId", "leagueId"]
      },
      "DownloadS3Response": {
        "type": "object",
        "properties": {
          "s3Url": {
            "type": "string",
            "example": "https://dupr-dev.s3.amazonaws.com/clubs-members-excel/312312-2021-09-11"
          }
        },
        "required": ["s3Url"]
      },
      "SingleWrapperDownloadS3Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/DownloadS3Response" }
        }
      },
      "AnnouncementContent": {
        "type": "object",
        "properties": {
          "header": { "type": "string", "example": "<h1>header</h1>" },
          "headerType": { "type": "string", "example": "text/html" },
          "content": { "type": "string", "example": "<h1>content</h1>" },
          "contentType": { "type": "string", "example": "text/html" },
          "footer": { "type": "string", "example": "<h1>footer</h1>" },
          "footerType": { "type": "string", "example": "text/html" },
          "contentId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          }
        },
        "required": ["content", "contentType"]
      },
      "EventAnnouncementRequest": {
        "type": "object",
        "properties": {
          "announcementId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "title": { "type": "string", "example": "Announcement Title" },
          "description": {
            "$ref": "#/components/schemas/AnnouncementContent",
            "example": 45785789
          },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          }
        },
        "required": [
          "announcementId",
          "bracketId",
          "clubId",
          "description",
          "leagueId",
          "title"
        ]
      },
      "AnnouncementHistoryRequest": {
        "type": "object",
        "properties": {
          "offset": { "type": "integer", "format": "int32", "example": 0 },
          "limit": { "type": "integer", "format": "int32", "example": 10 },
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          }
        },
        "required": ["bracketId", "clubId", "leagueId", "limit", "offset"]
      },
      "ContentResponse": {
        "type": "object",
        "properties": {
          "contentId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "header": { "type": "string", "example": "<h1>header</h1>" },
          "headerType": { "type": "string", "example": "text/html" },
          "content": { "type": "string", "example": "<h1>content</h1>" },
          "contentType": { "type": "string", "example": "text/html" },
          "footer": { "type": "string", "example": "<h1>footer</h1>" },
          "footerType": { "type": "string", "example": "text/html" }
        },
        "required": ["content", "contentId", "contentType"]
      },
      "EventAnnouncementsResponse": {
        "type": "object",
        "properties": {
          "announcementId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "title": { "type": "string", "example": "announcement" },
          "description": { "$ref": "#/components/schemas/ContentResponse" },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "ACTIVE/IN_ACTIVE/COMPLETE"
          },
          "emailSent": { "type": "integer", "format": "int32", "example": 10 },
          "emailFailed": {
            "type": "integer",
            "format": "int32",
            "example": 10
          },
          "pushSent": { "type": "integer", "format": "int32", "example": 10 },
          "pushFailed": { "type": "integer", "format": "int32", "example": 10 },
          "smsSent": { "type": "integer", "format": "int32", "example": 10 },
          "smsFailed": { "type": "integer", "format": "int32", "example": 10 },
          "created": {
            "type": "string",
            "example": "2022-04-27T21:59:57.711772"
          },
          "registeredMembers": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "notificationCount": {
            "type": "integer",
            "format": "int64",
            "example": 10
          }
        },
        "required": [
          "announcementId",
          "bracketId",
          "created",
          "emailFailed",
          "emailSent",
          "leagueId",
          "pushFailed",
          "pushSent",
          "smsFailed",
          "smsSent",
          "status",
          "title"
        ]
      },
      "PageEventAnnouncementsResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": {
              "$ref": "#/components/schemas/EventAnnouncementsResponse"
            }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "SingleWrapperPageEventAnnouncementsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": {
            "$ref": "#/components/schemas/PageEventAnnouncementsResponse"
          }
        }
      },
      "AnnouncementsNotifications": {
        "type": "object",
        "properties": {
          "announcementId": { "type": "integer", "format": "int64" },
          "leagueId": { "type": "integer", "format": "int64" },
          "bracketId": { "type": "integer", "format": "int64" },
          "userId": { "type": "integer", "format": "int64" },
          "emailSent": { "type": "boolean" },
          "pushSent": { "type": "boolean" },
          "smsSent": { "type": "boolean" }
        },
        "required": [
          "announcementId",
          "emailSent",
          "leagueId",
          "pushSent",
          "smsSent",
          "userId"
        ]
      },
      "ClubSearch": {
        "type": "object",
        "properties": {
          "query": { "type": "string", "example": "Stillwater Pickleball" },
          "own": { "type": "boolean", "example": true },
          "offset": { "type": "integer", "format": "int32", "example": 0 },
          "limit": { "type": "integer", "format": "int32", "example": 10 },
          "location": {
            "$ref": "#/components/schemas/ExternalFilterLocation",
            "description": "Latitude and longitude of a place with radius to filter by approximate area"
          }
        },
        "required": ["limit", "offset", "own", "query"]
      },
      "ExternalFilterLocation": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "format": "double",
            "description": "Earth's latitude value",
            "example": 72.34654645455,
            "maximum": 90,
            "minimum": -90
          },
          "lng": {
            "type": "number",
            "format": "double",
            "description": "Earth's longitude value",
            "example": 19.55151584984,
            "maximum": 180,
            "minimum": -180
          },
          "address": {
            "type": "string",
            "description": "Street level address in format county / city, state / region, country",
            "example": "Austin, TX, USA"
          },
          "radiusInMeters": {
            "type": "number",
            "format": "double",
            "description": "Radius distance in meters from the point of provided latitude and longitude, default is 40233.6 meters (25 miles)",
            "example": 40233.6
          }
        },
        "required": ["address", "lat", "lng", "radiusInMeters"]
      },
      "AccountStatusResponse": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "integer",
            "format": "int64",
            "example": 6549864065
          },
          "detailsSubmitted": { "type": "boolean", "example": false },
          "pendingRequirement": { "type": "boolean", "example": false },
          "errors": {
            "type": "array",
            "example": [
              {
                "code": "invalid_street_address",
                "reason": "The provided street address cannot be found. Please verify the street name and number are correct in \"111 Boulevard Street\"",
                "requirement": "individual.address.line1"
              }
            ],
            "items": { "type": "object" }
          }
        },
        "required": ["detailsSubmitted", "errors", "pendingRequirement"]
      },
      "ClubResponse": {
        "type": "object",
        "properties": {
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 1231231
          },
          "clubName": { "type": "string", "example": "Stillwater Pickleball" },
          "clubType": {
            "$ref": "#/components/schemas/ClubTypeResponse",
            "example": 2
          },
          "mediaUrl": { "type": "string", "example": 4684651981 },
          "address": {
            "$ref": "#/components/schemas/AddressResponse",
            "example": 5156151658
          },
          "shortAddress": {
            "type": "string",
            "example": "Miami-Dade County, FL, US"
          },
          "clubMemberCount": {
            "type": "integer",
            "format": "int64",
            "example": 12
          },
          "manifest": { "$ref": "#/components/schemas/ContentResponse" },
          "shortDescription": {
            "$ref": "#/components/schemas/ContentResponse"
          },
          "longDescription": { "$ref": "#/components/schemas/ContentResponse" },
          "attributes": { "$ref": "#/components/schemas/JsonNode" },
          "role": { "$ref": "#/components/schemas/ClubRoleResponse" },
          "isPaymentSetup": { "type": "boolean" },
          "accountStatus": {
            "$ref": "#/components/schemas/AccountStatusResponse"
          },
          "modelType": { "type": "string", "enum": ["ABSOLUTE", "RELATIVE"] },
          "modelValue": { "type": "number", "format": "double" },
          "currencyDetails": {
            "$ref": "#/components/schemas/CurrencyDetailsResponse"
          },
          "created": { "type": "string", "format": "date-time" },
          "requestedBy": { "type": "integer", "format": "int64" },
          "clubJoinType": {
            "type": "string",
            "enum": [
              "INVITATION",
              "REQUEST",
              "INVITATION_CSV",
              "PARTNER_INVITE"
            ]
          },
          "pendingRequestList": {
            "type": "array",
            "example": [1231231, 1231232, 1231233],
            "items": { "type": "integer", "format": "int64" }
          },
          "distanceInMiles": {
            "type": "number",
            "format": "double",
            "example": 254
          }
        },
        "required": [
          "clubId",
          "clubMemberCount",
          "clubName",
          "clubType",
          "distanceInMiles"
        ]
      },
      "ClubRoleResponse": {
        "type": "object",
        "properties": {
          "roleId": { "type": "integer", "format": "int64" },
          "role": { "type": "string" }
        },
        "required": ["role", "roleId"]
      },
      "ClubTypeResponse": {
        "type": "object",
        "properties": {
          "clubTypeId": {
            "type": "integer",
            "format": "int64",
            "example": 1231231
          },
          "clubType": { "type": "string", "example": "<h1>header</h1>" }
        },
        "required": ["clubType", "clubTypeId"]
      },
      "JsonNode": { "type": "object" },
      "PageClubResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/ClubResponse" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "SingleWrapperPageClubResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PageClubResponse" }
        }
      },
      "ClubMembersAgeFilter": {
        "type": "object",
        "properties": {
          "minAge": { "type": "number", "example": 18 },
          "maxAge": { "type": "number", "example": 25 }
        },
        "required": ["maxAge", "minAge"]
      },
      "ClubMembersRatingFilter": {
        "type": "object",
        "properties": {
          "singles": { "$ref": "#/components/schemas/ClubMembersRatingRange" },
          "doubles": { "$ref": "#/components/schemas/ClubMembersRatingRange" },
          "category": {
            "type": "string",
            "enum": ["DUPR", "PROVISIONAL"],
            "example": "DUPR/PROVISIONAL"
          }
        }
      },
      "ClubMembersRatingRange": {
        "type": "object",
        "properties": {
          "minRating": {
            "type": "number",
            "example": 2.3,
            "maximum": 8.0,
            "minimum": 2.0
          },
          "maxRating": {
            "type": "number",
            "example": 3.3,
            "maximum": 8.0,
            "minimum": 2.0
          }
        },
        "required": ["maxRating", "minRating"]
      },
      "ClubMembersSearchFilter": {
        "type": "object",
        "properties": {
          "gender": {
            "type": "string",
            "enum": ["MALE", "FEMALE"],
            "example": "MALE"
          },
          "age": { "$ref": "#/components/schemas/ClubMembersAgeFilter" },
          "rating": { "$ref": "#/components/schemas/ClubMembersRatingFilter" },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "ACTIVE"
          },
          "lat": {
            "type": "number",
            "format": "double",
            "example": 72.34654645455
          },
          "lng": {
            "type": "number",
            "format": "double",
            "example": 19.55151584984
          },
          "radiusInMeters": {
            "type": "number",
            "format": "double",
            "example": 16093.4
          },
          "clubInvitationType": {
            "type": "array",
            "example": "['INVITATION','REQUEST']",
            "items": {
              "type": "string",
              "enum": [
                "INVITATION",
                "REQUEST",
                "INVITATION_CSV",
                "PARTNER_INVITE"
              ]
            }
          }
        }
      },
      "ClubMembersSearchRequest": {
        "type": "object",
        "properties": {
          "offset": { "type": "integer", "format": "int32" },
          "limit": { "type": "integer", "format": "int32", "maximum": 25 },
          "query": { "type": "string", "minLength": 1 },
          "exclude": {
            "type": "array",
            "example": "['7828935307']",
            "items": { "type": "integer", "format": "int64" }
          },
          "filter": { "$ref": "#/components/schemas/ClubMembersSearchFilter" },
          "sort": { "$ref": "#/components/schemas/ClubMembersSearchSort" },
          "includeStaff": { "type": "boolean" },
          "includePendingPlayers": { "type": "boolean" }
        },
        "required": ["limit", "offset"]
      },
      "ClubMembersSearchSort": {
        "type": "object",
        "properties": {
          "parameter": {
            "type": "string",
            "enum": [
              "fullNameSort",
              "doubles",
              "doublesVerified",
              "singles",
              "singlesVerified",
              "created"
            ],
            "example": "fullNameSort/doubles/doublesVerified/singles/singlesVerified/created"
          },
          "order": {
            "type": "string",
            "enum": ["asc", "desc"],
            "example": "ASC/DESC"
          }
        },
        "required": ["order", "parameter"]
      },
      "ClubMemberRankingResponse": {
        "type": "object",
        "properties": {
          "myRanking": { "$ref": "#/components/schemas/MemberRanking" },
          "memberRanking": { "$ref": "#/components/schemas/PageMemberRanking" }
        },
        "required": ["memberRanking"]
      },
      "MemberRanking": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "fullName": { "type": "string" },
          "imageUrl": { "type": "string" },
          "rating": { "type": "string" },
          "ranking": { "type": "integer", "format": "int32" },
          "reliability": { "type": "integer", "format": "int32" }
        },
        "required": ["fullName", "id", "ranking", "reliability"]
      },
      "PageMemberRanking": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/MemberRanking" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "SingleWrapperClubMemberRankingResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/ClubMemberRankingResponse" }
        }
      },
      "IdsListRequest": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "example": [1231231, 9999999],
            "items": { "type": "integer", "format": "int64" }
          }
        },
        "required": ["ids"]
      },
      "StatusRequest": {
        "type": "object",
        "properties": { "status": { "type": "string", "example": "APPROVED" } },
        "required": ["status"]
      },
      "UserRequest": {
        "type": "object",
        "properties": {
          "userId": { "type": "integer", "format": "int64", "example": 1231231 }
        },
        "required": ["userId"]
      },
      "SingleWrapperRoleResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/RoleResponse" }
        }
      },
      "AssignRoleRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 1231231
          },
          "roleId": { "type": "integer", "format": "int64", "example": 2131312 }
        },
        "required": ["roleId", "userId"]
      },
      "ClubMemberResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "fullName": { "type": "string" },
          "username": { "type": "string" },
          "displayUsername": { "type": "boolean" },
          "email": { "type": "string" },
          "verifiedEmail": { "type": "boolean" },
          "isoAlpha2Code": { "type": "string" },
          "phone": { "type": "string" },
          "verifiedPhone": { "type": "boolean" },
          "shortAddress": { "type": "string" },
          "formattedAddress": { "type": "string" },
          "latitude": { "type": "number", "format": "double" },
          "longitude": { "type": "number", "format": "double" },
          "gender": { "type": "string", "enum": ["MALE", "FEMALE"] },
          "birthdate": { "type": "string", "format": "date" },
          "age": { "type": "integer", "format": "int32" },
          "hand": {
            "type": "string",
            "enum": ["RIGHT", "LEFT", "BOTH", "NONE"]
          },
          "imageUrl": { "type": "string" },
          "singles": { "type": "string" },
          "singlesVerified": { "type": "string" },
          "singlesProvisional": { "type": "boolean" },
          "doubles": { "type": "string" },
          "doublesVerified": { "type": "string" },
          "doublesProvisional": { "type": "boolean" },
          "defaultRating": { "type": "string", "enum": ["SINGLES", "DOUBLES"] },
          "distance": { "type": "string" },
          "distanceInMiles": { "type": "number", "format": "double" },
          "enablePrivacy": { "type": "boolean" },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "created": { "type": "string", "format": "date-time" },
          "clubId": { "type": "integer", "format": "int64" },
          "roles": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ClubRole" }
          },
          "requestedBy": { "type": "integer", "format": "int64" },
          "invitationType": {
            "type": "string",
            "enum": [
              "INVITATION",
              "REQUEST",
              "INVITATION_CSV",
              "PARTNER_INVITE"
            ]
          },
          "duprId": { "type": "string" },
          "isChecked": { "type": "boolean" },
          "provisionalSinglesRating": { "type": "number", "format": "float" },
          "provisionalDoublesRating": { "type": "number", "format": "float" },
          "singlesReliability": { "type": "number", "format": "float" },
          "doublesReliability": { "type": "number", "format": "float" },
          "location": { "type": "string" },
          "checked": { "type": "boolean", "writeOnly": true }
        },
        "required": ["clubId", "enablePrivacy", "fullName", "id", "roles"]
      },
      "ClubRole": {
        "type": "object",
        "properties": {
          "roleId": { "type": "integer", "format": "int64" },
          "role": {
            "type": "string",
            "enum": ["PLAYER", "DIRECTOR", "ORGANIZER", "PENDING_PLAYER"]
          },
          "approvalStatus": {
            "type": "string",
            "enum": ["PENDING", "IN_REVIEW", "APPROVED", "REJECTED"]
          },
          "clubId": { "type": "integer", "format": "int64" },
          "created": { "type": "string", "format": "date-time" },
          "requestBy": { "type": "integer", "format": "int64" },
          "joinType": {
            "type": "string",
            "enum": [
              "INVITATION",
              "REQUEST",
              "INVITATION_CSV",
              "PARTNER_INVITE"
            ]
          }
        },
        "required": ["approvalStatus", "clubId", "role", "roleId"]
      },
      "PageClubMemberResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/ClubMemberResponse" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "SingleWrapperPageClubMemberResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PageClubMemberResponse" }
        }
      },
      "DeleteMatchRequest": {
        "type": "object",
        "properties": {
          "matchId": { "type": "string", "example": "ABSDIHUASHD" },
          "matchIdType": {
            "type": "string",
            "enum": ["MATCH_CODE", "OBFUSCATED_MATCH_ID", "MATCH_ID"],
            "example": "MATCH_CODE/OBFUSCATED_MATCH_ID/MATCH_ID"
          },
          "requestedByDuprId": { "type": "string", "example": "AX7AW" },
          "reason": { "type": "string", "example": "Requested by director" },
          "notify": { "type": "boolean", "example": "The notification flag" }
        },
        "required": [
          "matchId",
          "matchIdType",
          "notify",
          "reason",
          "requestedByDuprId"
        ]
      },
      "ClubMatchFilters": {
        "type": "object",
        "properties": {
          "eventFormat": {
            "type": "array",
            "example": "['SINGLES','DOUBLES']",
            "items": { "type": "string", "enum": ["SINGLES", "DOUBLES"] }
          },
          "eventDate": {
            "$ref": "#/components/schemas/DateRange",
            "example": "YYYY-MM-DD"
          },
          "eventName": { "type": "string", "example": "Pickle ball" },
          "playerId": {
            "type": "integer",
            "format": "int64",
            "example": "0215254148"
          }
        }
      },
      "ClubMatchHistoryRequest": {
        "type": "object",
        "properties": {
          "offset": { "type": "integer", "format": "int32", "example": 0 },
          "limit": { "type": "integer", "format": "int32", "example": 10 },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 5156151658
          },
          "filters": { "$ref": "#/components/schemas/ClubMatchFilters" },
          "sort": { "$ref": "#/components/schemas/ClubMatchSort" }
        },
        "required": ["clubId", "limit", "offset"]
      },
      "ClubMatchSort": {
        "type": "object",
        "properties": {
          "parameter": {
            "type": "string",
            "enum": ["MATCH_DATE"],
            "example": "MATCH_DATE"
          },
          "order": {
            "type": "string",
            "enum": ["asc", "desc"],
            "example": "ASC/DESC"
          }
        },
        "required": ["order"]
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "users": {
            "type": "object",
            "additionalProperties": { "type": "object" },
            "example": "{ '26518181881': {'id':'26518181881','name':'Brian Lara','property_name':'value'}}"
          }
        },
        "required": ["users"]
      },
      "BracketSearchTeamsRequest": {
        "type": "object",
        "properties": {
          "offset": { "type": "integer", "format": "int32", "example": 0 },
          "limit": { "type": "integer", "format": "int32", "example": 10 },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 7828935307
          },
          "sort": { "$ref": "#/components/schemas/BracketTeamSort" },
          "onlyWaitListed": { "type": "boolean", "example": false },
          "onlyNonWaitListed": { "type": "boolean", "example": false }
        },
        "required": [
          "bracketId",
          "limit",
          "offset",
          "onlyNonWaitListed",
          "onlyWaitListed"
        ]
      },
      "BracketTeamSort": {
        "type": "object",
        "properties": {
          "parameter": {
            "type": "string",
            "enum": ["RATINGS"],
            "example": "RATINGS"
          },
          "order": {
            "type": "string",
            "enum": ["asc", "desc"],
            "example": "ASC/DESC"
          }
        },
        "required": ["order", "parameter"]
      },
      "LeagueTeamsResponse": {
        "type": "object",
        "properties": {
          "registrationId": { "type": "integer", "format": "int64" },
          "player1": { "$ref": "#/components/schemas/PlayerResponse" },
          "player2": { "$ref": "#/components/schemas/PlayerResponse" },
          "teamStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "partnerStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          }
        },
        "required": ["player1", "registrationId"]
      },
      "PageLeagueTeamsResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/LeagueTeamsResponse" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "SingleWrapperPageLeagueTeamsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PageLeagueTeamsResponse" }
        }
      },
      "LeagueTeams": {
        "type": "object",
        "properties": {
          "registrationId": { "type": "integer", "format": "int64" },
          "player1": { "$ref": "#/components/schemas/Player" },
          "player2": { "$ref": "#/components/schemas/Player" },
          "teamStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "partnerStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          }
        },
        "required": ["registrationId"]
      },
      "MatchRound": {
        "type": "object",
        "properties": {
          "serial": { "type": "integer", "format": "int32", "example": 1 },
          "matches": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/SeedMatch" }
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "yyyy-MM-dd"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "yyyy-MM-dd"
          },
          "teamIds": {
            "type": "array",
            "example": "['9989596696']",
            "items": { "type": "integer", "format": "int64" }
          }
        },
        "required": ["matches", "serial", "startDate"]
      },
      "SeedMatch": {
        "type": "object",
        "properties": {
          "serial": { "type": "integer", "format": "int32", "example": 1 },
          "team1": { "$ref": "#/components/schemas/LeagueTeams" },
          "team2": { "$ref": "#/components/schemas/LeagueTeams" },
          "bye": { "type": "boolean", "example": true },
          "matchSerial": { "type": "integer", "format": "int32", "example": 1 }
        },
        "required": ["bye", "matchSerial", "serial"]
      },
      "WithdrawPlayerRequest": {
        "type": "object",
        "properties": {
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "playerId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "registrationId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          }
        },
        "required": ["bracketId", "clubId", "playerId", "registrationId"]
      },
      "EditPartnerRequest": {
        "type": "object",
        "properties": {
          "registrationId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "partnerId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "partnerStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "NOT_CONFIRMED/INVITED/CONFIRMED/INACTIVE"
          }
        },
        "required": [
          "bracketId",
          "partnerId",
          "partnerStatus",
          "registrationId"
        ]
      },
      "BracketUnmatchedPlayerSort": {
        "type": "object",
        "properties": {
          "parameter": {
            "type": "string",
            "enum": ["RATINGS"],
            "example": "RATINGS"
          },
          "order": {
            "type": "string",
            "enum": ["asc", "desc"],
            "example": "ASC/DESC"
          }
        },
        "required": ["order", "parameter"]
      },
      "SearchUnmatchedPlayersRequest": {
        "type": "object",
        "properties": {
          "offset": { "type": "integer", "format": "int32", "example": 0 },
          "limit": { "type": "integer", "format": "int32", "example": 10 },
          "query": { "type": "string", "example": "*" },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 7828935307
          },
          "sort": { "$ref": "#/components/schemas/BracketUnmatchedPlayerSort" }
        },
        "required": ["bracketId", "limit", "offset"]
      },
      "LeagueMatchRequest": {
        "type": "object",
        "properties": {
          "venue": { "type": "string", "example": "Dreamland Pickleball" },
          "location": { "type": "string", "example": "Newport Beach, CA" },
          "tournament": {
            "type": "string",
            "example": "Newport Beach Doubles Shootout"
          },
          "eventName": { "type": "string", "example": "Beach Doubles Event" },
          "league": { "type": "string", "example": "Example League" },
          "matchDate": {
            "type": "string",
            "format": "date",
            "example": "yyyy-MM-dd"
          },
          "team1": { "$ref": "#/components/schemas/Team" },
          "team2": { "$ref": "#/components/schemas/Team" },
          "scoreFormatId": {
            "type": "integer",
            "format": "int64",
            "example": 56168168161
          },
          "format": {
            "type": "string",
            "enum": ["SINGLES", "DOUBLES"],
            "example": "SINGLES"
          },
          "leagueMatchId": {
            "type": "integer",
            "format": "int64",
            "example": 56168168161
          },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 56168168161
          },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 56168168161
          },
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 56168168161
          }
        },
        "required": [
          "bracketId",
          "clubId",
          "format",
          "leagueId",
          "leagueMatchId",
          "matchDate",
          "team1",
          "team2"
        ]
      },
      "BracketMatchRequest": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "array",
            "example": "['EAST','WEST']",
            "items": {
              "type": "string",
              "enum": [
                "EAST",
                "WEST",
                "NORTH",
                "SOUTH",
                "NORTH_EAST",
                "SOUTH_WEST",
                "NORTH_WEST",
                "SOUTH_EAST"
              ]
            }
          }
        },
        "required": ["tags"]
      },
      "LeagueMatchResponse": {
        "type": "object",
        "properties": {
          "leagueMatchId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "matchId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "registrationId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "leagueName": { "type": "string", "example": "Dreamland Pickleball" },
          "bracketName": {
            "type": "string",
            "example": "Dreamland Pickleball bracket"
          },
          "eventFormat": {
            "type": "string",
            "enum": ["SINGLES", "DOUBLES"],
            "example": "SINGLES"
          },
          "scoreFormat": { "$ref": "#/components/schemas/ScoreFormatResponse" },
          "matchDate": {
            "type": "string",
            "format": "date",
            "example": "yyyy-MM-dd"
          },
          "confirmed": { "type": "boolean" },
          "teams": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TeamResponse" }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "matchScoreAdded": { "type": "boolean", "example": true },
          "leagueMatchStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "round": { "type": "integer", "format": "int32", "example": "1/2/3" },
          "startDate": { "type": "string", "example": "'yyyy-mm-dd" },
          "endDate": { "type": "string", "example": "yyyy-mm-dd" },
          "venue": { "type": "string", "example": "Dreamland Pickleball" },
          "location": { "type": "string", "example": "Newport Beach, CA" },
          "isForfeited": { "type": "boolean" },
          "tag": {
            "type": "string",
            "enum": [
              "EAST",
              "WEST",
              "NORTH",
              "SOUTH",
              "NORTH_EAST",
              "SOUTH_WEST",
              "NORTH_WEST",
              "SOUTH_EAST"
            ]
          },
          "inQueue": { "type": "boolean" },
          "noOfGames": { "type": "integer", "format": "int32", "example": 3 },
          "tbd_1": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "tbd_2": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "matchSlot": { "type": "integer", "format": "int32", "example": 1 },
          "isByeMatch": { "type": "boolean", "example": 1 },
          "is_team_1_tbd": { "type": "boolean", "example": true },
          "is_team_2_tbd": { "type": "boolean", "example": true },
          "displayIdentity": { "type": "string", "example": "IS20MDL2" },
          "isNextRoundConfirmed": { "type": "boolean" },
          "impactedDraw": { "type": "boolean" },
          "forfeited": { "type": "boolean", "writeOnly": true },
          "byeMatch": { "type": "boolean", "writeOnly": true },
          "nextRoundConfirmed": { "type": "boolean", "writeOnly": true }
        },
        "required": [
          "bracketId",
          "bracketName",
          "confirmed",
          "displayIdentity",
          "endDate",
          "eventFormat",
          "impactedDraw",
          "inQueue",
          "isByeMatch",
          "isForfeited",
          "isNextRoundConfirmed",
          "leagueId",
          "leagueMatchId",
          "leagueName",
          "location",
          "matchDate",
          "matchScoreAdded",
          "matchSlot",
          "noOfGames",
          "registrationId",
          "scoreFormat",
          "startDate",
          "tbd_1",
          "tbd_2",
          "teams",
          "venue"
        ]
      },
      "PageLeagueMatchResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/LeagueMatchResponse" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "SingleWrapperPageLeagueMatchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PageLeagueMatchResponse" }
        }
      },
      "EditMatchRequest": {
        "type": "object",
        "properties": {
          "matchDate": { "type": "string", "format": "date" },
          "team1Score": { "$ref": "#/components/schemas/EditScoreRequest" },
          "team2Score": { "$ref": "#/components/schemas/EditScoreRequest" },
          "matchId": {
            "type": "integer",
            "format": "int64",
            "example": 56168168161
          },
          "leagueMatchId": {
            "type": "integer",
            "format": "int64",
            "example": 56168168161
          },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 56168168161
          },
          "isForfeited": { "type": "boolean" }
        },
        "required": ["matchDate", "matchId", "team1Score", "team2Score"]
      },
      "EditScoreRequest": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "format": "int64",
            "example": 56168168161
          },
          "game1": { "type": "integer", "format": "int32", "example": 7 },
          "game2": { "type": "integer", "format": "int32", "example": 11 },
          "game3": { "type": "integer", "format": "int32", "example": 0 },
          "game4": { "type": "integer", "format": "int32", "example": 0 },
          "game5": { "type": "integer", "format": "int32", "example": 0 },
          "winner": { "type": "boolean" }
        },
        "required": ["game1", "teamId", "winner"]
      },
      "LeagueMatchConfirmRequest": {
        "type": "object",
        "properties": {
          "matchId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 297323232
          },
          "leagueMatchId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          }
        },
        "required": ["matchId", "userId"]
      },
      "UserMatchesRequest": {
        "type": "object",
        "properties": {
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 56168168161
          },
          "leagueMatchId": {
            "type": "integer",
            "format": "int64",
            "example": 56168168161
          },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 56168168161
          },
          "limit": { "type": "integer", "format": "int32", "example": 10 },
          "offset": { "type": "integer", "format": "int32", "example": 0 }
        },
        "required": ["bracketId", "clubId", "leagueMatchId", "limit", "offset"]
      },
      "BracketRefundRequest": {
        "type": "object",
        "properties": {
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "bracketName": { "type": "string", "example": 45785789 },
          "registrationId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "processRefund": { "type": "boolean", "example": 45785789 },
          "withdrawPlayer": { "type": "boolean", "example": 45785789 },
          "refundAmount": {
            "type": "number",
            "format": "double",
            "example": 45785789
          }
        },
        "required": [
          "bracketId",
          "bracketName",
          "processRefund",
          "refundAmount",
          "registrationId",
          "withdrawPlayer"
        ]
      },
      "EventRefundRequest": {
        "type": "object",
        "properties": {
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "eventId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "eventName": { "type": "string", "example": 45785789 },
          "processRefund": { "type": "boolean", "example": 45785789 },
          "refundAmount": {
            "type": "number",
            "format": "double",
            "example": 45785789
          },
          "playerId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "brackets": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BracketRefundRequest" }
          }
        },
        "required": [
          "brackets",
          "clubId",
          "eventId",
          "eventName",
          "playerId",
          "processRefund",
          "refundAmount"
        ]
      },
      "CreateNewTeamRequest": {
        "type": "object",
        "properties": {
          "player1": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "player2": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          }
        },
        "required": ["bracketId", "clubId", "player1", "player2"]
      },
      "EditEventTeamRequest": {
        "type": "object",
        "properties": {
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "registrationId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "player1": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "player2": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "isPlayer1ClubMember": { "type": "boolean", "example": 45785789 },
          "isPlayer2ClubMember": { "type": "boolean", "example": 45785789 }
        },
        "required": [
          "bracketId",
          "clubId",
          "isPlayer1ClubMember",
          "isPlayer2ClubMember",
          "player1",
          "player2",
          "registrationId"
        ]
      },
      "EditWaitListRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "registrationId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "isWaitListed": { "type": "boolean", "example": 45785789 }
        },
        "required": ["bracketId", "clubId", "isWaitListed", "userId"]
      },
      "RegisterToBracketRequest": {
        "type": "object",
        "properties": {
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "users": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/RegisterUserRequest" }
          }
        },
        "required": ["bracketId", "clubId", "users"]
      },
      "RegisterUserRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "isClubMember": { "type": "boolean" }
        },
        "required": ["isClubMember", "userId"]
      },
      "ConfirmTeamRequest": {
        "type": "object",
        "properties": {
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "registrationId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          }
        },
        "required": ["bracketId", "registrationId"]
      },
      "BracketPlayerSwitchWaitListedRequest": {
        "type": "object",
        "properties": {
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 23231322
          },
          "teamSource": {
            "$ref": "#/components/schemas/Team",
            "example": "gg.dupr.core.model.api.Team"
          },
          "teamTarget": {
            "$ref": "#/components/schemas/Team",
            "example": "gg.dupr.core.model.api.Team"
          }
        },
        "required": ["bracketId", "clubId", "teamSource", "teamTarget"]
      },
      "SwitchTeamRequest": {
        "type": "object",
        "properties": {
          "registrationId": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "player1": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "player2": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "sourceBracketId": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "targetBracketId": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "sourceBracketName": { "type": "string", "example": "bracket 1" },
          "targetBracketName": { "type": "string", "example": "bracket 2" },
          "eventName": { "type": "string", "example": "Event Name" },
          "eventId": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "reSeedBracket": { "type": "boolean" }
        },
        "required": [
          "clubId",
          "eventId",
          "eventName",
          "player1",
          "player2",
          "reSeedBracket",
          "registrationId",
          "sourceBracketId",
          "sourceBracketName",
          "targetBracketId",
          "targetBracketName"
        ]
      },
      "ArrayWrapperSwitchBracketResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/SwitchBracketResponse" }
          }
        }
      },
      "SwitchBracketResponse": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": "['26518181881']"
          },
          "isSuccess": { "type": "boolean", "example": "['26518181881']" },
          "failedReason": { "type": "string", "example": "['26518181881']" },
          "registrationId": {
            "type": "integer",
            "format": "int64",
            "example": "['26518181881']"
          },
          "isSourceReSeeded": { "type": "boolean" },
          "isTargetReSeeded": { "type": "boolean" },
          "sourceReSeeded": { "type": "boolean", "writeOnly": true },
          "targetReSeeded": { "type": "boolean", "writeOnly": true }
        },
        "required": ["isSourceReSeeded", "isSuccess", "isTargetReSeeded"]
      },
      "SwitchBracketRequest": {
        "type": "object",
        "properties": {
          "playerId": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "sourceBracketId": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "targetBracketId": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "sourceBracketName": { "type": "string", "example": "bracket 1" },
          "targetBracketName": { "type": "string", "example": "bracket 2" },
          "eventName": { "type": "string", "example": "Event name" },
          "eventId": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "reSeedBracket": { "type": "boolean" }
        },
        "required": [
          "clubId",
          "eventId",
          "eventName",
          "playerId",
          "reSeedBracket",
          "sourceBracketId",
          "sourceBracketName",
          "targetBracketId",
          "targetBracketName"
        ]
      },
      "SubstitutePlayerRequest": {
        "type": "object",
        "properties": {
          "leagueMatchId": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "playerId": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "subPlayerId": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "isClubMember": { "type": "boolean" }
        },
        "required": [
          "bracketId",
          "isClubMember",
          "leagueMatchId",
          "playerId",
          "subPlayerId"
        ]
      },
      "ForfeitMatchRequest": {
        "type": "object",
        "properties": {
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 56168168161
          },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 56168168161
          },
          "leagueMatchId": {
            "type": "integer",
            "format": "int64",
            "example": 56168168161
          },
          "matchId": {
            "type": "integer",
            "format": "int64",
            "example": 56168168161
          },
          "team1": { "$ref": "#/components/schemas/ForfeitTeamRequest" },
          "team2": { "$ref": "#/components/schemas/ForfeitTeamRequest" }
        },
        "required": [
          "bracketId",
          "clubId",
          "leagueMatchId",
          "matchId",
          "team1",
          "team2"
        ]
      },
      "ForfeitTeamRequest": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "format": "int64",
            "example": 56168168161
          },
          "player1": {
            "type": "integer",
            "format": "int64",
            "example": 4564651818
          },
          "player2": {
            "type": "integer",
            "format": "int64",
            "example": 9884984848
          },
          "isForfeited": { "type": "boolean" }
        },
        "required": ["isForfeited", "player1", "teamId"]
      },
      "UserClubRoleRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          }
        },
        "required": ["bracketId", "userId"]
      },
      "BracketClubRoleResponse": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "RoleName": {
            "type": "string",
            "enum": ["PLAYER", "DIRECTOR", "ORGANIZER", "PENDING_PLAYER"],
            "writeOnly": true
          },
          "isClubMember": { "type": "boolean" },
          "roleName": {
            "type": "string",
            "enum": ["PLAYER", "DIRECTOR", "ORGANIZER", "PENDING_PLAYER"]
          }
        },
        "required": ["RoleName", "isClubMember", "roleId"]
      },
      "SingleWrapperBracketClubRoleResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/BracketClubRoleResponse" }
        }
      },
      "PlayerSignUpRequest": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "example": "John Doe",
            "minLength": 1
          },
          "firstName": { "type": "string", "example": "John" },
          "lastName": { "type": "string", "example": "Doe" },
          "email": {
            "type": "string",
            "example": "user@example.com",
            "minLength": 1
          },
          "isoCode": { "type": "string", "example": "US" },
          "phone": { "type": "string", "example": "+19876543210" },
          "password": {
            "type": "string",
            "example": "mySecretPassword",
            "minLength": 1
          },
          "ambassadorCode": { "type": "string", "example": "DUPR100" },
          "mediaId": {
            "type": "integer",
            "format": "int64",
            "example": 4086274008
          },
          "gender": {
            "type": "string",
            "enum": ["MALE", "FEMALE"],
            "example": "MALE/FEMALE"
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "example": "yyyy-MM-dd"
          },
          "addressId": {
            "type": "integer",
            "format": "int64",
            "example": 10684651007
          },
          "hand": {
            "type": "string",
            "enum": ["RIGHT", "LEFT", "BOTH", "NONE"],
            "example": "LEFT/RIGHT"
          },
          "singlesRating": {
            "type": "number",
            "example": 4.125,
            "maximum": 8.0,
            "minimum": 0.1
          },
          "doublesRating": {
            "type": "number",
            "example": 2.356,
            "maximum": 8.0,
            "minimum": 0.1
          },
          "defaultRating": {
            "type": "string",
            "enum": ["SINGLES", "DOUBLES"],
            "example": "SINGLES/DOUBLES"
          },
          "enableNewsletter": { "type": "boolean", "example": true },
          "username": { "type": "string", "example": "jhonny" },
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 6787890
          },
          "clientKey": {
            "type": "string",
            "example": "Y2stYQIDJodujiIhjndf=="
          },
          "identifier": {
            "type": "string",
            "description": "An unique identifier of this user from your platform",
            "example": "unique-identifier"
          },
          "marketingOptIn": { "type": "boolean", "example": true },
          "termsOfService": { "type": "boolean", "example": true }
        },
        "required": [
          "addressId",
          "birthdate",
          "email",
          "enableNewsletter",
          "firstName",
          "fullName",
          "gender",
          "hand",
          "lastName",
          "password"
        ]
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJSUzUxMiJ9."
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJSUzUxMiJ9."
          },
          "user": { "$ref": "#/components/schemas/UserResponse" }
        },
        "required": ["accessToken", "refreshToken", "user"]
      },
      "SingleWrapperAuthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/AuthResponse" }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "example": "mySecretPassword",
            "minLength": 1
          }
        },
        "required": ["email", "password"]
      },
      "TopicRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "functions": { "type": "string" }
        },
        "required": ["functions", "name"]
      },
      "SingleWrapperTopicResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/TopicResponse" }
        }
      },
      "TopicResponse": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" }
        },
        "required": ["name"]
      },
      "UserStatusUpdateRequest": {
        "type": "object",
        "properties": {
          "userId": { "type": "integer", "format": "int64" },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "notes": { "type": "string" }
        },
        "required": ["status", "userId"]
      },
      "UserSearchRequest": {
        "type": "object",
        "properties": {
          "offset": { "type": "integer", "format": "int32" },
          "limit": { "type": "integer", "format": "int32", "maximum": 25 },
          "query": { "type": "string", "minLength": 1 },
          "searchField": {
            "type": "string",
            "enum": ["FULLNAME", "EMAIL", "DUPR_ID", "PHONE"]
          }
        },
        "required": ["limit", "offset"]
      },
      "PageUserLookupResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/UserLookupResponse" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "SingleWrapperPageUserLookupResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PageUserLookupResponse" }
        }
      },
      "UserLookupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 26518181881
          },
          "referralCode": { "type": "string", "example": "ACASC" },
          "fullName": { "type": "string", "example": "John Die" },
          "email": { "type": "string", "example": "john@qwe.com" },
          "phoneNumber": { "type": "string", "example": "+18938271" },
          "gender": {
            "type": "string",
            "enum": ["MALE", "FEMALE"],
            "example": "MALE"
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "example": "2021-01-13"
          },
          "isValidEmail": { "type": "boolean", "example": true },
          "isValidPhone": { "type": "boolean", "example": true },
          "imageUrl": {
            "type": "string",
            "example": "https://s3.aws.com/image.png"
          },
          "hand": {
            "type": "string",
            "enum": ["RIGHT", "LEFT", "BOTH", "NONE"],
            "example": "LEFT"
          },
          "role": { "$ref": "#/components/schemas/RoleResponse" },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ],
            "example": "ACTIVE"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "example": "2021-01-13 01:01:01"
          },
          "externalId": { "type": "string", "example": "C12345" },
          "registered": { "type": "boolean", "example": false },
          "restricted": { "type": "boolean", "example": false },
          "validEmail": { "type": "boolean", "writeOnly": true },
          "validPhone": { "type": "boolean", "writeOnly": true }
        },
        "required": ["email", "fullName"]
      },
      "UserRestrictRequest": {
        "type": "object",
        "properties": {
          "restricted": { "type": "boolean" },
          "notes": { "type": "string" }
        },
        "required": ["restricted"]
      },
      "ChangeRoleRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 3123123
          },
          "role": {
            "type": "string",
            "enum": ["PLAYER", "DIRECTOR", "ORGANIZER", "PENDING_PLAYER"],
            "example": "SUPPORT_EXECUTIVE"
          }
        },
        "required": ["role", "userId"]
      },
      "MergeUsersRequest": {
        "type": "object",
        "properties": {
          "source": { "type": "string", "example": 26518181881 },
          "sourceType": {
            "type": "string",
            "enum": ["DUPR_ID", "OBFUSCATED_USER_ID", "EMAIL"],
            "example": "DUPR_ID/USER_ID/OBFUSCATED_USER_ID/EMAIL"
          },
          "target": { "type": "string", "example": "A1C3Z" },
          "targetType": {
            "type": "string",
            "enum": ["DUPR_ID", "OBFUSCATED_USER_ID", "EMAIL"],
            "example": "DUPR_ID/USER_ID/OBFUSCATED_USER_ID/EMAIL"
          }
        },
        "required": ["source", "sourceType", "target", "targetType"]
      },
      "MergeUsersResponse": {
        "type": "object",
        "properties": {
          "source": { "type": "string", "example": 26518181881 },
          "target": { "type": "string", "example": "A1C3Z" }
        },
        "required": ["source", "target"]
      },
      "SingleWrapperMergeUsersResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/MergeUsersResponse" }
        }
      },
      "UserBracketAdminRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "email": { "type": "string", "example": "user@example.com" },
          "duprId": { "type": "string", "example": "user@example.com" },
          "offset": { "type": "integer", "format": "int32", "example": 0 },
          "limit": { "type": "integer", "format": "int32", "example": 10 }
        },
        "required": ["limit", "offset"]
      },
      "PageBracketResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/BracketResponse" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "SingleWrapperPageBracketResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PageBracketResponse" }
        }
      },
      "UpdateRegistrationRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 904958585
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "registrationStatus": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "bracketFeesPaid": { "type": "number", "example": 100 },
          "eventFeesPaid": { "type": "number", "example": 100 },
          "isRegistered": { "type": "boolean" }
        },
        "required": [
          "bracketId",
          "leagueId",
          "paymentStatus",
          "registrationStatus",
          "userId"
        ]
      },
      "MatchesReassignRequest": {
        "type": "object",
        "properties": {
          "matchCode": { "type": "string", "example": "GGL2ZZPYD" },
          "source": { "type": "string", "example": 4684651981 },
          "sourceMergeInputType": {
            "type": "string",
            "enum": ["DUPR_ID", "OBFUSCATED_USER_ID", "EMAIL"],
            "example": "DUPR_ID/OBFUSCATED_USER_ID/EMAIL"
          },
          "target": { "type": "string", "example": 4684651981 },
          "targetMergeInputType": {
            "type": "string",
            "enum": ["DUPR_ID", "OBFUSCATED_USER_ID", "EMAIL"],
            "example": "DUPR_ID/OBFUSCATED_USER_ID/EMAIL"
          },
          "notify": { "type": "boolean", "example": true }
        },
        "required": [
          "matchCode",
          "source",
          "sourceMergeInputType",
          "target",
          "targetMergeInputType"
        ]
      },
      "ArrayWrapperDuplicatedAccountResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DuplicatedAccountResponse"
            }
          }
        }
      },
      "DuplicatedAccountResponse": {
        "type": "object",
        "properties": {
          "player1": { "$ref": "#/components/schemas/DuplicatedPlayer" },
          "player2": { "$ref": "#/components/schemas/DuplicatedPlayer" },
          "probability": { "type": "string" }
        },
        "required": ["player1", "player2", "probability"]
      },
      "DuplicatedPlayer": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "fullName": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "gender": { "type": "string", "enum": ["MALE", "FEMALE"] },
          "hand": {
            "type": "string",
            "enum": ["RIGHT", "LEFT", "BOTH", "NONE"]
          },
          "duprId": { "type": "string" },
          "birthday": { "type": "string" },
          "verifiedEmail": { "type": "boolean" },
          "email": { "type": "string" },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          }
        },
        "required": ["id", "verifiedEmail"]
      },
      "GetClubSettingsRequest": {
        "type": "object",
        "properties": { "clubId": { "type": "integer", "format": "int64" } },
        "required": ["clubId"]
      },
      "GetClubRestrictionsRequest": {
        "type": "object",
        "properties": { "clubId": { "type": "integer", "format": "int64" } },
        "required": ["clubId"]
      },
      "CreateClientRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "John Doe Corporation" },
          "email": { "type": "string", "example": "john.doe@yopmail.com" },
          "permissions": {
            "type": "array",
            "description": "An optional list of permissions to assign to the client key",
            "items": { "$ref": "#/components/schemas/Permission" }
          }
        },
        "required": ["email", "name", "permissions"]
      },
      "Permission": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string",
            "enum": [
              "NONE",
              "SUPER",
              "VERIFIED_MATCH",
              "RATING",
              "CLUB",
              "CLUB_MEMBER_INFO",
              "CLUB_LOGO",
              "CLUB_CONTACT_INFO",
              "CLUB_DIRECTOR_CONTACT_INFO",
              "CLUB_ASSISTANT_DIRECTOR",
              "CLUB_ORGANIZER",
              "CLUB_MEMBERS",
              "CLUB_NAME",
              "CLUB_ORGANIZER_CONTACT_INFO",
              "CLUB_MATCH",
              "EVENT",
              "BRACKET",
              "USER_ACCOUNT",
              "USER_EMAIL",
              "USER_ROLE",
              "MATCH",
              "USER",
              "INFORMATIVE_BANNER"
            ]
          },
          "operations": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NONE",
                "ALL",
                "VIEW",
                "ADD",
                "MODIFY",
                "DELETE",
                "DOWNLOAD",
                "VERIFY",
                "MERGE",
                "REACTIVATE",
                "REASSIGN",
                "SEARCH",
                "DETAIL",
                "BULK_ADD",
                "REPLACE",
                "INVITE",
                "SUBSCRIPTION_DETAIL"
              ]
            }
          }
        },
        "required": ["operations", "resource"]
      },
      "CreateClientResponse": {
        "type": "object",
        "properties": {
          "clientId": { "type": "integer", "format": "int64" },
          "clientKey": { "type": "string" },
          "clientSecret": { "type": "string" }
        },
        "required": ["clientId"]
      },
      "SingleWrapperCreateClientResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/CreateClientResponse" }
        }
      },
      "UpdateClientPermissionsRequest": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int64",
            "example": 4486863678
          },
          "keyId": {
            "type": "integer",
            "format": "int64",
            "example": 4086274008
          },
          "permissions": {
            "type": "array",
            "description": "An optional list of permissions to assign to the client key",
            "items": { "$ref": "#/components/schemas/Permission" }
          }
        },
        "required": ["clientId", "keyId", "permissions"]
      },
      "SingleWrapperUpdateClientPermissionsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": {
            "$ref": "#/components/schemas/UpdateClientPermissionsResponse"
          }
        }
      },
      "UpdateClientPermissionsResponse": {
        "type": "object",
        "properties": {
          "clientId": { "type": "integer", "format": "int64" },
          "keyId": { "type": "integer", "format": "int64" }
        },
        "required": ["clientId", "keyId"]
      },
      "GetClientPermissionsRequest": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int64",
            "example": 4486863678
          }
        },
        "required": ["clientId"]
      },
      "AddClientKeyRequest": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "integer",
            "format": "int64",
            "example": 123456
          },
          "permissions": {
            "type": "array",
            "description": "An optional list of permissions to assign to the new client key",
            "items": { "$ref": "#/components/schemas/Permission" }
          }
        },
        "required": ["clientId", "permissions"]
      },
      "BatchGetClientsRequest": {
        "type": "object",
        "properties": {
          "offset": { "type": "integer", "format": "int32" },
          "limit": { "type": "integer", "format": "int32" }
        },
        "required": ["limit", "offset"]
      },
      "BulkCoppaEmailRequest": {
        "type": "object",
        "properties": {
          "returnEmail": { "type": "string", "example": "support@mydupr.com" },
          "duprIds": {
            "type": "array",
            "example": ["3OQKV2"],
            "items": { "type": "string" }
          }
        },
        "required": ["duprIds"]
      },
      "CalculateMatchesRange": {
        "type": "object",
        "properties": {
          "from": { "type": "integer", "format": "int64" },
          "to": { "type": "integer", "format": "int64" }
        },
        "required": ["from", "to"]
      },
      "SetDuprIdsInactiveRequest": {
        "type": "object",
        "properties": {
          "duprIds": { "type": "array", "items": { "type": "string" } }
        },
        "required": ["duprIds"]
      },
      "ResultString": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "results": { "type": "array", "items": { "type": "string" } },
          "errors": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Error" }
          }
        },
        "required": ["errors", "results", "status"]
      },
      "AdminGrantEntitlementByDuprIdRequest": {
        "type": "object",
        "properties": {
          "userIds": { "type": "array", "items": { "type": "string" } },
          "entitlements": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["FREE_L1", "PREMIUM_L1", "PREMIUM_L2"]
            }
          },
          "endDate": { "type": "integer", "format": "int64" }
        },
        "required": ["endDate", "entitlements", "userIds"]
      },
      "ResultUnit": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "errors": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Error" }
          }
        },
        "required": ["errors", "status"]
      },
      "RegisteredEventAdminRequest": {
        "type": "object",
        "properties": {
          "emails": {
            "type": "object",
            "additionalProperties": { "type": "string" }
          },
          "duprIds": {
            "type": "object",
            "additionalProperties": { "type": "string" }
          },
          "userIds": {
            "type": "object",
            "additionalProperties": { "type": "integer", "format": "int64" }
          }
        }
      },
      "EditClubStaffRequest": {
        "type": "object",
        "properties": {
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "operation": {
            "type": "string",
            "enum": [
              "NONE",
              "ALL",
              "VIEW",
              "ADD",
              "MODIFY",
              "DELETE",
              "DOWNLOAD",
              "VERIFY",
              "MERGE",
              "REACTIVATE",
              "REASSIGN",
              "SEARCH",
              "DETAIL",
              "BULK_ADD",
              "REPLACE",
              "INVITE",
              "SUBSCRIPTION_DETAIL"
            ],
            "example": 45785789
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "rolId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          },
          "deleteUserId": {
            "type": "integer",
            "format": "int64",
            "example": 45785789
          }
        },
        "required": ["clubId", "deleteUserId", "operation", "rolId", "userId"]
      },
      "Reaction": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "kind": { "type": "string" },
          "parent": { "type": "string" },
          "user_id": { "type": "string" },
          "activity_id": { "type": "string" }
        }
      },
      "SingleWrapperReaction": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/Reaction" }
        }
      },
      "UserSuggestionRequest": {
        "type": "object",
        "properties": {
          "duprIds": {
            "type": "array",
            "items": { "type": "string" },
            "uniqueItems": true
          }
        },
        "required": ["duprIds"]
      },
      "GameTrendResponse": {
        "type": "object",
        "properties": {
          "serial": { "type": "integer", "format": "int32", "example": 1 },
          "month": { "type": "string", "example": "January " },
          "gameWon": { "type": "integer", "format": "int32", "example": 10 },
          "gameLost": { "type": "integer", "format": "int32", "example": 10 },
          "totalGames": { "type": "integer", "format": "int32", "example": 20 }
        },
        "required": ["gameLost", "gameWon", "serial", "totalGames"]
      },
      "OverviewResponse": {
        "type": "object",
        "properties": {
          "all": { "type": "integer", "format": "int32", "example": 10 },
          "wins": { "type": "integer", "format": "int32", "example": 3 },
          "losses": { "type": "integer", "format": "int32", "example": 2 },
          "pending": { "type": "integer", "format": "int32", "example": 5 }
        },
        "required": ["all", "losses", "pending", "wins"]
      },
      "RatingOverviewResponse": {
        "type": "object",
        "properties": {
          "all": { "$ref": "#/components/schemas/OverviewResponse" },
          "doubles": { "$ref": "#/components/schemas/OverviewResponse" },
          "singles": { "$ref": "#/components/schemas/OverviewResponse" }
        },
        "required": ["all", "doubles", "singles"]
      },
      "SingleWrapperUserStatisticResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/UserStatisticResponse" }
        }
      },
      "TrendResponse": {
        "type": "object",
        "properties": {
          "gamesTrend": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/GameTrendResponse" }
          }
        },
        "required": ["gamesTrend"]
      },
      "UserStatisticResponse": {
        "type": "object",
        "properties": {
          "overview": { "$ref": "#/components/schemas/RatingOverviewResponse" },
          "trends": { "$ref": "#/components/schemas/TrendResponse" }
        },
        "required": ["overview", "trends"]
      },
      "SingleWrapperSponsorLogoResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/SponsorLogoResponse" }
        }
      },
      "SingleWrapperPlayerRatingResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PlayerRatingResponse" }
        }
      },
      "ArrayWrapperPlayerInitializationProgressResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlayerInitializationProgressResponse"
            }
          }
        }
      },
      "PlayerInitializationProgressResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "data": {
            "$ref": "#/components/schemas/PlayerInitializationDataResponse"
          },
          "message": { "type": "string" }
        },
        "required": ["message", "status"]
      },
      "ResultUserComplianceDataResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserComplianceDataResponse"
            }
          },
          "errors": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Error" }
          }
        },
        "required": ["errors", "results", "status"]
      },
      "UserComplianceDataResponse": {
        "type": "object",
        "properties": {
          "complianceData": {
            "type": "object",
            "additionalProperties": { "type": "string" }
          }
        },
        "required": ["complianceData"]
      },
      "PreCalculatedUserStatisticsResponse": {
        "type": "object",
        "properties": {
          "singles": { "$ref": "#/components/schemas/MatchRatings" },
          "doubles": { "$ref": "#/components/schemas/MatchRatings" },
          "resulOverview": {
            "$ref": "#/components/schemas/RatingsOverviewResponse"
          }
        },
        "required": ["doubles", "resulOverview", "singles"]
      },
      "RatingsOverviewResponse": {
        "type": "object",
        "properties": {
          "wins": { "type": "integer", "format": "int32" },
          "losses": { "type": "integer", "format": "int32" },
          "pending": { "type": "integer", "format": "int32" }
        },
        "required": ["losses", "pending", "wins"]
      },
      "SingleWrapperPreCalculatedUserStatisticsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": {
            "$ref": "#/components/schemas/PreCalculatedUserStatisticsResponse"
          }
        }
      },
      "PagePostReport": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/PostReport" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "SingleWrapperPagePostReport": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PagePostReport" }
        }
      },
      "BasicInfo": {
        "type": "object",
        "properties": { "duprId": { "type": "string", "example": "GB0NV05E" } },
        "required": ["duprId"]
      },
      "ResultBasicInfo": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BasicInfo" }
          },
          "errors": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Error" }
          }
        },
        "required": ["errors", "results", "status"]
      },
      "SingleWrapperUnclaimedPlayerResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/UnclaimedPlayerResponse" }
        }
      },
      "PagePlayerRatingHistory": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/PlayerRatingHistory" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "PlayerRatingHistory": {
        "type": "object",
        "properties": {
          "ratingHistoryId": { "type": "integer", "format": "int64" },
          "userId": { "type": "integer", "format": "int64" },
          "userName": { "type": "string" },
          "userEmail": { "type": "string" },
          "singles": { "type": "number" },
          "singlesProvisional": { "type": "boolean" },
          "doubles": { "type": "number" },
          "doublesProvisional": { "type": "boolean" },
          "changedByAdmin": { "type": "boolean" },
          "created": { "type": "string", "format": "date-time" },
          "matchDate": { "type": "string", "format": "date" },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          }
        },
        "required": [
          "changedByAdmin",
          "created",
          "doublesProvisional",
          "ratingHistoryId",
          "singlesProvisional",
          "userEmail",
          "userId",
          "userName"
        ]
      },
      "SingleWrapperPagePlayerRatingHistory": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PagePlayerRatingHistory" }
        }
      },
      "SingleWrapperAccountStatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/AccountStatusResponse" }
        }
      },
      "AccountLinkResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://stripe.com/express/Ln7FfnNpUcCU"
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "example": 1645628420
          },
          "expiresAt": {
            "type": "integer",
            "format": "int64",
            "example": 1645628720
          }
        },
        "required": ["created", "url"]
      },
      "SingleWrapperAccountLinkResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/AccountLinkResponse" }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "addressLine": { "type": "string" },
          "formattedAddress": { "type": "string" },
          "types": { "type": "string" },
          "placeId": { "type": "string" },
          "precision": {
            "type": "string",
            "enum": [
              "ROOFTOP",
              "RANGE_INTERPOLATED",
              "GEOMETRIC_CENTER",
              "APPROXIMATE",
              "UNKNOWN"
            ]
          },
          "latitude": { "type": "number" },
          "longitude": { "type": "number" },
          "components": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Component" }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "create": { "type": "string", "format": "date-time" }
        },
        "required": ["formattedAddress", "latitude", "longitude"]
      },
      "Club": {
        "type": "object",
        "properties": {
          "clubId": { "type": "integer", "format": "int64" },
          "clubName": { "type": "string" },
          "clubCode": { "type": "string" },
          "clubType": { "$ref": "#/components/schemas/ClubType" },
          "mediaUrl": { "type": "string" },
          "manifest": { "$ref": "#/components/schemas/TextContent" },
          "shortDescription": { "$ref": "#/components/schemas/TextContent" },
          "longDescription": { "$ref": "#/components/schemas/TextContent" },
          "approvalStatus": {
            "type": "string",
            "enum": ["PENDING", "IN_REVIEW", "APPROVED", "REJECTED"]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "attributes": { "$ref": "#/components/schemas/JsonNode" },
          "address": { "$ref": "#/components/schemas/Address" },
          "shortAddress": { "type": "string" },
          "revenueModel": { "$ref": "#/components/schemas/RevenueModel" },
          "currencyDetails": { "$ref": "#/components/schemas/CurrencyDetails" },
          "created": { "type": "string", "format": "date-time" },
          "clubJoinType": {
            "type": "string",
            "enum": [
              "INVITATION",
              "REQUEST",
              "INVITATION_CSV",
              "PARTNER_INVITE"
            ]
          },
          "location": { "type": "string" },
          "distanceInMiles": { "type": "number", "format": "double" }
        },
        "required": [
          "approvalStatus",
          "clubCode",
          "clubId",
          "clubName",
          "distanceInMiles",
          "status"
        ]
      },
      "ClubActorResponse": {
        "allOf": [
          { "$ref": "#/components/schemas/NotificationResponse" },
          {
            "type": "object",
            "properties": {
              "clubV1": { "$ref": "#/components/schemas/ClubV1" }
            }
          }
        ],
        "required": ["clubV1"]
      },
      "ClubType": {
        "type": "object",
        "properties": {
          "clubTypeId": { "type": "integer", "format": "int64" },
          "clubType": {
            "type": "string",
            "enum": [
              "ASSOCIATION",
              "CLUB",
              "COMPANY",
              "FACILITY",
              "GOVT_DEPARTMENT",
              "NON_PROFIT",
              "INDIVIDUAL"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          }
        },
        "required": ["clubType", "clubTypeId", "status"]
      },
      "ClubV1": {
        "type": "object",
        "properties": {
          "urn": { "$ref": "#/components/schemas/ClubV1Urn" },
          "club": { "$ref": "#/components/schemas/Club" }
        },
        "required": ["club", "urn"]
      },
      "ClubV1Urn": {
        "type": "object",
        "properties": {
          "path": { "type": "string" },
          "type": { "type": "string" },
          "version": { "type": "string" },
          "id": { "type": "string" },
          "nid": { "type": "string" }
        },
        "required": ["id", "nid", "path", "type", "version"]
      },
      "Component": {
        "type": "object",
        "properties": {
          "shortName": { "type": "string" },
          "longName": { "type": "string" },
          "types": { "type": "string" }
        }
      },
      "CurrencyDetails": {
        "type": "object",
        "properties": {
          "currencyCode": { "type": "string" },
          "currencySymbol": { "type": "string" },
          "currencyName": { "type": "string" },
          "currencyRate": { "type": "number", "format": "double" }
        },
        "required": ["currencyCode"]
      },
      "EpochSecondsTimestampV1Urn": {
        "allOf": [{ "$ref": "#/components/schemas/TimestampUrn" }],
        "required": ["id", "nid", "path", "type", "version"]
      },
      "GetStreamCommentResponse": {
        "allOf": [
          { "$ref": "#/components/schemas/NotificationResponse" },
          {
            "type": "object",
            "properties": {
              "getStreamCommentV1": {
                "$ref": "#/components/schemas/GetStreamCommentResponseV1Urn"
              }
            }
          }
        ],
        "required": ["getStreamCommentV1"]
      },
      "GetStreamCommentResponseV1Urn": {
        "type": "object",
        "properties": {
          "path": { "type": "string" },
          "type": { "type": "string" },
          "version": { "type": "string" },
          "id": { "type": "string" },
          "nid": { "type": "string" }
        },
        "required": ["id", "nid", "path", "type", "version"]
      },
      "GetStreamPostResponse": {
        "allOf": [
          { "$ref": "#/components/schemas/NotificationResponse" },
          {
            "type": "object",
            "properties": {
              "getStreamPostV1": {
                "$ref": "#/components/schemas/GetStreamPostResponseV1Urn"
              }
            }
          }
        ],
        "required": ["getStreamPostV1"]
      },
      "GetStreamPostResponseV1Urn": {
        "type": "object",
        "properties": {
          "path": { "type": "string" },
          "type": { "type": "string" },
          "version": { "type": "string" },
          "id": { "type": "string" },
          "nid": { "type": "string" }
        },
        "required": ["id", "nid", "path", "type", "version"]
      },
      "GrantedAuthority": {
        "type": "object",
        "properties": { "authority": { "type": "string" } }
      },
      "NotificationHistoryResponse": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "id": { "type": "string" },
          "data": {
            "type": "object",
            "additionalProperties": {
              "oneOf": [
                { "$ref": "#/components/schemas/ClubActorResponse" },
                { "$ref": "#/components/schemas/GetStreamCommentResponse" },
                { "$ref": "#/components/schemas/GetStreamPostResponse" },
                { "$ref": "#/components/schemas/TimestampResponse" },
                {
                  "$ref": "#/components/schemas/UnknownNotificationResponseV1"
                },
                { "$ref": "#/components/schemas/UserActorResponse" }
              ]
            }
          }
        },
        "required": ["data", "id", "type"]
      },
      "NotificationResponse": { "type": "object" },
      "Role": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "created": { "type": "string", "format": "date-time" },
          "permissions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Permission" },
            "uniqueItems": true
          }
        }
      },
      "TextContent": {
        "type": "object",
        "properties": {
          "contentId": { "type": "integer", "format": "int64" },
          "header": { "type": "string" },
          "headerType": { "type": "string" },
          "content": { "type": "string" },
          "contentType": { "type": "string" },
          "footer": { "type": "string" },
          "footerType": { "type": "string" }
        },
        "required": [
          "content",
          "contentId",
          "contentType",
          "footer",
          "footerType",
          "header",
          "headerType"
        ]
      },
      "TimestampResponse": {
        "allOf": [
          { "$ref": "#/components/schemas/NotificationResponse" },
          {
            "type": "object",
            "properties": {
              "timestamp": {
                "oneOf": [
                  { "$ref": "#/components/schemas/EpochSecondsTimestampV1Urn" },
                  { "$ref": "#/components/schemas/UnknownTimestampV1Urn" }
                ]
              }
            }
          }
        ],
        "required": ["timestamp"]
      },
      "TimestampUrn": {
        "type": "object",
        "properties": {
          "path": { "type": "string" },
          "type": { "type": "string" },
          "version": { "type": "string" },
          "id": { "type": "string" },
          "nid": { "type": "string" }
        },
        "required": ["id", "nid", "path", "type", "version"]
      },
      "UnknownNotificationResponseV1": {
        "allOf": [
          { "$ref": "#/components/schemas/NotificationResponse" },
          {
            "type": "object",
            "properties": {
              "urn": { "$ref": "#/components/schemas/Urn", "writeOnly": true }
            }
          }
        ]
      },
      "UnknownTimestampV1Urn": {
        "allOf": [{ "$ref": "#/components/schemas/TimestampUrn" }],
        "required": ["id", "nid", "path", "type", "version"]
      },
      "Urn": {
        "type": "object",
        "properties": {
          "path": { "type": "string" },
          "type": { "type": "string" },
          "version": { "type": "string" },
          "id": { "type": "string" },
          "nid": { "type": "string" }
        },
        "required": ["id", "nid", "path", "type", "version"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "fullName": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "email": { "type": "string" },
          "isValidEmail": { "type": "boolean" },
          "secret": { "type": "string" },
          "isoCode": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "isValidPhone": { "type": "boolean" },
          "nickname": { "type": "string" },
          "displayUsername": { "type": "boolean" },
          "mediaId": { "type": "integer", "format": "int64" },
          "imageUrl": { "type": "string" },
          "referralCode": { "type": "string" },
          "gender": { "type": "string", "enum": ["MALE", "FEMALE"] },
          "birthdate": { "type": "string", "format": "date" },
          "hand": {
            "type": "string",
            "enum": ["RIGHT", "LEFT", "BOTH", "NONE"]
          },
          "role": { "$ref": "#/components/schemas/Role" },
          "customerKey": { "type": "string" },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "created": { "type": "string", "format": "date-time" },
          "externalId": { "type": "string" },
          "restricted": { "type": "boolean" },
          "reliabilityScore": { "type": "integer", "format": "int32" },
          "lucraConnected": { "type": "boolean" },
          "isEnabled": { "type": "boolean" },
          "username": { "type": "string" },
          "isAccountNonExpired": { "type": "boolean" },
          "password": { "type": "string" },
          "authorities": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/GrantedAuthority" }
          },
          "isAdmin": { "type": "boolean" },
          "validEmail": { "type": "boolean", "writeOnly": true },
          "validPhone": { "type": "boolean", "writeOnly": true },
          "isAccountNonLocked": { "type": "boolean" },
          "isCredentialsNonExpired": { "type": "boolean" }
        },
        "required": [
          "authorities",
          "displayUsername",
          "email",
          "fullName",
          "isAccountNonExpired",
          "isAccountNonLocked",
          "isAdmin",
          "isCredentialsNonExpired",
          "isEnabled",
          "password",
          "username"
        ]
      },
      "UserActorResponse": {
        "allOf": [
          { "$ref": "#/components/schemas/NotificationResponse" },
          {
            "type": "object",
            "properties": {
              "userV1": { "$ref": "#/components/schemas/UserV1" }
            }
          }
        ],
        "required": ["userV1"]
      },
      "UserV1": {
        "type": "object",
        "properties": {
          "urn": { "$ref": "#/components/schemas/UserV1Urn" },
          "user": { "$ref": "#/components/schemas/User" }
        },
        "required": ["urn", "user"]
      },
      "UserV1Urn": {
        "type": "object",
        "properties": {
          "path": { "type": "string" },
          "type": { "type": "string" },
          "version": { "type": "string" },
          "id": { "type": "string" },
          "nid": { "type": "string" }
        },
        "required": ["id", "nid", "path", "type", "version"]
      },
      "SingleWrapperMiLPEvent": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/MiLPEvent" }
        }
      },
      "ArrayWrapperMiLPTeamDivision": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MiLPTeamDivision" }
          }
        }
      },
      "MiLPTeamDivision": {
        "type": "object",
        "properties": {
          "divisionType": {
            "type": "string",
            "enum": [
              "DUPR12",
              "DUPR14",
              "DUPR16",
              "DUPR18",
              "DUPR20",
              "DUPR22",
              "DUPR_OPEN"
            ]
          },
          "teams": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MiLPTeam" }
          }
        },
        "required": ["divisionType", "teams"]
      },
      "ArrayWrapperScoreFormatResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ScoreFormatResponse" }
          }
        }
      },
      "ArrayWrapperObject": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": { "type": "array", "items": { "type": "object" } }
        }
      },
      "ArrayWrapperLong": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": { "type": "integer", "format": "int64" }
          }
        }
      },
      "Creator": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "email": { "type": "string" }
        },
        "required": ["email", "id", "name"]
      },
      "OpenPlayEvent": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "name": { "type": "string" },
          "date": { "type": "string", "format": "date" },
          "time": { "$ref": "#/components/schemas/TimeRange" },
          "location": { "type": "string" },
          "maxPlayers": { "type": "integer", "format": "int32" },
          "rating": { "$ref": "#/components/schemas/RatingRange" },
          "description": { "type": "string" },
          "registeredPlayers": { "type": "integer", "format": "int32" },
          "creator": { "$ref": "#/components/schemas/Creator" }
        },
        "required": ["creator", "date", "id", "maxPlayers", "time"]
      },
      "SingleWrapperOpenPlayEvent": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/OpenPlayEvent" }
        }
      },
      "OpenPlayMember": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int64" },
          "duprId": { "type": "string" },
          "singles": { "type": "string" },
          "doubles": { "type": "string" },
          "name": { "type": "string" },
          "createAt": { "type": "string", "format": "date" },
          "eventId": { "type": "integer", "format": "int64" }
        },
        "required": ["eventId", "id"]
      },
      "PageOpenPlayMember": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/OpenPlayMember" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "SingleWrapperPageOpenPlayMember": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PageOpenPlayMember" }
        }
      },
      "PagePlayerQueue": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/PlayerQueue" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "PlayerQueue": {
        "type": "object",
        "properties": {
          "event": { "$ref": "#/components/schemas/OpenPlayEvent" },
          "createAt": { "type": "string", "format": "date" }
        }
      },
      "SingleWrapperPagePlayerQueue": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PagePlayerQueue" }
        }
      },
      "PageOpenPlayEvent": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/OpenPlayEvent" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "SingleWrapperPageOpenPlayEvent": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PageOpenPlayEvent" }
        }
      },
      "PolicyDetailsResponse": {
        "type": "object",
        "properties": {
          "refundPolicy": {
            "$ref": "#/components/schemas/LeagueContentResponse"
          },
          "safetyPolicy": {
            "$ref": "#/components/schemas/LeagueContentResponse"
          }
        }
      },
      "SingleWrapperPolicyDetailsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PolicyDetailsResponse" }
        }
      },
      "ArrayWrapperString": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": { "type": "array", "items": { "type": "string" } }
        }
      },
      "SingleWrapperClubResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/ClubResponse" }
        }
      },
      "ArrayWrapperRoleResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/RoleResponse" }
          }
        }
      },
      "SingleWrapperStaffClubMemberResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/StaffClubMemberResponse" }
        }
      },
      "StaffClubMember": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 1231231
          },
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 1231231
          },
          "roleId": {
            "type": "integer",
            "format": "int64",
            "example": 1231231
          },
          "approval": {
            "type": "string",
            "enum": ["PENDING", "IN_REVIEW", "APPROVED", "REJECTED"],
            "example": "APPROVED"
          },
          "name": { "type": "string", "example": "John Doe" },
          "email": { "type": "string", "example": "john@xyz.com" },
          "phone": { "type": "string", "example": 211564789 },
          "mediaUrl": {
            "type": "string",
            "example": "https://dupr-dev.s3.us-east-1.amazonaws.com/images/profile-e7718f70-d6a1-11eb-941a-09a499721974.png"
          },
          "duprId": { "type": "string", "example": "ALSJD1234" },
          "isoAlpha2Code": { "type": "string", "example": "US" }
        },
        "required": [
          "approval",
          "clubId",
          "duprId",
          "email",
          "isoAlpha2Code",
          "name",
          "roleId",
          "userId"
        ]
      },
      "StaffClubMemberResponse": {
        "type": "object",
        "properties": {
          "directors": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/StaffClubMember" }
          },
          "organizers": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/StaffClubMember" }
          },
          "maxDirectorCount": { "type": "integer", "format": "int32" },
          "maxOrganizerCount": { "type": "integer", "format": "int32" }
        },
        "required": [
          "directors",
          "maxDirectorCount",
          "maxOrganizerCount",
          "organizers"
        ]
      },
      "SingleWrapperMapStringObject": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": {
            "type": "object",
            "additionalProperties": { "type": "object" }
          }
        }
      },
      "ArrayWrapperClubListingResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ClubListingResponse" }
          }
        }
      },
      "ClubListingResponse": {
        "type": "object",
        "properties": {
          "clubId": {
            "type": "integer",
            "format": "int64",
            "example": 1231231
          },
          "clubName": { "type": "string", "example": "Stillwater Pickleball" },
          "mediaUrl": { "type": "string", "example": 4684651981 },
          "shortAddress": {
            "type": "string",
            "example": "Miami-Dade County, FL, US"
          },
          "clubMemberCount": {
            "type": "integer",
            "format": "int32",
            "example": 12
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "example": "2020-03-04T17:21:16.000Z"
          },
          "role": { "$ref": "#/components/schemas/ClubRoleResponse" }
        },
        "required": ["clubId", "clubMemberCount", "clubName"]
      },
      "ArrayWrapperCurrencyDetailsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CurrencyDetailsResponse" }
          }
        }
      },
      "SingleWrapperCurrencyDetailsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/CurrencyDetailsResponse" }
        }
      },
      "ChatTokenResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 26518181881
          },
          "fullName": { "type": "string", "example": "Brian Lara" },
          "token": {
            "type": "string",
            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9."
          },
          "imageUrl": {
            "type": "string",
            "example": "https://dupr-dev.s3.amazonaws.com/profile/image.png"
          }
        },
        "required": ["fullName", "token"]
      },
      "SingleWrapperChatTokenResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/ChatTokenResponse" }
        }
      },
      "SingleWrapperBracketResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/BracketResponse" }
        }
      },
      "LeagueStandingResponse": {
        "type": "object",
        "properties": {
          "bracketId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "registrationId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "round": { "type": "integer", "format": "int32", "example": 0 },
          "matchWon": { "type": "integer", "format": "int32", "example": 15 },
          "matchLost": { "type": "integer", "format": "int32", "example": 15 },
          "gameWon": { "type": "integer", "format": "int32", "example": 15 },
          "gameLost": { "type": "integer", "format": "int32", "example": 15 },
          "pointsScored": {
            "type": "integer",
            "format": "int32",
            "example": 15
          },
          "pointsConceded": {
            "type": "integer",
            "format": "int32",
            "example": 15
          },
          "pointDifference": {
            "type": "integer",
            "format": "int32",
            "example": 15
          },
          "pointDiffPercentage": {
            "type": "number",
            "format": "double",
            "example": 2.5
          },
          "player1": { "$ref": "#/components/schemas/PlayerResponse" },
          "player2": { "$ref": "#/components/schemas/PlayerResponse" },
          "rank": { "type": "integer", "format": "int32", "example": 1 }
        },
        "required": [
          "bracketId",
          "gameLost",
          "gameWon",
          "matchLost",
          "matchWon",
          "pointDiffPercentage",
          "pointDifference",
          "pointsConceded",
          "pointsScored",
          "registrationId",
          "round"
        ]
      },
      "PageLeagueStandingResponse": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/LeagueStandingResponse" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "SingleWrapperPageLeagueStandingResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": {
            "$ref": "#/components/schemas/PageLeagueStandingResponse"
          }
        }
      },
      "ArrayWrapperMatchRound": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MatchRound" }
          }
        }
      },
      "BracketDetailsResponse": {
        "type": "object",
        "properties": {
          "elimination": {
            "type": "string",
            "enum": [
              "SINGLE",
              "DOUBLE",
              "DOUBLE_PREVENTED",
              "ROUND_ROBIN",
              "COMPASS",
              "FLEX"
            ]
          },
          "eventFormat": { "type": "string", "enum": ["SINGLES", "DOUBLES"] }
        }
      },
      "SingleWrapperBracketDetailsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/BracketDetailsResponse" }
        }
      },
      "SingleWrapperRegistrationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/RegistrationResponse" }
        }
      },
      "ArrayWrapperLeagueMatchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/LeagueMatchResponse" }
          }
        }
      },
      "ArrayWrapperPendingTeamsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PendingTeamsResponse" }
          }
        }
      },
      "PendingTeamsResponse": {
        "type": "object",
        "properties": {
          "teamSource": { "$ref": "#/components/schemas/LeagueTeamsResponse" },
          "teamTarget": { "$ref": "#/components/schemas/LeagueTeamsResponse" }
        },
        "required": ["teamSource", "teamTarget"]
      },
      "ArrayWrapperBracketResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BracketResponse" }
          }
        }
      },
      "ArrayWrapperLeagueTeamsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/LeagueTeamsResponse" }
          }
        }
      },
      "AdminUserProfile": {
        "type": "object",
        "properties": {
          "userId": { "type": "integer", "format": "int64" },
          "duprId": { "type": "string" },
          "externalId": { "type": "string" },
          "fullName": { "type": "string" },
          "email": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "isoCode": { "type": "string" }
        },
        "required": ["fullName", "userId"]
      },
      "SingleWrapperAdminUserProfile": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/AdminUserProfile" }
        }
      },
      "ArrayWrapperInformativeBannerResponce": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InformativeBannerResponce"
            }
          }
        }
      },
      "BannerContentResponce": {
        "type": "object",
        "properties": {
          "contentId": { "type": "integer", "format": "int64" },
          "header": { "type": "string" },
          "headerType": { "type": "string" },
          "content": { "type": "string" },
          "contentType": { "type": "string" },
          "footer": { "type": "string" },
          "footerType": { "type": "string" }
        },
        "required": ["contentId"]
      },
      "InformativeBannerResponce": {
        "type": "object",
        "properties": {
          "bannerId": { "type": "integer", "format": "int64" },
          "description": {
            "$ref": "#/components/schemas/BannerContentResponce"
          },
          "title": { "type": "string" },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "startDateTime": { "type": "string", "format": "date-time" },
          "endDateTime": { "type": "string", "format": "date-time" }
        }
      },
      "RatingLeaderboardRequest": {
        "type": "object",
        "properties": {
          "minPlayerAge": { "type": "integer", "format": "int32" },
          "maxPlayerAge": { "type": "integer", "format": "int32" },
          "ratingType": { "type": "string", "enum": ["SINGLES", "DOUBLES"] },
          "gender": { "type": "string", "enum": ["MALE", "FEMALE"] },
          "country": { "type": "string" },
          "state": { "type": "string" },
          "limit": { "type": "integer", "format": "int32" }
        },
        "required": [
          "country",
          "gender",
          "limit",
          "maxPlayerAge",
          "minPlayerAge",
          "ratingType",
          "state"
        ]
      },
      "PageUserSubscription": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/UserSubscription" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "UserSubscription": {
        "type": "object",
        "properties": {
          "userId": { "type": "integer", "format": "int64" },
          "duprId": { "type": "string" },
          "cost": { "type": "number", "format": "double" },
          "billingPeriod": {
            "type": "string",
            "enum": ["WEEKLY", "MONTHLY", "ANNUAL"]
          },
          "startDate": { "type": "string", "format": "date" },
          "renewalDate": { "type": "string", "format": "date" },
          "isActive": { "type": "boolean" }
        },
        "required": [
          "billingPeriod",
          "cost",
          "duprId",
          "isActive",
          "renewalDate",
          "startDate",
          "userId"
        ]
      },
      "ArrayWrapperGeocodingResult": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/GeocodingResult" }
          }
        }
      },
      "SingleWrapperGeocodingResult": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/GeocodingResult" }
        }
      },
      "AutocompletePrediction": {
        "type": "object",
        "properties": {
          "description": { "type": "string" },
          "placeId": { "type": "string" },
          "types": { "type": "array", "items": { "type": "string" } },
          "terms": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Term" }
          },
          "distanceMeters": { "type": "integer", "format": "int32" },
          "matchedSubstrings": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MatchedSubstring" }
          },
          "structuredFormatting": {
            "$ref": "#/components/schemas/AutocompleteStructuredFormatting"
          }
        }
      },
      "AutocompleteStructuredFormatting": {
        "type": "object",
        "properties": {
          "mainText": { "type": "string" },
          "mainTextMatchedSubstrings": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MatchedSubstring" }
          },
          "secondaryText": { "type": "string" }
        }
      },
      "MatchedSubstring": {
        "type": "object",
        "properties": {
          "length": { "type": "integer", "format": "int32" },
          "offset": { "type": "integer", "format": "int32" }
        }
      },
      "SingleWrapperAutocompletePrediction[]": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AutocompletePrediction" }
          }
        }
      },
      "Term": {
        "type": "object",
        "properties": {
          "offset": { "type": "integer", "format": "int32" },
          "value": { "type": "string" }
        }
      },
      "ArrayWrapperPostResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PostResponse" }
          }
        }
      },
      "ArrayWrapperReaction": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Reaction" }
          }
        }
      },
      "ArrayWrapperPostReactionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PostReactionResponse" }
          }
        }
      },
      "PageUserSuggestion": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Offset value you sent in the request",
            "example": 90
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Limit value you sent in the request",
            "example": 10
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of results available in database",
            "example": 100
          },
          "hits": {
            "type": "array",
            "description": "Array of results, can be empty.",
            "items": { "$ref": "#/components/schemas/UserSuggestion" }
          },
          "totalValueRelation": {
            "type": "string",
            "description": "Relation to total results available.",
            "enum": ["EQUAL_TO", "GREATER_THAN_OR_EQUAL_TO"],
            "example": "GREATER_THAN_OR_EQUAL_TO"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Are there any more results to fetch",
            "example": false
          },
          "empty": {
            "type": "boolean",
            "description": "Are results empty",
            "example": false
          },
          "hasPrevious": {
            "type": "boolean",
            "description": "Is there any previous page",
            "example": true
          }
        },
        "required": [
          "empty",
          "hasMore",
          "hasPrevious",
          "limit",
          "offset",
          "total",
          "totalValueRelation"
        ]
      },
      "SingleWrapperPageUserSuggestion": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/PageUserSuggestion" }
        }
      },
      "UserFollow": {
        "type": "object",
        "properties": {
          "userId": { "type": "integer", "format": "int64" },
          "name": { "type": "string" }
        },
        "required": ["name", "userId"]
      },
      "UserSuggestion": {
        "type": "object",
        "properties": {
          "userId": { "type": "integer", "format": "int64" },
          "duprId": { "type": "string" },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "UPCOMING",
              "IN_PROGRESS",
              "COMPLETE",
              "CANCELLED",
              "NOT_CONFIRMED",
              "INVITED",
              "CONFIRMED",
              "MATCH_BYE",
              "PENDING",
              "FORFEITED",
              "DELETED",
              "ONGOING",
              "SUSPENDED_TOS_13"
            ]
          },
          "name": { "type": "string" },
          "imageUrl": { "type": "string" },
          "address": { "type": "string" },
          "briefFollowers": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserFollow" }
          },
          "followerCount": { "type": "integer", "format": "int32" }
        },
        "required": ["duprId", "name", "status", "userId"]
      },
      "ArrayWrapperActivityUser": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "results": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ActivityUser" }
          }
        }
      },
      "FollowingInfo": {
        "type": "object",
        "properties": {
          "isFollowed": { "type": "boolean", "example": true },
          "followers": { "type": "integer", "format": "int32", "example": 0 },
          "followings": { "type": "integer", "format": "int32", "example": 0 }
        },
        "required": ["followers", "followings", "isFollowed"]
      },
      "SingleWrapperFollowingInfo": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["SUCCESS", "FAILURE", "REDIRECT", "PARTIAL"]
          },
          "message": {
            "type": "string",
            "example": "Show this message to user."
          },
          "result": { "$ref": "#/components/schemas/FollowingInfo" }
        }
      },
      "DeleteEventMediaRequest": {
        "type": "object",
        "properties": {
          "leagueId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "liabilityWaiverId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          },
          "mediaId": {
            "type": "integer",
            "format": "int64",
            "example": 4684651981
          }
        },
        "required": ["leagueId"]
      },
      "RemoveClubRestrictionsRequest": {
        "type": "object",
        "properties": {
          "clubId": { "type": "integer", "format": "int64" },
          "restrictions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["UNKNOWN", "MATCH_UPLOAD", "MEMBER_INVITE_WEB"]
            },
            "uniqueItems": true
          }
        },
        "required": ["clubId", "restrictions"]
      },
      "RemoveAllClubRestrictionsRequest": {
        "type": "object",
        "properties": { "clubId": { "type": "integer", "format": "int64" } },
        "required": ["clubId"]
      },
      "ReactDeleteRequest": {
        "type": "object",
        "description": "The react Id",
        "properties": {
          "id": {
            "type": "string",
            "example": "React Id from Getstream: db0f3ce2-99ab-4ec0-b006-333de4a3d47b"
          },
          "react": {
            "type": "string",
            "enum": ["LIKE", "COMMENT"],
            "example": "COMMENT|LIKE"
          }
        },
        "required": ["id", "react"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
